{"version":3,"file":"1356b8f4536a1a3bcf30102aebb8a1391d4b2867-05e148ad756487bab3f9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/shared/useMediaQuery.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionPropTypes.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionProviderContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionGroup.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionHeader.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionContent.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionStore.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/Accordion.js"],"sourcesContent":["import React from 'react'\nimport { isTrue } from './component-helper'\nimport Context from './Context'\nimport {\n  makeMediaQueryList,\n  createMediaQueryListener,\n  isMatchMediaSupported,\n} from './MediaQueryUtils'\nimport type {\n  MediaQueryProps,\n  MediaQueryListener,\n} from './MediaQueryUtils'\n\nexport type { MediaQueryProps }\n\nexport default function useMediaQuery(props: MediaQueryProps) {\n  const context = React.useContext(Context)\n  const { query, when, not, matchOnSSR, disabled } = props\n\n  let matches = React.useMemo(() => {\n    if (disabled) {\n      return false // stop here\n    }\n\n    return isTrue(matchOnSSR) && !isMatchMediaSupported()\n  }, [disabled, matchOnSSR])\n\n  const mediaQueryList = React.useRef(\n    makeMediaQueryList(props, context.breakpoints)\n  )\n  if (mediaQueryList.current?.matches) {\n    matches = true\n  }\n\n  const [match, matchUpdate] = React.useState(matches)\n\n  const listenerRef = React.useRef<MediaQueryListener>()\n  React.useLayoutEffect(() => {\n    if (disabled) {\n      return // stop here\n    }\n\n    if (typeof listenerRef.current === 'function') {\n      listenerRef.current()\n\n      mediaQueryList.current = makeMediaQueryList(\n        props,\n        context.breakpoints\n      )\n      matchUpdate(mediaQueryList.current?.matches)\n    }\n\n    listenerRef.current = createMediaQueryListener(\n      mediaQueryList.current,\n      (match) => matchUpdate(match)\n    )\n\n    return listenerRef.current\n  }, [query, when, not, disabled]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return Boolean(match)\n}\n","/**\n * Web Accordion Props\n *\n */\n\nimport PropTypes from 'prop-types'\nimport { spacingPropTypes } from '../space/SpacingHelper'\n\nexport const accordionPropTypes = {\n  title: PropTypes.node,\n  expanded: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  no_animation: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  expanded_ssr: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  prerender: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  prevent_rerender: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  prevent_rerender_conditional: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  remember_state: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  contentRef: PropTypes.object,\n  flush_remembered_state: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  single_container: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  variant: PropTypes.oneOf(['plain', 'default', 'outlined', 'filled']),\n  left_component: PropTypes.node,\n  allow_close_all: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  id: PropTypes.string,\n  group: PropTypes.string,\n  element: PropTypes.node,\n  heading: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  heading_level: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  icon: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.shape({\n      closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    }),\n  ]),\n  icon_position: PropTypes.oneOf(['left', 'right']),\n  icon_size: PropTypes.string,\n  attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  class: PropTypes.string,\n\n  className: PropTypes.string,\n  children: PropTypes.node,\n\n  ...spacingPropTypes,\n\n  on_change: PropTypes.func,\n  on_state_update: PropTypes.func,\n}\n\nexport const accordionDefaultProps = {\n  title: null,\n  expanded: null,\n  no_animation: null,\n  expanded_ssr: null,\n  prerender: null,\n  prevent_rerender: null,\n  prevent_rerender_conditional: null,\n  remember_state: null,\n  contentRef: null,\n  flush_remembered_state: null,\n  single_container: null,\n  variant: 'outlined',\n  left_component: null,\n  allow_close_all: null,\n  disabled: null,\n  skeleton: null,\n  id: null,\n  group: null,\n  element: null,\n  heading: null,\n  heading_level: null,\n  icon: null,\n  icon_position: null,\n  icon_size: 'medium',\n  attributes: null,\n  class: null,\n\n  className: null,\n  children: null,\n\n  on_change: null,\n  on_state_update: null,\n}\n","/**\n * Web AccordionGroup Context\n *\n */\n\nimport React from 'react'\n\nconst AccordionGroupContext = React.createContext({})\n\nexport default AccordionGroupContext\n","/**\n * Web AccordionGroup Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\nimport {\n  accordionPropTypes,\n  accordionDefaultProps,\n} from './AccordionPropTypes'\n\nimport Context from '../../shared/Context'\nimport AccordionGroupContext from './AccordionProviderContext'\n\nexport default class AccordionGroup extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    ...accordionPropTypes,\n\n    expanded_id: PropTypes.string,\n    onInit: PropTypes.func,\n  }\n\n  static defaultProps = {\n    ...accordionDefaultProps,\n\n    expanded_id: null,\n    onInit: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this.state = {\n      _listenForPropChanges: true,\n    }\n  }\n\n  onChangeHandler = (event) => {\n    dispatchCustomElementEvent(this, 'on_change', {\n      id: event.id,\n      expanded: event.expanded,\n      event,\n    })\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      AccordionGroup.defaultProps,\n      this.context.Accordion,\n      this.context.getTranslation(this.props).Accordion\n    )\n\n    const {\n      expanded, // eslint-disable-line\n      expanded_id, // eslint-disable-line\n      prerender, // eslint-disable-line\n      prevent_rerender, // eslint-disable-line\n      single_container, // eslint-disable-line\n      contentRef, // eslint-disable-line\n      allow_close_all, // eslint-disable-line\n      remember_state, // eslint-disable-line\n      flush_remembered_state, // eslint-disable-line\n      disabled, // eslint-disable-line\n      group, // eslint-disable-line\n      onInit, // eslint-disable-line\n      className,\n      class: _className,\n\n      id: _id, // eslint-disable-line\n      children, // eslint-disable-line\n\n      ...rest\n    } = props\n\n    const id = this._id\n\n    const classes = classnames(\n      'dnb-accordion-group',\n      isTrue(single_container) && 'dnb-accordion-group--single-container',\n      createSpacingClasses(props),\n      className,\n      _className\n    )\n\n    const params = {\n      ...rest,\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    if (!props.group && isTrue(props.single_container)) {\n      props.group = makeUniqueId()\n    }\n\n    const context = {\n      ...props,\n      id,\n      onChange: this.onChangeHandler,\n    }\n\n    return (\n      <AccordionGroupContext.Provider value={context}>\n        <div className={classes}>\n          <span\n            id={id}\n            className=\"dnb-accordion-group__shell\"\n            role=\"group\"\n            {...params}\n          >\n            <span className=\"dnb-accordion-group__children\">\n              {children}\n            </span>\n          </span>\n        </div>\n      </AccordionGroupContext.Provider>\n    )\n  }\n}\n","/**\n * Web AccordionGroup Context\n *\n */\n\nimport React from 'react'\n\nconst AccordionContext = React.createContext({})\n\nexport default AccordionContext\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  isTrue,\n  validateDOMAttributes,\n  extendPropsWithContextInClassComponent,\n} from '../../shared/component-helper'\nimport IconPrimary from '../../components/icon-primary/IconPrimary'\nimport classnames from 'classnames'\nimport keycode from 'keycode'\nimport AccordionContext from './AccordionContext'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nfunction AccordionHeaderTitle({ children, ...rest }) {\n  return (\n    <span\n      className={classnames(\n        'dnb-accordion__header__title',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  )\n}\nAccordionHeaderTitle.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderTitle.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderDescription({ children, ...rest }) {\n  return children ? (\n    <span\n      className={classnames(\n        'dnb-accordion__header__description',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  ) : null\n}\nAccordionHeaderDescription.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderDescription.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderContainer({ children, ...rest }) {\n  return children ? (\n    <span\n      className={classnames(\n        'dnb-accordion__header__container',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  ) : null\n}\nAccordionHeaderContainer.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderContainer.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderIcon({ icon, expanded, ...rest }) {\n  return (\n    <span className=\"dnb-accordion__header__icon\">\n      <IconPrimary\n        {...rest}\n        icon={\n          typeof icon?.expanded !== 'undefined'\n            ? icon[expanded ? 'expanded' : 'closed']\n            : icon || 'chevron-down'\n        }\n        aria-hidden\n      />\n    </span>\n  )\n}\nAccordionHeaderIcon.propTypes = {\n  icon: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.shape({\n      closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    }),\n  ]),\n  size: PropTypes.string,\n  expanded: PropTypes.bool,\n}\nAccordionHeaderIcon.defaultProps = {\n  icon: null,\n  size: 'medium',\n  expanded: null,\n}\n\nexport default class AccordionHeader extends React.PureComponent {\n  static contextType = AccordionContext\n\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    description: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    left_component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    element: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    heading: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    heading_level: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    icon: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.func,\n      PropTypes.shape({\n        closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      }),\n    ]),\n    icon_position: PropTypes.oneOf(['left', 'right']),\n    icon_size: PropTypes.string,\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    no_animation: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n  }\n\n  static defaultProps = {\n    id: null, // make sure we have id here, so it gets picked up by extendPropsWithContextInClassComponent\n    title: null,\n    description: null,\n    left_component: null,\n    element: null,\n    heading: null,\n    heading_level: null,\n    icon: null,\n    icon_position: null,\n    icon_size: 'medium',\n    disabled: null,\n    skeleton: null,\n    no_animation: null,\n\n    className: null,\n    children: null,\n  }\n\n  static Container = AccordionHeaderContainer\n  static Icon = AccordionHeaderIcon\n  static Title = AccordionHeaderTitle\n  static Description = AccordionHeaderDescription\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  onKeyDownHandler = (event) => {\n    switch (keycode(event)) {\n      case 'enter':\n      case 'space':\n        event.preventDefault()\n        this.onClickHandler(event)\n        break\n    }\n  }\n\n  onClickHandler = (event) => {\n    const { id, group } = this.context\n\n    if (this.canClick()) {\n      const expanded = !this.context.expanded\n      this.context.callOnChange({ id, group, expanded, event })\n\n      this.setState({\n        hadClick: true,\n      })\n    }\n  }\n\n  onMouseOverHandler = () => {\n    this.setState({\n      hover: true,\n    })\n  }\n\n  onMouseOutHandler = () => {\n    this.setState({\n      hover: false,\n      hadClick: false,\n    })\n  }\n\n  canClick() {\n    const { expanded, allow_close_all, group } = this.context\n    return !group || (group && !expanded) || isTrue(allow_close_all)\n  }\n\n  render() {\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      AccordionHeader.defaultProps,\n      this.context\n    )\n\n    const {\n      id,\n\n      // 1. these props should be the same as ...\n      left_component,\n      expanded, // eslint-disable-line\n      title,\n      description,\n      element,\n      heading,\n      heading_level,\n      icon,\n      icon_size,\n      disabled,\n      skeleton,\n      no_animation,\n    } = props\n\n    const {\n      children,\n      className,\n\n      // 2. ... these\n      left_component: _left_component, // eslint-disable-line\n      expanded: _expanded, // eslint-disable-line\n      title: _title, // eslint-disable-line\n      description: _description, // eslint-disable-line\n      icon: _icon, // eslint-disable-line\n      icon_size: _icon_size, // eslint-disable-line\n      disabled: _disabled, // eslint-disable-line\n\n      ...rest\n    } = this.props\n\n    const { hover, hadClick } = this.state\n    let { icon_position } = props\n\n    const defaultParts = [\n      <AccordionHeaderIcon\n        key=\"icon\"\n        icon={icon}\n        size={icon_size}\n        expanded={this.context.expanded}\n      />,\n      <AccordionHeaderContainer key=\"container\">\n        {left_component}\n      </AccordionHeaderContainer>,\n      <AccordionHeaderTitle key=\"title\">\n        {title ||\n          (Array.isArray(children)\n            ? children.filter((cur) => !React.isValidElement(cur))\n            : children)}\n      </AccordionHeaderTitle>,\n      <AccordionHeaderDescription key=\"description\">\n        {description}\n      </AccordionHeaderDescription>,\n    ]\n\n    if (Array.isArray(children)) {\n      const removeParts = []\n      children.forEach((cur) => {\n        if (React.isValidElement(cur)) {\n          const part = defaultParts.find((c) => c.type === cur.type)\n          if (part) {\n            removeParts.push(part)\n          }\n\n          // if (cur.type === AccordionHeaderTitle) {\n          //   defaultParts.unshift(cur)\n          // } else {\n          //   defaultParts.push(cur)\n          // }\n\n          defaultParts.push(cur)\n        }\n      })\n      removeParts.forEach((part) => {\n        const index = defaultParts.findIndex((c) => c === part)\n        if (index > -1) {\n          defaultParts.splice(index, 1)\n        }\n      })\n    }\n\n    const partsToRender = []\n    const wrapperParts = []\n    const wrapperComp = (\n      <span className=\"dnb-accordion__header__wrapper\" key=\"wrapper\">\n        {wrapperParts}\n      </span>\n    )\n\n    defaultParts.forEach((part) => {\n      if (\n        React.isValidElement(part) &&\n        (part.type === AccordionHeaderTitle ||\n          part.type === AccordionHeaderDescription)\n      ) {\n        wrapperParts.push(part)\n        if (partsToRender.findIndex((c) => c === wrapperComp) === -1) {\n          partsToRender.push(wrapperComp)\n        }\n      } else {\n        partsToRender.push(part)\n      }\n    })\n\n    // position the icon to the right, if the element is not in the beginning\n    if (icon_position === null) {\n      const iconIndex = partsToRender.findIndex(\n        (c) => c.type === AccordionHeaderIcon\n      )\n      // because of the container at the beginning, we use 1\n      if (iconIndex > 1) {\n        icon_position = 'right'\n      }\n\n      if (left_component) {\n        icon_position = 'right'\n      }\n    }\n\n    const headerParams = {\n      id: `${id}-header`,\n      'aria-controls': `${id}-content`,\n      'aria-expanded': this.context.expanded,\n      role: 'button',\n      tabIndex: '0',\n      className: classnames(\n        'dnb-accordion__header',\n        icon_position && `dnb-accordion__header__icon--${icon_position}`,\n        hover && hadClick && 'dnb-accordion--hover',\n        !this.canClick() && 'dnb-accordion__header--prevent-click',\n        description && 'dnb-accordion__header--description',\n        no_animation && 'dnb-accordion__header--no-animation',\n        createSkeletonClass('font', skeleton, this.context),\n        createSpacingClasses(rest),\n        className\n      ),\n      disabled,\n      ...rest,\n    }\n\n    if (disabled || isTrue(skeleton)) {\n      headerParams.tabIndex = '-1'\n      headerParams.disabled = true\n      headerParams['aria-disabled'] = true\n    } else {\n      headerParams.onClick = this.onClickHandler\n      headerParams.onKeyDown = this.onKeyDownHandler\n      headerParams.onMouseOver = this.onMouseOverHandler\n      headerParams.onMouseOut = this.onMouseOutHandler\n    }\n\n    skeletonDOMAttributes(headerParams, skeleton, this.context)\n\n    validateDOMAttributes(this.props, headerParams)\n\n    let Element = 'div'\n    if (isTrue(heading)) {\n      headerParams.role = 'heading'\n      headerParams['aria-level'] = heading_level\n        ? String(heading_level)\n        : '2'\n    } else if (heading) {\n      headerParams.role = null\n      Element = heading\n    } else if (element) {\n      headerParams.role = null\n      Element = element\n    }\n\n    return <Element {...headerParams}>{partsToRender}</Element>\n  }\n}\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  warn,\n  isTrue,\n  validateDOMAttributes,\n  processChildren,\n  getPreviousSibling,\n} from '../../shared/component-helper'\nimport { useMediaQuery } from '../../shared'\nimport AccordionContext from './AccordionContext'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport HeightAnimation from '../height-animation/HeightAnimation'\n\nexport default function AccordionContent(props) {\n  const context = React.useContext(AccordionContext)\n\n  const {\n    id,\n    expanded,\n    prerender,\n    prevent_rerender,\n    single_container,\n    disabled,\n    no_animation,\n    contentRef,\n  } = context\n\n  const { className, children, instance, ...rest } = props\n\n  let elementRef = React.useRef(null)\n  const cacheRef = React.useRef(null)\n\n  if (contentRef) {\n    elementRef = contentRef\n  }\n\n  const setContainerHeight = () => {\n    const { single_container } = context\n\n    if (single_container) {\n      const contentElem = elementRef.current\n      if (contentElem) {\n        try {\n          contentElem.style.height = ''\n\n          const containerElement = getPreviousSibling(\n            'dnb-accordion-group--single-container',\n            contentElem\n          )\n\n          if (no_animation) {\n            containerElement.style.transitionDuration = '1ms'\n          }\n\n          const minHeight =\n            (contentElem.offsetHeight + contentElem.offsetTop) / 16\n          containerElement.style.minHeight = `${minHeight}rem`\n        } catch (e) {\n          warn(e)\n        }\n      }\n    }\n  }\n\n  const renderContent = () => {\n    const children = processChildren(props)\n\n    const {\n      expanded,\n      prerender,\n      prevent_rerender,\n      prevent_rerender_conditional,\n    } = context\n\n    let content = children\n\n    if (typeof content === 'string') {\n      content = <p className=\"dnb-p\">{content}</p>\n    }\n\n    if (isTrue(prevent_rerender)) {\n      /**\n       * Ensure we do not render, if it is not expanded\n       */\n      if (!(expanded || prerender)) {\n        content = null\n      }\n\n      // update the cache if children is not the same anymore\n      if (\n        isTrue(prevent_rerender_conditional) &&\n        cacheRef.current !== content\n      ) {\n        cacheRef.current = content\n      }\n\n      if (cacheRef.current) {\n        content = cacheRef.current\n      } else {\n        cacheRef.current = content\n      }\n    }\n\n    return content\n  }\n\n  React.useEffect(() => {\n    if (expanded && isTrue(single_container)) {\n      setContainerHeight()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children, expanded, single_container])\n\n  React.useState(() => {\n    if (\n      instance &&\n      Object.prototype.hasOwnProperty.call(instance, 'current')\n    ) {\n      instance.current = { setContainerHeight }\n    }\n  })\n\n  const isSmallScreen = useMediaQuery({\n    when: { max: 'small' },\n  })\n\n  const content = renderContent()\n\n  const wrapperParams = {\n    className: classnames('dnb-accordion__content', className),\n    ...rest,\n  }\n\n  const keepInDOM = prerender || prevent_rerender\n\n  const innerParams = {\n    id: `${id}-content`,\n    'aria-labelledby': `${id}-header`,\n    className: classnames(\n      'dnb-accordion__content__inner',\n      createSpacingClasses(rest)\n    ),\n  }\n\n  if (expanded) {\n    innerParams['aria-expanded'] = true\n  }\n\n  if (!expanded || disabled) {\n    innerParams.disabled = true\n    innerParams['aria-hidden'] = true\n  }\n\n  // to remove spacing props\n  validateDOMAttributes(props, wrapperParams)\n  validateDOMAttributes(null, innerParams)\n\n  const animate =\n    !no_animation && (single_container ? isSmallScreen : true)\n\n  return (\n    <HeightAnimation\n      {...wrapperParams}\n      open={expanded}\n      animate={animate}\n      keepInDOM={keepInDOM}\n      innerRef={elementRef}\n    >\n      <section {...innerParams}>{content}</section>\n    </HeightAnimation>\n  )\n}\n\nAccordionContent.propTypes = {\n  instance: PropTypes.object,\n  ...spacingPropTypes,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n}\n\nAccordionContent.defaultProps = {\n  instance: null,\n  className: null,\n  children: null,\n}\n","import { isTrue, warn } from '../../shared/component-helper'\n\ntype AccordionStoreInstance = {\n  _id: string\n  close: () => void\n}\nexport class AccordionStore {\n  _instances: Array<AccordionStoreInstance>\n  _id: string\n  constructor(id: string) {\n    this._id = id\n    this._instances = []\n  }\n  onChange({ id }: { id: string }) {\n    this._instances.forEach((inst) => {\n      if (inst._id !== id) {\n        inst.close()\n      }\n    })\n  }\n  addInstance(instance: AccordionStoreInstance) {\n    this._instances.push(instance)\n  }\n  removeInstance(instance) {\n    this._instances = this._instances.filter((inst) => inst !== instance)\n  }\n}\n\nexport type StoreDataReturn = {\n  id: string\n  expanded: boolean\n}\nexport type StoreOptions = {\n  force?: boolean\n}\n\nexport class Store {\n  id: string\n  group: string\n\n  constructor({ id, group }) {\n    this.id = id\n    this.group = group\n    return this\n  }\n\n  storeId(id = this.id) {\n    if (this.group) {\n      // Skip using the random ID\n      if (this.group[0] === '#') {\n        return null\n      }\n      id = this.group\n    }\n    return `dnb-accordion-${id}`\n  }\n\n  saveState(expanded: boolean, id = this.id, opts: StoreOptions = {}) {\n    if (id) {\n      try {\n        const store = this.getData() || ({} as StoreDataReturn)\n\n        if (this.group) {\n          if (expanded) {\n            store.id = id\n          } else if (opts && opts.force) {\n            store.id = null\n          }\n        } else {\n          store.expanded = expanded\n        }\n\n        const storeId = this.storeId(id)\n        if (storeId) {\n          window.localStorage.setItem(storeId, JSON.stringify(store))\n        }\n      } catch (e) {\n        //\n      }\n    } else {\n      rememberWarning()\n    }\n  }\n\n  getData(id = this.id): StoreDataReturn {\n    const storeId = this.storeId(id)\n\n    if (storeId) {\n      try {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            window.localStorage,\n            storeId\n          )\n        ) {\n          return JSON.parse(window.localStorage.getItem(storeId))\n        }\n      } catch (e) {\n        //\n      }\n    }\n\n    return null\n  }\n\n  getState(id = this.id) {\n    let state = null\n\n    const store = this.getData(id)\n\n    if (store) {\n      if (typeof store.id !== 'undefined') {\n        state = id === store.id\n      } else if (typeof store.expanded !== 'undefined') {\n        state = isTrue(store.expanded)\n      }\n    }\n\n    return state\n  }\n\n  flush(id = this.id) {\n    if (id) {\n      try {\n        const storeId = this.storeId(id)\n        if (storeId) {\n          window.localStorage.setItem(storeId, null)\n        }\n      } catch (e) {\n        //\n      }\n    }\n  }\n}\n\nexport function rememberWarning(type = 'accordion') {\n  warn(`Missing \"id\" prop the ${type}! \"remember_state\" is enabled.`)\n}\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  findElementInChildren,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\n\nimport AccordionGroup from './AccordionGroup'\nimport AccordionHeader from './AccordionHeader'\nimport AccordionContent from './AccordionContent'\nimport AccordionContext from './AccordionContext'\nimport AccordionProviderContext from './AccordionProviderContext'\nimport Context from '../../shared/Context'\nimport {\n  accordionPropTypes,\n  accordionDefaultProps,\n} from './AccordionPropTypes'\nimport { AccordionStore, Store, rememberWarning } from './AccordionStore'\n\nexport default class Accordion extends React.PureComponent {\n  static contextType = AccordionProviderContext\n  static Provider = AccordionGroup // Provider and Group is \"the same\", except that Accordion.Group has a layer above/before in class Group with additional logic.\n  static Header = AccordionHeader\n  static Content = AccordionContent\n\n  static propTypes = {\n    ...accordionPropTypes,\n  }\n\n  static defaultProps = {\n    ...accordionDefaultProps,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (props.expanded !== state._expanded) {\n        state.expanded = isTrue(props.expanded)\n        state._expanded = props.expanded\n      }\n\n      if (props.group && !state.group) {\n        state.group = props.group\n      }\n    }\n    state._listenForPropChanges = true\n\n    return state\n  }\n\n  constructor(props, context) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n\n    this.state = {\n      _expanded: props.expanded,\n      expanded:\n        props.expanded !== null\n          ? isTrue(props.expanded)\n          : isTrue(context?.expanded),\n      group: props.group || context?.group,\n      _listenForPropChanges: false, // make sure to not run DerivedState\n    }\n\n    if (\n      typeof window === 'undefined' &&\n      isTrue(props.expanded_ssr || context?.expanded_ssr)\n    ) {\n      this.state.expanded = true\n    }\n\n    if (this.state.group && typeof window !== 'undefined') {\n      window.__dnbAccordion = window.__dnbAccordion || {}\n      window.__dnbAccordion[this.state.group] =\n        window.__dnbAccordion[this.state.group] ||\n        new AccordionStore(this.state.group)\n\n      window.__dnbAccordion[this.state.group].addInstance(this)\n    }\n\n    this.store = new Store({ id: props.id, group: this.state.group })\n\n    if (\n      isTrue(props.remember_state || context.remember_state) &&\n      isTrue(props.expanded)\n    ) {\n      const expanded = this.store.getState()\n      if (expanded === false) {\n        this.state.expanded = false\n      }\n    }\n\n    if (context && typeof context?.onInit === 'function') {\n      context.onInit(this)\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      isTrue(props.expanded_ssr || context?.expanded_ssr)\n    ) {\n      this.state.expanded = false\n    }\n\n    if (isTrue(this.props.remember_state || context.remember_state)) {\n      const expanded = this.store.getState()\n      if (expanded) {\n        this.state.expanded = true\n      }\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n\n    clearTimeout(this._animationState)\n    clearTimeout(this._openTimeout)\n    clearTimeout(this._changeOpenState)\n\n    if (this.state.group && typeof window !== 'undefined') {\n      window?.__dnbAccordion[this.state.group]?.removeInstance(this)\n    }\n  }\n\n  componentDidUpdate(props) {\n    if (isTrue(this.context.flush_remembered_state)) {\n      this.store.flush()\n      this.setState({\n        expanded: isTrue(this.props.expanded),\n      })\n    }\n\n    if (\n      this.context?.expanded_id &&\n      this.context.expanded_id === props.id\n    ) {\n      this.setState({\n        expanded: true,\n      })\n    }\n  }\n\n  setExpandedState(expanded) {\n    this.setState({\n      expanded,\n      _listenForPropChanges: false,\n    })\n  }\n\n  close() {\n    this.changeOpened(false)\n  }\n\n  changeOpened(expanded) {\n    if (!this._isMounted) {\n      return\n    }\n\n    this.setState({\n      expanded,\n      _listenForPropChanges: false,\n    })\n\n    // check if a event exists, because, then it's a user click\n    if (\n      isTrue(this.props.remember_state) ||\n      isTrue(this.context.remember_state)\n    ) {\n      this.store.saveState(expanded)\n    }\n  }\n\n  handleDisabledClick = (e) => {\n    e.preventDefault()\n    return false\n  }\n\n  callOnChangeHandler = (...params) => {\n    this.callOnChange(...params)\n    if (this.context?.onChange) {\n      this.context?.onChange(...params)\n    }\n    if (this.state.group && typeof window !== 'undefined') {\n      window?.__dnbAccordion[this.state.group]?.onChange(...params)\n    }\n  }\n\n  callOnChange = ({ expanded, event }) => {\n    this.changeOpened(expanded, event)\n\n    dispatchCustomElementEvent(this, 'on_change', {\n      expanded,\n      event,\n    })\n  }\n\n  render() {\n    return (\n      <Context.Consumer>\n        {(globalContext) => (\n          <AccordionContext.Consumer>\n            {(nestedContext) => {\n              let { expanded } = this.state\n\n              // use only the props from context, who are available here anyway\n              const props = extendPropsWithContextInClassComponent(\n                this.props,\n                Accordion.defaultProps,\n                this.context, // group context\n                nestedContext, // internal context\n                { skeleton: globalContext?.skeleton },\n                globalContext.accordion, // global context\n                globalContext.translation.Accordion\n              )\n\n              if (expanded === null && globalContext.accordion) {\n                if (globalContext.accordion.expanded) {\n                  expanded = isTrue(props.expanded)\n                }\n              }\n\n              const {\n                variant,\n                className,\n                class: _className,\n                prerender,\n                prevent_rerender,\n                prevent_rerender_conditional,\n                single_container,\n                remember_state,\n                disabled,\n                skeleton,\n                no_animation,\n                expanded_ssr: _expanded_ssr, // eslint-disable-line\n                children,\n\n                id: _id, // eslint-disable-line\n                group: _group, // eslint-disable-line\n                expanded: _expanded, // eslint-disable-line\n\n                title, // eslint-disable-line\n                description, // eslint-disable-line\n                left_component, // eslint-disable-line\n                icon, // eslint-disable-line\n                icon_position, // eslint-disable-line\n                icon_size, // eslint-disable-line\n                on_change, // eslint-disable-line\n                on_state_update, // eslint-disable-line\n\n                contentRef, // eslint-disable-line\n\n                ...rest\n              } = props\n\n              const id = this._id\n\n              const mainParams = {\n                id,\n                className: classnames(\n                  'dnb-accordion',\n                  expanded && 'dnb-accordion--expanded',\n                  variant && `dnb-accordion__variant--${variant}`,\n                  isTrue(prerender) && 'dnb-accordion--prerender',\n                  createSpacingClasses(props),\n                  className,\n                  _className\n                ),\n              }\n\n              if (this.state.open) {\n                mainParams.open = true\n              }\n\n              // to remove spacing props\n              validateDOMAttributes(this.props, rest)\n\n              const extendProps = extendPropsWithContextInClassComponent(\n                this.props,\n                Accordion.defaultProps,\n                this.state,\n                this.context\n              )\n\n              const context = {\n                ...extendProps,\n                id,\n                expanded,\n                prerender: isTrue(prerender),\n                prevent_rerender: isTrue(prevent_rerender),\n                prevent_rerender_conditional: isTrue(\n                  prevent_rerender_conditional\n                ),\n                single_container: isTrue(single_container),\n                remember_state: isTrue(remember_state),\n                disabled: isTrue(disabled),\n                skeleton: isTrue(skeleton),\n                no_animation: isTrue(no_animation),\n                callOnChange: this.callOnChangeHandler,\n              }\n\n              if (isTrue(disabled)) {\n                mainParams.onClick = this.handleDisabledClick\n              }\n\n              return (\n                <AccordionContext.Provider value={context}>\n                  <div {...mainParams}>\n                    {findElementInChildren(\n                      children,\n                      (cur) => cur.type === AccordionHeader\n                    ) ? null : (\n                      <AccordionHeader />\n                    )}\n                    {findElementInChildren(\n                      children,\n                      (cur) => cur.type === AccordionContent\n                    ) ? (\n                      children\n                    ) : (\n                      <AccordionContent>{children}</AccordionContent>\n                    )}\n                  </div>\n                </AccordionContext.Provider>\n              )\n            }}\n          </AccordionContext.Consumer>\n        )}\n      </Context.Consumer>\n    )\n  }\n}\n\nclass Group extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    group: PropTypes.string,\n    remember_state: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }\n\n  static defaultProps = {\n    id: null,\n    group: null,\n    remember_state: null,\n  }\n\n  state = {}\n\n  constructor(props) {\n    super(props)\n\n    let group\n\n    if (props.id) {\n      group = props.id\n    } else if (!props.group) {\n      group = '#' + makeUniqueId()\n    }\n    this.state.group = group\n\n    this.store = new Store({ group })\n    this._IDs = []\n\n    if (isTrue(props.remember_state) && !props.id) {\n      rememberWarning('accordion group')\n    }\n  }\n\n  onInit = (instance) => {\n    if (instance.props.id && !this._IDs.includes(instance.props.id)) {\n      this._IDs.push(instance.props.id)\n    }\n  }\n\n  componentDidMount() {\n    const storedData = this.store.getData()\n    if (storedData?.id) {\n      if (!this._IDs.includes(storedData.id)) {\n        // 1. get the fallback id\n        const expanded_id = this._IDs[0]\n\n        if (expanded_id) {\n          // 2. set the fallback id\n          this.setState(\n            {\n              expanded_id,\n            },\n            () => {\n              // 3. save the fallback id\n              this.store.saveState(true, expanded_id)\n\n              // 4. and reset the fallback id\n              this.setState({\n                expanded_id: null,\n              })\n            }\n          )\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <AccordionGroup\n        onInit={this.onInit}\n        {...this.props}\n        {...this.state}\n      />\n    )\n  }\n}\n\nAccordion.Group = Group\nAccordion.Group.Store = (group, id = null) => {\n  return new Store({ group, id })\n}\nAccordion.Store = (id) => {\n  return new Store({ id })\n}\n"],"names":["useMediaQuery","props","_mediaQueryList$curre","context","React","Context","query","when","not","matchOnSSR","disabled","matches","isTrue","isMatchMediaSupported","mediaQueryList","makeMediaQueryList","breakpoints","current","match","matchUpdate","listenerRef","_mediaQueryList$curre2","createMediaQueryListener","Boolean","PropTypes","closed","expanded","spacingPropTypes","accordionDefaultProps","title","no_animation","expanded_ssr","prerender","prevent_rerender","prevent_rerender_conditional","remember_state","contentRef","flush_remembered_state","single_container","variant","left_component","allow_close_all","skeleton","id","group","element","heading","heading_level","icon","icon_position","icon_size","attributes","class","className","children","on_change","on_state_update","AccordionGroup","_React$PureComponent","_this","call","onChangeHandler","event","dispatchCustomElementEvent","_assertThisInitialized","_id","makeUniqueId","state","_listenForPropChanges","_inheritsLoose","prototype","render","extendPropsWithContextInClassComponent","this","defaultProps","Accordion","getTranslation","expanded_id","onInit","_className","rest","classes","classnames","createSpacingClasses","params","validateDOMAttributes","onChange","_jsx","AccordionGroupContext","Provider","value","role","contextType","AccordionHeaderTitle","_ref","AccordionHeaderDescription","_ref2","AccordionHeaderContainer","_ref3","AccordionHeaderIcon","_ref4","IconPrimary","size","AccordionHeader","onKeyDownHandler","keycode","preventDefault","onClickHandler","canClick","callOnChange","setState","hadClick","onMouseOverHandler","hover","onMouseOutHandler","_proto","description","_left_component","_expanded","_title","_description","_icon","_icon_size","_disabled","defaultParts","Array","isArray","filter","cur","removeParts","forEach","part","find","c","type","push","index","findIndex","splice","partsToRender","wrapperParts","wrapperComp","headerParams","tabIndex","createSkeletonClass","onClick","onKeyDown","onMouseOver","onMouseOut","skeletonDOMAttributes","Element","String","AccordionContext","Container","Icon","Title","Description","AccordionContent","instance","elementRef","cacheRef","setContainerHeight","contentElem","style","height","containerElement","getPreviousSibling","transitionDuration","minHeight","offsetHeight","offsetTop","e","warn","Object","hasOwnProperty","isSmallScreen","max","content","renderContent","processChildren","wrapperParams","keepInDOM","innerParams","animate","HeightAnimation","open","innerRef","AccordionStore","_instances","inst","close","addInstance","removeInstance","Store","_proto2","storeId","saveState","opts","store","getData","force","window","localStorage","setItem","JSON","stringify","rememberWarning","parse","getItem","getState","flush","handleDisabledClick","callOnChangeHandler","_this2","_this$context","_this$context2","_window","_window$__dnbAccordio","_len","arguments","length","_key","apply","__dnbAccordion","changeOpened","getDerivedStateFromProps","componentDidMount","_isMounted","componentWillUnmount","_window2","_window2$__dnbAccordi","clearTimeout","_animationState","_openTimeout","_changeOpenState","componentDidUpdate","_this$context3","setExpandedState","Consumer","globalContext","nestedContext","accordion","translation","_expanded_ssr","_group","mainParams","_jsxs","findElementInChildren","AccordionProviderContext","Header","Content","Group","_React$PureComponent2","_this3","_IDs","includes","storedData"],"sourceRoot":""}