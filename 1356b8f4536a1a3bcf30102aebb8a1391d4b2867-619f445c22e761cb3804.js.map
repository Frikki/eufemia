{"version":3,"file":"1356b8f4536a1a3bcf30102aebb8a1391d4b2867-619f445c22e761cb3804.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/shared/useMediaQuery.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionPropTypes.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionProviderContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionGroup.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionHeader.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionContent.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/AccordionStore.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/accordion/Accordion.js"],"sourcesContent":["import React from 'react'\nimport { isTrue } from './component-helper'\nimport Context from './Context'\nimport {\n  makeMediaQueryList,\n  createMediaQueryListener,\n  isMatchMediaSupported,\n} from './MediaQueryUtils'\nimport type {\n  MediaQueryProps,\n  MediaQueryListener,\n} from './MediaQueryUtils'\n\nexport type { MediaQueryProps }\n\nexport default function useMediaQuery(props: MediaQueryProps) {\n  const context = React.useContext(Context)\n  const { query, when, not, matchOnSSR, disabled } = props\n\n  let matches = React.useMemo(() => {\n    if (disabled) {\n      return false // stop here\n    }\n\n    return isTrue(matchOnSSR) && !isMatchMediaSupported()\n  }, [disabled, matchOnSSR])\n\n  const mediaQueryList = React.useRef(\n    makeMediaQueryList(props, context.breakpoints)\n  )\n  if (mediaQueryList.current?.matches) {\n    matches = true\n  }\n\n  const [match, matchUpdate] = React.useState(matches)\n\n  const listenerRef = React.useRef<MediaQueryListener>()\n  React.useLayoutEffect(() => {\n    if (disabled) {\n      return // stop here\n    }\n\n    if (typeof listenerRef.current === 'function') {\n      listenerRef.current()\n\n      mediaQueryList.current = makeMediaQueryList(\n        props,\n        context.breakpoints\n      )\n      matchUpdate(mediaQueryList.current?.matches)\n    }\n\n    listenerRef.current = createMediaQueryListener(\n      mediaQueryList.current,\n      (match) => matchUpdate(match)\n    )\n\n    return listenerRef.current\n  }, [query, when, not, disabled]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return Boolean(match)\n}\n","/**\n * Web Accordion Props\n *\n */\n\nimport PropTypes from 'prop-types'\nimport { spacingPropTypes } from '../space/SpacingHelper'\n\nexport const accordionPropTypes = {\n  title: PropTypes.node,\n  expanded: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  no_animation: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  expanded_ssr: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  prerender: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  prevent_rerender: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  prevent_rerender_conditional: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  remember_state: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  contentRef: PropTypes.object,\n  flush_remembered_state: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  single_container: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  variant: PropTypes.oneOf(['plain', 'default', 'outlined', 'filled']),\n  left_component: PropTypes.node,\n  allow_close_all: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  id: PropTypes.string,\n  group: PropTypes.string,\n  element: PropTypes.node,\n  heading: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  heading_level: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  icon: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.shape({\n      closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    }),\n  ]),\n  icon_position: PropTypes.oneOf(['left', 'right']),\n  icon_size: PropTypes.string,\n  attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  class: PropTypes.string,\n\n  className: PropTypes.string,\n  children: PropTypes.node,\n\n  ...spacingPropTypes,\n\n  on_change: PropTypes.func,\n  on_state_update: PropTypes.func,\n}\n\nexport const accordionDefaultProps = {\n  title: null,\n  expanded: null,\n  no_animation: null,\n  expanded_ssr: null,\n  prerender: null,\n  prevent_rerender: null,\n  prevent_rerender_conditional: null,\n  remember_state: null,\n  contentRef: null,\n  flush_remembered_state: null,\n  single_container: null,\n  variant: 'outlined',\n  left_component: null,\n  allow_close_all: null,\n  disabled: null,\n  skeleton: null,\n  id: null,\n  group: null,\n  element: null,\n  heading: null,\n  heading_level: null,\n  icon: null,\n  icon_position: null,\n  icon_size: 'medium',\n  attributes: null,\n  class: null,\n\n  className: null,\n  children: null,\n\n  on_change: null,\n  on_state_update: null,\n}\n","/**\n * Web AccordionGroup Context\n *\n */\n\nimport React from 'react'\n\nconst AccordionGroupContext = React.createContext({})\n\nexport default AccordionGroupContext\n","/**\n * Web AccordionGroup Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\nimport {\n  accordionPropTypes,\n  accordionDefaultProps,\n} from './AccordionPropTypes'\n\nimport Context from '../../shared/Context'\nimport AccordionGroupContext from './AccordionProviderContext'\n\nexport default class AccordionGroup extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    ...accordionPropTypes,\n\n    expanded_id: PropTypes.string,\n    onInit: PropTypes.func,\n  }\n\n  static defaultProps = {\n    ...accordionDefaultProps,\n\n    expanded_id: null,\n    onInit: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this.state = {\n      _listenForPropChanges: true,\n    }\n  }\n\n  onChangeHandler = (event) => {\n    dispatchCustomElementEvent(this, 'on_change', {\n      id: event.id,\n      expanded: event.expanded,\n      event,\n    })\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      AccordionGroup.defaultProps,\n      this.context.Accordion,\n      this.context.getTranslation(this.props).Accordion\n    )\n\n    const {\n      expanded, // eslint-disable-line\n      expanded_id, // eslint-disable-line\n      prerender, // eslint-disable-line\n      prevent_rerender, // eslint-disable-line\n      single_container, // eslint-disable-line\n      contentRef, // eslint-disable-line\n      allow_close_all, // eslint-disable-line\n      remember_state, // eslint-disable-line\n      flush_remembered_state, // eslint-disable-line\n      disabled, // eslint-disable-line\n      group, // eslint-disable-line\n      onInit, // eslint-disable-line\n      className,\n      class: _className,\n\n      id: _id, // eslint-disable-line\n      children, // eslint-disable-line\n\n      ...rest\n    } = props\n\n    const id = this._id\n\n    const classes = classnames(\n      'dnb-accordion-group',\n      isTrue(single_container) && 'dnb-accordion-group--single-container',\n      createSpacingClasses(props),\n      className,\n      _className\n    )\n\n    const params = {\n      ...rest,\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    if (!props.group && isTrue(props.single_container)) {\n      props.group = makeUniqueId()\n    }\n\n    const context = {\n      ...props,\n      id,\n      onChange: this.onChangeHandler,\n    }\n\n    return (\n      <AccordionGroupContext.Provider value={context}>\n        <div className={classes}>\n          <span\n            id={id}\n            className=\"dnb-accordion-group__shell\"\n            role=\"group\"\n            {...params}\n          >\n            <span className=\"dnb-accordion-group__children\">\n              {children}\n            </span>\n          </span>\n        </div>\n      </AccordionGroupContext.Provider>\n    )\n  }\n}\n","/**\n * Web AccordionGroup Context\n *\n */\n\nimport React from 'react'\n\nconst AccordionContext = React.createContext({})\n\nexport default AccordionContext\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  isTrue,\n  validateDOMAttributes,\n  extendPropsWithContextInClassComponent,\n} from '../../shared/component-helper'\nimport IconPrimary from '../../components/icon-primary/IconPrimary'\nimport classnames from 'classnames'\nimport keycode from 'keycode'\nimport AccordionContext from './AccordionContext'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nfunction AccordionHeaderTitle({ children, ...rest }) {\n  return (\n    <span\n      className={classnames(\n        'dnb-accordion__header__title',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  )\n}\nAccordionHeaderTitle.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderTitle.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderDescription({ children, ...rest }) {\n  return children ? (\n    <span\n      className={classnames(\n        'dnb-accordion__header__description',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  ) : null\n}\nAccordionHeaderDescription.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderDescription.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderContainer({ children, ...rest }) {\n  return children ? (\n    <span\n      className={classnames(\n        'dnb-accordion__header__container',\n        createSpacingClasses(rest)\n      )}\n    >\n      {children}\n    </span>\n  ) : null\n}\nAccordionHeaderContainer.propTypes = {\n  ...spacingPropTypes,\n  children: PropTypes.node,\n}\nAccordionHeaderContainer.defaultProps = {\n  children: null,\n}\n\nfunction AccordionHeaderIcon({ icon, expanded, ...rest }) {\n  return (\n    <span className=\"dnb-accordion__header__icon\">\n      <IconPrimary\n        {...rest}\n        icon={\n          typeof icon?.expanded !== 'undefined'\n            ? icon[expanded ? 'expanded' : 'closed']\n            : icon || 'chevron-down'\n        }\n        aria-hidden\n      />\n    </span>\n  )\n}\nAccordionHeaderIcon.propTypes = {\n  icon: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.shape({\n      closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    }),\n  ]),\n  size: PropTypes.string,\n  expanded: PropTypes.bool,\n}\nAccordionHeaderIcon.defaultProps = {\n  icon: null,\n  size: 'medium',\n  expanded: null,\n}\n\nexport default class AccordionHeader extends React.PureComponent {\n  static contextType = AccordionContext\n\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    description: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    left_component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    element: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    heading: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    heading_level: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    icon: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.func,\n      PropTypes.shape({\n        closed: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        expanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      }),\n    ]),\n    icon_position: PropTypes.oneOf(['left', 'right']),\n    icon_size: PropTypes.string,\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    no_animation: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n  }\n\n  static defaultProps = {\n    id: null, // make sure we have id here, so it gets picked up by extendPropsWithContextInClassComponent\n    title: null,\n    description: null,\n    left_component: null,\n    element: null,\n    heading: null,\n    heading_level: null,\n    icon: null,\n    icon_position: null,\n    icon_size: 'medium',\n    disabled: null,\n    skeleton: null,\n    no_animation: null,\n\n    className: null,\n    children: null,\n  }\n\n  static Container = AccordionHeaderContainer\n  static Icon = AccordionHeaderIcon\n  static Title = AccordionHeaderTitle\n  static Description = AccordionHeaderDescription\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  onKeyDownHandler = (event) => {\n    switch (keycode(event)) {\n      case 'enter':\n      case 'space':\n        event.preventDefault()\n        this.onClickHandler(event)\n        break\n    }\n  }\n\n  onClickHandler = (event) => {\n    const { id, group } = this.context\n\n    if (this.canClick()) {\n      const expanded = !this.context.expanded\n      this.context.callOnChange({ id, group, expanded, event })\n\n      this.setState({\n        hadClick: true,\n      })\n    }\n  }\n\n  onMouseOverHandler = () => {\n    this.setState({\n      hover: true,\n    })\n  }\n\n  onMouseOutHandler = () => {\n    this.setState({\n      hover: false,\n      hadClick: false,\n    })\n  }\n\n  canClick() {\n    const { expanded, allow_close_all, group } = this.context\n    return !group || (group && !expanded) || isTrue(allow_close_all)\n  }\n\n  render() {\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      AccordionHeader.defaultProps,\n      this.context\n    )\n\n    const {\n      id,\n\n      // 1. these props should be the same as ...\n      left_component,\n      expanded, // eslint-disable-line\n      title,\n      description,\n      element,\n      heading,\n      heading_level,\n      icon,\n      icon_size,\n      disabled,\n      skeleton,\n      no_animation,\n    } = props\n\n    const {\n      children,\n      className,\n\n      // 2. ... these\n      left_component: _left_component, // eslint-disable-line\n      expanded: _expanded, // eslint-disable-line\n      title: _title, // eslint-disable-line\n      description: _description, // eslint-disable-line\n      icon: _icon, // eslint-disable-line\n      icon_size: _icon_size, // eslint-disable-line\n      disabled: _disabled, // eslint-disable-line\n\n      ...rest\n    } = this.props\n\n    const { hover, hadClick } = this.state\n    let { icon_position } = props\n\n    const defaultParts = [\n      <AccordionHeaderIcon\n        key=\"icon\"\n        icon={icon}\n        size={icon_size}\n        expanded={this.context.expanded}\n      />,\n      <AccordionHeaderContainer key=\"container\">\n        {left_component}\n      </AccordionHeaderContainer>,\n      <AccordionHeaderTitle key=\"title\">\n        {title ||\n          (Array.isArray(children)\n            ? children.filter((cur) => !React.isValidElement(cur))\n            : children)}\n      </AccordionHeaderTitle>,\n      <AccordionHeaderDescription key=\"description\">\n        {description}\n      </AccordionHeaderDescription>,\n    ]\n\n    if (Array.isArray(children)) {\n      const removeParts = []\n      children.forEach((cur) => {\n        if (React.isValidElement(cur)) {\n          const part = defaultParts.find((c) => c.type === cur.type)\n          if (part) {\n            removeParts.push(part)\n          }\n\n          // if (cur.type === AccordionHeaderTitle) {\n          //   defaultParts.unshift(cur)\n          // } else {\n          //   defaultParts.push(cur)\n          // }\n\n          defaultParts.push(cur)\n        }\n      })\n      removeParts.forEach((part) => {\n        const index = defaultParts.findIndex((c) => c === part)\n        if (index > -1) {\n          defaultParts.splice(index, 1)\n        }\n      })\n    }\n\n    const partsToRender = []\n    const wrapperParts = []\n    const wrapperComp = (\n      <span className=\"dnb-accordion__header__wrapper\" key=\"wrapper\">\n        {wrapperParts}\n      </span>\n    )\n\n    defaultParts.forEach((part) => {\n      if (\n        React.isValidElement(part) &&\n        (part.type === AccordionHeaderTitle ||\n          part.type === AccordionHeaderDescription)\n      ) {\n        wrapperParts.push(part)\n        if (partsToRender.findIndex((c) => c === wrapperComp) === -1) {\n          partsToRender.push(wrapperComp)\n        }\n      } else {\n        partsToRender.push(part)\n      }\n    })\n\n    // position the icon to the right, if the element is not in the beginning\n    if (icon_position === null) {\n      const iconIndex = partsToRender.findIndex(\n        (c) => c.type === AccordionHeaderIcon\n      )\n      // because of the container at the beginning, we use 1\n      if (iconIndex > 1) {\n        icon_position = 'right'\n      }\n\n      if (left_component) {\n        icon_position = 'right'\n      }\n    }\n\n    const headerParams = {\n      id: `${id}-header`,\n      'aria-controls': `${id}-content`,\n      'aria-expanded': this.context.expanded,\n      role: 'button',\n      tabIndex: '0',\n      className: classnames(\n        'dnb-accordion__header',\n        icon_position && `dnb-accordion__header__icon--${icon_position}`,\n        hover && hadClick && 'dnb-accordion--hover',\n        !this.canClick() && 'dnb-accordion__header--prevent-click',\n        description && 'dnb-accordion__header--description',\n        no_animation && 'dnb-accordion__header--no-animation',\n        createSkeletonClass('font', skeleton, this.context),\n        createSpacingClasses(rest),\n        className\n      ),\n      disabled,\n      ...rest,\n    }\n\n    if (disabled || isTrue(skeleton)) {\n      headerParams.tabIndex = '-1'\n      headerParams.disabled = true\n      headerParams['aria-disabled'] = true\n    } else {\n      headerParams.onClick = this.onClickHandler\n      headerParams.onKeyDown = this.onKeyDownHandler\n      headerParams.onMouseOver = this.onMouseOverHandler\n      headerParams.onMouseOut = this.onMouseOutHandler\n    }\n\n    skeletonDOMAttributes(headerParams, skeleton, this.context)\n\n    validateDOMAttributes(this.props, headerParams)\n\n    let Element = 'div'\n    if (isTrue(heading)) {\n      headerParams.role = 'heading'\n      headerParams['aria-level'] = heading_level\n        ? String(heading_level)\n        : '2'\n    } else if (heading) {\n      headerParams.role = null\n      Element = heading\n    } else if (element) {\n      headerParams.role = null\n      Element = element\n    }\n\n    return <Element {...headerParams}>{partsToRender}</Element>\n  }\n}\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  warn,\n  isTrue,\n  validateDOMAttributes,\n  processChildren,\n  getPreviousSibling,\n} from '../../shared/component-helper'\nimport { useMediaQuery } from '../../shared'\nimport AccordionContext from './AccordionContext'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport HeightAnimation from '../height-animation/HeightAnimation'\n\nexport default function AccordionContent(props) {\n  const context = React.useContext(AccordionContext)\n\n  const {\n    id,\n    expanded,\n    prerender,\n    prevent_rerender,\n    single_container,\n    disabled,\n    no_animation,\n    contentRef,\n  } = context\n\n  const { className, children, instance, ...rest } = props\n\n  let elementRef = React.useRef(null)\n  const cacheRef = React.useRef(null)\n\n  if (contentRef) {\n    elementRef = contentRef\n  }\n\n  const setContainerHeight = () => {\n    const { single_container } = context\n\n    if (single_container) {\n      const contentElem = elementRef.current\n      if (contentElem) {\n        try {\n          contentElem.style.height = ''\n\n          const containerElement = getPreviousSibling(\n            'dnb-accordion-group--single-container',\n            contentElem\n          )\n\n          if (no_animation) {\n            containerElement.style.transitionDuration = '1ms'\n          }\n\n          const minHeight =\n            (contentElem.offsetHeight + contentElem.offsetTop) / 16\n          containerElement.style.minHeight = `${minHeight}rem`\n        } catch (e) {\n          warn(e)\n        }\n      }\n    }\n  }\n\n  const renderContent = () => {\n    const children = processChildren(props)\n\n    const {\n      expanded,\n      prerender,\n      prevent_rerender,\n      prevent_rerender_conditional,\n    } = context\n\n    let content = children\n\n    if (typeof content === 'string') {\n      content = <p className=\"dnb-p\">{content}</p>\n    }\n\n    if (isTrue(prevent_rerender)) {\n      /**\n       * Ensure we do not render, if it is not expanded\n       */\n      if (!(expanded || prerender)) {\n        content = null\n      }\n\n      // update the cache if children is not the same anymore\n      if (\n        isTrue(prevent_rerender_conditional) &&\n        cacheRef.current !== content\n      ) {\n        cacheRef.current = content\n      }\n\n      if (cacheRef.current) {\n        content = cacheRef.current\n      } else {\n        cacheRef.current = content\n      }\n    }\n\n    return content\n  }\n\n  React.useEffect(() => {\n    if (expanded && isTrue(single_container)) {\n      setContainerHeight()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children, expanded, single_container])\n\n  React.useState(() => {\n    if (\n      instance &&\n      Object.prototype.hasOwnProperty.call(instance, 'current')\n    ) {\n      instance.current = { setContainerHeight }\n    }\n  })\n\n  const isSmallScreen = useMediaQuery({\n    when: { max: 'small' },\n  })\n\n  const content = renderContent()\n\n  const wrapperParams = {\n    className: classnames('dnb-accordion__content', className),\n    ...rest,\n  }\n\n  const keepInDOM = prerender || prevent_rerender\n\n  const innerParams = {\n    id: `${id}-content`,\n    'aria-labelledby': `${id}-header`,\n    className: classnames(\n      'dnb-accordion__content__inner',\n      createSpacingClasses(rest)\n    ),\n  }\n\n  if (expanded) {\n    innerParams['aria-expanded'] = true\n  }\n\n  if (!expanded || disabled) {\n    innerParams.disabled = true\n    innerParams['aria-hidden'] = true\n  }\n\n  // to remove spacing props\n  validateDOMAttributes(props, wrapperParams)\n  validateDOMAttributes(null, innerParams)\n\n  const animate =\n    !no_animation && (single_container ? isSmallScreen : true)\n\n  return (\n    <HeightAnimation\n      {...wrapperParams}\n      open={expanded}\n      animate={animate}\n      keepInDOM={keepInDOM}\n      innerRef={elementRef}\n    >\n      <section {...innerParams}>{content}</section>\n    </HeightAnimation>\n  )\n}\n\nAccordionContent.propTypes = {\n  instance: PropTypes.object,\n  ...spacingPropTypes,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n}\n\nAccordionContent.defaultProps = {\n  instance: null,\n  className: null,\n  children: null,\n}\n","import { isTrue, warn } from '../../shared/component-helper'\n\ntype AccordionStoreInstance = {\n  _id: string\n  close: () => void\n}\nexport class AccordionStore {\n  _instances: Array<AccordionStoreInstance>\n  _id: string\n  constructor(id: string) {\n    this._id = id\n    this._instances = []\n  }\n  onChange({ id }: { id: string }) {\n    this._instances.forEach((inst) => {\n      if (inst._id !== id) {\n        inst.close()\n      }\n    })\n  }\n  addInstance(instance: AccordionStoreInstance) {\n    this._instances.push(instance)\n  }\n  removeInstance(instance) {\n    this._instances = this._instances.filter((inst) => inst !== instance)\n  }\n}\n\nexport type StoreDataReturn = {\n  id: string\n  expanded: boolean\n}\nexport type StoreOptions = {\n  force?: boolean\n}\n\nexport class Store {\n  id: string\n  group: string\n\n  constructor({ id, group }) {\n    this.id = id\n    this.group = group\n    return this\n  }\n\n  storeId(id = this.id) {\n    if (this.group) {\n      // Skip using the random ID\n      if (this.group[0] === '#') {\n        return null\n      }\n      id = this.group\n    }\n    return `dnb-accordion-${id}`\n  }\n\n  saveState(expanded: boolean, id = this.id, opts: StoreOptions = {}) {\n    if (id) {\n      try {\n        const store = this.getData() || ({} as StoreDataReturn)\n\n        if (this.group) {\n          if (expanded) {\n            store.id = id\n          } else if (opts && opts.force) {\n            store.id = null\n          }\n        } else {\n          store.expanded = expanded\n        }\n\n        const storeId = this.storeId(id)\n        if (storeId) {\n          window.localStorage.setItem(storeId, JSON.stringify(store))\n        }\n      } catch (e) {\n        //\n      }\n    } else {\n      rememberWarning()\n    }\n  }\n\n  getData(id = this.id): StoreDataReturn {\n    const storeId = this.storeId(id)\n\n    if (storeId) {\n      try {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            window.localStorage,\n            storeId\n          )\n        ) {\n          return JSON.parse(window.localStorage.getItem(storeId))\n        }\n      } catch (e) {\n        //\n      }\n    }\n\n    return null\n  }\n\n  getState(id = this.id) {\n    let state = null\n\n    const store = this.getData(id)\n\n    if (store) {\n      if (typeof store.id !== 'undefined') {\n        state = id === store.id\n      } else if (typeof store.expanded !== 'undefined') {\n        state = isTrue(store.expanded)\n      }\n    }\n\n    return state\n  }\n\n  flush(id = this.id) {\n    if (id) {\n      try {\n        const storeId = this.storeId(id)\n        if (storeId) {\n          window.localStorage.setItem(storeId, null)\n        }\n      } catch (e) {\n        //\n      }\n    }\n  }\n}\n\nexport function rememberWarning(type = 'accordion') {\n  warn(`Missing \"id\" prop the ${type}! \"remember_state\" is enabled.`)\n}\n","/**\n * Web Accordion Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  findElementInChildren,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\n\nimport AccordionGroup from './AccordionGroup'\nimport AccordionHeader from './AccordionHeader'\nimport AccordionContent from './AccordionContent'\nimport AccordionContext from './AccordionContext'\nimport AccordionProviderContext from './AccordionProviderContext'\nimport Context from '../../shared/Context'\nimport {\n  accordionPropTypes,\n  accordionDefaultProps,\n} from './AccordionPropTypes'\nimport { AccordionStore, Store, rememberWarning } from './AccordionStore'\n\nexport default class Accordion extends React.PureComponent {\n  static contextType = AccordionProviderContext\n  static Provider = AccordionGroup // Provider and Group is \"the same\", except that Accordion.Group has a layer above/before in class Group with additional logic.\n  static Header = AccordionHeader\n  static Content = AccordionContent\n\n  static propTypes = {\n    ...accordionPropTypes,\n  }\n\n  static defaultProps = {\n    ...accordionDefaultProps,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (props.expanded !== state._expanded) {\n        state.expanded = isTrue(props.expanded)\n        state._expanded = props.expanded\n      }\n\n      if (props.group && !state.group) {\n        state.group = props.group\n      }\n    }\n    state._listenForPropChanges = true\n\n    return state\n  }\n\n  constructor(props, context) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n\n    this.state = {\n      _expanded: props.expanded,\n      expanded:\n        props.expanded !== null\n          ? isTrue(props.expanded)\n          : isTrue(context?.expanded),\n      group: props.group || context?.group,\n      _listenForPropChanges: false, // make sure to not run DerivedState\n    }\n\n    if (\n      typeof window === 'undefined' &&\n      isTrue(props.expanded_ssr || context?.expanded_ssr)\n    ) {\n      this.state.expanded = true\n    }\n\n    if (this.state.group && typeof window !== 'undefined') {\n      window.__dnbAccordion = window.__dnbAccordion || {}\n      window.__dnbAccordion[this.state.group] =\n        window.__dnbAccordion[this.state.group] ||\n        new AccordionStore(this.state.group)\n\n      window.__dnbAccordion[this.state.group].addInstance(this)\n    }\n\n    this.store = new Store({ id: props.id, group: this.state.group })\n\n    if (\n      isTrue(props.remember_state || context.remember_state) &&\n      isTrue(props.expanded)\n    ) {\n      const expanded = this.store.getState()\n      if (expanded === false) {\n        this.state.expanded = false\n      }\n    }\n\n    if (context && typeof context?.onInit === 'function') {\n      context.onInit(this)\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      isTrue(props.expanded_ssr || context?.expanded_ssr)\n    ) {\n      this.state.expanded = false\n    }\n\n    if (isTrue(this.props.remember_state || context.remember_state)) {\n      const expanded = this.store.getState()\n      if (expanded) {\n        this.state.expanded = true\n      }\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n\n    clearTimeout(this._animationState)\n    clearTimeout(this._openTimeout)\n    clearTimeout(this._changeOpenState)\n\n    if (this.state.group && typeof window !== 'undefined') {\n      window?.__dnbAccordion[this.state.group]?.removeInstance(this)\n    }\n  }\n\n  componentDidUpdate(props) {\n    if (isTrue(this.context.flush_remembered_state)) {\n      this.store.flush()\n      this.setState({\n        expanded: isTrue(this.props.expanded),\n      })\n    }\n\n    if (\n      this.context?.expanded_id &&\n      this.context.expanded_id === props.id\n    ) {\n      this.setState({\n        expanded: true,\n      })\n    }\n  }\n\n  setExpandedState(expanded) {\n    this.setState({\n      expanded,\n      _listenForPropChanges: false,\n    })\n  }\n\n  close() {\n    this.changeOpened(false)\n  }\n\n  changeOpened(expanded) {\n    if (!this._isMounted) {\n      return\n    }\n\n    this.setState({\n      expanded,\n      _listenForPropChanges: false,\n    })\n\n    // check if a event exists, because, then it's a user click\n    if (\n      isTrue(this.props.remember_state) ||\n      isTrue(this.context.remember_state)\n    ) {\n      this.store.saveState(expanded)\n    }\n  }\n\n  handleDisabledClick = (e) => {\n    e.preventDefault()\n    return false\n  }\n\n  callOnChangeHandler = (...params) => {\n    this.callOnChange(...params)\n    if (this.context?.onChange) {\n      this.context?.onChange(...params)\n    }\n    if (this.state.group && typeof window !== 'undefined') {\n      window?.__dnbAccordion[this.state.group]?.onChange(...params)\n    }\n  }\n\n  callOnChange = ({ expanded, event }) => {\n    this.changeOpened(expanded, event)\n\n    dispatchCustomElementEvent(this, 'on_change', {\n      expanded,\n      event,\n    })\n  }\n\n  render() {\n    return (\n      <Context.Consumer>\n        {(globalContext) => (\n          <AccordionContext.Consumer>\n            {(nestedContext) => {\n              let { expanded } = this.state\n\n              // use only the props from context, who are available here anyway\n              const props = extendPropsWithContextInClassComponent(\n                this.props,\n                Accordion.defaultProps,\n                this.context, // group context\n                nestedContext, // internal context\n                { skeleton: globalContext?.skeleton },\n                globalContext.accordion, // global context\n                globalContext.translation.Accordion\n              )\n\n              if (expanded === null && globalContext.accordion) {\n                if (globalContext.accordion.expanded) {\n                  expanded = isTrue(props.expanded)\n                }\n              }\n\n              const {\n                variant,\n                className,\n                class: _className,\n                prerender,\n                prevent_rerender,\n                prevent_rerender_conditional,\n                single_container,\n                remember_state,\n                disabled,\n                skeleton,\n                no_animation,\n                expanded_ssr: _expanded_ssr, // eslint-disable-line\n                children,\n\n                id: _id, // eslint-disable-line\n                group: _group, // eslint-disable-line\n                expanded: _expanded, // eslint-disable-line\n\n                title, // eslint-disable-line\n                description, // eslint-disable-line\n                left_component, // eslint-disable-line\n                icon, // eslint-disable-line\n                icon_position, // eslint-disable-line\n                icon_size, // eslint-disable-line\n                on_change, // eslint-disable-line\n                on_state_update, // eslint-disable-line\n\n                contentRef, // eslint-disable-line\n\n                ...rest\n              } = props\n\n              const id = this._id\n\n              const mainParams = {\n                id,\n                className: classnames(\n                  'dnb-accordion',\n                  expanded && 'dnb-accordion--expanded',\n                  variant && `dnb-accordion__variant--${variant}`,\n                  isTrue(prerender) && 'dnb-accordion--prerender',\n                  createSpacingClasses(props),\n                  className,\n                  _className\n                ),\n              }\n\n              if (this.state.open) {\n                mainParams.open = true\n              }\n\n              // to remove spacing props\n              validateDOMAttributes(this.props, rest)\n\n              const extendProps = extendPropsWithContextInClassComponent(\n                this.props,\n                Accordion.defaultProps,\n                this.state,\n                this.context\n              )\n\n              const context = {\n                ...extendProps,\n                id,\n                expanded,\n                prerender: isTrue(prerender),\n                prevent_rerender: isTrue(prevent_rerender),\n                prevent_rerender_conditional: isTrue(\n                  prevent_rerender_conditional\n                ),\n                single_container: isTrue(single_container),\n                remember_state: isTrue(remember_state),\n                disabled: isTrue(disabled),\n                skeleton: isTrue(skeleton),\n                no_animation: isTrue(no_animation),\n                callOnChange: this.callOnChangeHandler,\n              }\n\n              if (isTrue(disabled)) {\n                mainParams.onClick = this.handleDisabledClick\n              }\n\n              return (\n                <AccordionContext.Provider value={context}>\n                  <div {...mainParams}>\n                    {findElementInChildren(\n                      children,\n                      (cur) => cur.type === AccordionHeader\n                    ) ? null : (\n                      <AccordionHeader />\n                    )}\n                    {findElementInChildren(\n                      children,\n                      (cur) => cur.type === AccordionContent\n                    ) ? (\n                      children\n                    ) : (\n                      <AccordionContent>{children}</AccordionContent>\n                    )}\n                  </div>\n                </AccordionContext.Provider>\n              )\n            }}\n          </AccordionContext.Consumer>\n        )}\n      </Context.Consumer>\n    )\n  }\n}\n\nclass Group extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    group: PropTypes.string,\n    remember_state: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }\n\n  static defaultProps = {\n    id: null,\n    group: null,\n    remember_state: null,\n  }\n\n  state = {}\n\n  constructor(props) {\n    super(props)\n\n    let group\n\n    if (props.id) {\n      group = props.id\n    } else if (!props.group) {\n      group = '#' + makeUniqueId()\n    }\n    this.state.group = group\n\n    this.store = new Store({ group })\n    this._IDs = []\n\n    if (isTrue(props.remember_state) && !props.id) {\n      rememberWarning('accordion group')\n    }\n  }\n\n  onInit = (instance) => {\n    if (instance.props.id && !this._IDs.includes(instance.props.id)) {\n      this._IDs.push(instance.props.id)\n    }\n  }\n\n  componentDidMount() {\n    const storedData = this.store.getData()\n    if (storedData?.id) {\n      if (!this._IDs.includes(storedData.id)) {\n        // 1. get the fallback id\n        const expanded_id = this._IDs[0]\n\n        if (expanded_id) {\n          // 2. set the fallback id\n          this.setState(\n            {\n              expanded_id,\n            },\n            () => {\n              // 3. save the fallback id\n              this.store.saveState(true, expanded_id)\n\n              // 4. and reset the fallback id\n              this.setState({\n                expanded_id: null,\n              })\n            }\n          )\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <AccordionGroup\n        onInit={this.onInit}\n        {...this.props}\n        {...this.state}\n      />\n    )\n  }\n}\n\nAccordion.Group = Group\nAccordion.Group.Store = (group, id = null) => {\n  return new Store({ group, id })\n}\nAccordion.Store = (id) => {\n  return new Store({ id })\n}\n"],"names":["useMediaQuery","props","context","React","matches","isTrue","isMatchMediaSupported","disabled","mediaQueryList","makeMediaQueryList","match","listenerRef","matchUpdate","createMediaQueryListener","query","Boolean","PropTypes","closed","expanded","spacingPropTypes","accordionDefaultProps","title","no_animation","expanded_ssr","prerender","prevent_rerender","prevent_rerender_conditional","remember_state","contentRef","flush_remembered_state","single_container","variant","left_component","allow_close_all","skeleton","id","group","element","heading","heading_level","icon","icon_position","icon_size","attributes","class","className","children","on_change","on_state_update","AccordionGroup","onChangeHandler","event","dispatchCustomElementEvent","_id","makeUniqueId","state","_listenForPropChanges","render","extendPropsWithContextInClassComponent","this","defaultProps","Accordion","getTranslation","expanded_id","onInit","_className","rest","classes","classnames","createSpacingClasses","params","validateDOMAttributes","onChange","value","role","contextType","Context","AccordionHeaderTitle","AccordionHeaderDescription","AccordionHeaderContainer","AccordionHeaderIcon","IconPrimary","size","AccordionHeader","onKeyDownHandler","keycode","preventDefault","onClickHandler","canClick","callOnChange","setState","hadClick","onMouseOverHandler","hover","onMouseOutHandler","description","_left_component","_expanded","_title","_description","_icon","_icon_size","_disabled","defaultParts","Array","isArray","filter","cur","removeParts","forEach","part","find","c","type","push","index","findIndex","splice","partsToRender","wrapperParts","wrapperComp","headerParams","tabIndex","createSkeletonClass","onClick","onKeyDown","onMouseOver","onMouseOut","skeletonDOMAttributes","Element","String","AccordionContext","Container","Icon","Title","Description","AccordionContent","instance","elementRef","cacheRef","setContainerHeight","contentElem","current","style","height","containerElement","getPreviousSibling","transitionDuration","minHeight","offsetHeight","offsetTop","e","warn","Object","prototype","hasOwnProperty","call","isSmallScreen","when","max","content","processChildren","renderContent","wrapperParams","keepInDOM","innerParams","animate","HeightAnimation","open","innerRef","AccordionStore","_instances","inst","addInstance","removeInstance","Store","storeId","saveState","opts","store","getData","window","JSON","rememberWarning","getState","flush","handleDisabledClick","callOnChangeHandler","__dnbAccordion","changeOpened","getDerivedStateFromProps","componentDidMount","_isMounted","componentWillUnmount","clearTimeout","_animationState","_openTimeout","_changeOpenState","componentDidUpdate","setExpandedState","close","globalContext","nestedContext","accordion","translation","_expanded_ssr","_group","mainParams","findElementInChildren","AccordionProviderContext","Provider","Header","Content","Group","_IDs","includes","storedData"],"sourceRoot":""}