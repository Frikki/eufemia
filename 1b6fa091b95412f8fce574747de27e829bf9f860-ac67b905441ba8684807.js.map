{"version":3,"file":"1b6fa091b95412f8fce574747de27e829bf9f860-ac67b905441ba8684807.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/InfoCardSection.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/hooks/useValue.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/FirstName.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/LastName.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Visibility/Visibility.tsx"],"sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType, SpacingProps } from '../../../components/space/types'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport {\n  Field,\n  Value,\n  Layout,\n  FieldBlock,\n  ValueBlock,\n  StepsLayout,\n  Visibility,\n} from '../index'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isFieldComponent = (element): boolean => {\n  return Object.values(Field).some(\n    (fieldComponent) => element?.type === fieldComponent\n  )\n}\n\nexport const isValueComponent = (element): boolean => {\n  return Object.values(Value).some(\n    (valueComponent) => element?.type === valueComponent\n  )\n}\n\nexport const isLayoutComponent = (element): boolean => {\n  return Object.values(Layout).some(\n    (layoutComponent) => element?.type === layoutComponent\n  )\n}\n\nexport const isEufemiaFormComponent = (element): boolean => {\n  return (\n    isFieldComponent(element) ||\n    isValueComponent(element) ||\n    isLayoutComponent(element) ||\n    [\n      FieldBlock,\n      ValueBlock,\n      StepsLayout,\n      StepsLayout.Step,\n      StepsLayout.NextButton,\n      StepsLayout.PreviousButton,\n      StepsLayout.Buttons,\n      Visibility,\n    ].some((Component) => element?.type === Component)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return isEufemiaFormComponent(element) || isEufemiaElement(element)\n}\n\nconst renderWithSpacing = (\n  element: React.ReactNode,\n  spacingProps: SpacingProps\n) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(\n      element as React.ReactElement<SpacingProps>,\n      spacingProps\n    )\n  ) : (\n    <Div {...spacingProps}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  children: React.ReactNode\n}\n\nexport default function FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'stretch',\n    divider = 'space',\n    spacing = 'small',\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...forwardSpaceProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nexport default function MainHeading(props: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level=\"2\"\n      size=\"large\"\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nexport default function SubHeading(props: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level=\"3\"\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport type { ComponentProps } from '../component-types'\nimport { forwardSpaceProps } from '../utils'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  children: React.ReactNode\n}\n\nexport default function FlexItem(props: Props) {\n  const { className, grow, shrink, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    className\n  )\n\n  return (\n    <Div className={cn} {...forwardSpaceProps(props)}>\n      {children}\n    </Div>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nexport default function Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\nimport InfoCardSection from './InfoCardSection'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n  InfoCardSection,\n}\n\nexport default Layout\n","import React from 'react'\nimport classnames from 'classnames'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nexport default function Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...forwardSpaceProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...forwardSpaceProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem className={classnames('dnb-forms-card', className)}>\n      {children}\n    </FlexItem>\n  )\n}\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nexport default function Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nexport default function Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { InfoCard } from '../../../components'\nimport { InfoCardProps } from '../../../components/info-card/InfoCard'\nimport { forwardSpaceProps, omitSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport Section from './Section'\n\nexport type Props = ComponentProps & InfoCardProps\n\nexport default function InfoCardSection(props: Props) {\n  const { className } = props\n  return (\n    <Section\n      className={classnames('dnb-forms-info-card-section', className)}\n      {...forwardSpaceProps(props)}\n    >\n      <InfoCard {...omitSpaceProps(props)} />\n    </Section>\n  )\n}\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from '../Layout/FlexContainer'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps & {\n  index?: number\n  title?: string\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nexport default function Step(props: Props) {\n  const {\n    className,\n    index,\n    direction = 'column',\n    spacing = 'medium',\n    children,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-step', className)}\n      direction={direction}\n      spacing={spacing}\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../component-types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nexport default function NextStepButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../component-types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nexport default function PreviousStepButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of Steps')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Div\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...forwardSpaceProps(props)}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Div>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import React from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../component-types'\nimport ButtonRow from '../Layout/ButtonRow'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport { forwardSpaceProps } from '../utils'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nexport default function Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...forwardSpaceProps(props)}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n","import { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport DataContext from '../../DataContext'\nimport type { ValueProps } from '../../value-types'\n\nexport default function useValue<Props extends ValueProps<any>>(\n  props: Props\n): Props {\n  const { path } = props\n  const dataContext = useContext(DataContext.Context)\n\n  if (path && path.substring(0, 1) !== '/') {\n    throw new Error(\n      'Invalid path. Input path JSON Pointers  must be from root (starting with a /).'\n    )\n  }\n\n  const value = useMemo(() => {\n    return (\n      props.value ??\n      (dataContext.data &&\n      path !== undefined &&\n      pointer.has(dataContext.data, path)\n        ? pointer.get(dataContext.data, path)\n        : undefined)\n    )\n  }, [path, props.value, dataContext.data])\n\n  return {\n    ...props,\n    value,\n  }\n}\n","import React from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { forwardSpaceProps } from '../utils'\nimport { useValue } from './hooks'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps & ValueProps<string>\n\nexport default function ValueString(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber, forwardSpaceProps } from '../utils'\nimport ValueBlock from '../ValueBlock'\nimport { useValue } from './hooks'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps &\n  ValueProps<number> & {\n    // Formatting\n    thousandSeparator?: string | true\n    decimalSymbol?: string\n    decimalLimit?: number\n    prefix?: string\n    suffix?: string\n  }\n\nexport default function ValueNumber(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n","import StringComponent from './String'\nimport NumberComponent from './Number'\nimport BooleanComponent from './Boolean'\nimport Currency from './Currency'\nimport DateComponent from './Date'\nimport Email from './Email'\nimport FirstName from './FirstName'\nimport LastName from './LastName'\nimport NationalIdentityNumber from './NationalIdentityNumber'\nimport PhoneNumber from './PhoneNumber'\nimport BankAccountNumber from './BankAccountNumber'\n\nconst Value = {\n  String: StringComponent,\n  Number: NumberComponent,\n  Boolean: BooleanComponent,\n  Currency,\n  Date: DateComponent,\n  Email,\n  FirstName,\n  LastName,\n  NationalIdentityNumber,\n  PhoneNumber,\n  BankAccountNumber,\n}\n\nexport default Value\n","import React, { useContext } from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useValue } from './hooks'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = ComponentProps & ValueProps<boolean>\n\nexport default function ValueBoolean(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from './Number'\n\nexport type Props = NumberComponentProps\n\nexport default function ValueCurrency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nexport default function ValueDate(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nexport default function ValueEmail(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nexport default function ValueFirstName(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.firstNameLabel,\n  }\n  return <StringComponent {...stringValueProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nexport default function ValueLastName(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.lastNameLabel,\n  }\n  return <StringComponent {...stringValueProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nexport default function ValueNationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nexport default function ValuePhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nexport default function ValueBankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps &\n  Omit<ValueProps<unknown>, 'value'> & {\n    children?: React.ReactNode\n  }\n\nexport default function StringValue(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...forwardSpaceProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n","import React, { useContext } from 'react'\nimport pointer from 'json-pointer'\nimport DataContext from '../DataContext'\n\nexport type Props = {\n  visible?: boolean\n  /** Given data context path must be defined to show children */\n  pathDefined?: string\n  /** Given data context path must be undefined to show children */\n  pathUndefined?: string\n  /** Given data context path must be truthy to show children */\n  pathTruthy?: string\n  /** Given data context path must be falsy to show children */\n  pathFalsy?: string\n  /** Given data context path must be true to show children */\n  pathTrue?: string\n  /** Given data context path must be false to show children */\n  pathFalse?: string\n  /** Infer visibility calling given derivative function with the whole data set. Should return true/false for visibility.   */\n  inferData?: (data: unknown) => boolean\n  children: React.ReactNode\n}\n\nexport default function Visibility({\n  visible,\n  pathDefined,\n  pathUndefined,\n  pathTruthy,\n  pathFalsy,\n  pathTrue,\n  pathFalse,\n  inferData,\n  children,\n}: Props) {\n  const dataContext = useContext(DataContext.Context)\n\n  if (visible === false) {\n    return null\n  }\n\n  if (pathDefined && !pointer.has(dataContext.data, pathDefined)) {\n    return null\n  }\n  if (pathUndefined && pointer.has(dataContext.data, pathUndefined)) {\n    return null\n  }\n\n  if (\n    pathTruthy &&\n    (!pointer.has(dataContext.data, pathTruthy) ||\n      !pointer.get(dataContext.data, pathTruthy))\n  ) {\n    return null\n  }\n  if (\n    pathFalsy &&\n    pointer.has(dataContext.data, pathFalsy) &&\n    Boolean(pointer.get(dataContext.data, pathFalsy))\n  ) {\n    return null\n  }\n\n  if (\n    pathTrue &&\n    (!pointer.has(dataContext.data, pathTrue) ||\n      pointer.get(dataContext.data, pathTrue) !== true)\n  ) {\n    return null\n  }\n  if (\n    pathFalse &&\n    (!pointer.has(dataContext.data, pathFalse) ||\n      pointer.get(dataContext.data, pathFalse) !== false)\n  ) {\n    return null\n  }\n\n  if (inferData && !inferData(dataContext.data)) {\n    return null\n  }\n\n  return <>{children}</>\n}\n"],"names":["isHeadingElement","element","type","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","React","props","top","space","undefined","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isEufemiaFormComponent","Object","values","Field","some","fieldComponent","isFieldComponent","Value","valueComponent","isValueComponent","Layout","layoutComponent","isLayoutComponent","FieldBlock","ValueBlock","StepsLayout","Step","NextButton","PreviousButton","Buttons","Visibility","Component","isSpacePropsComponent","EufemiaElements","eufemiaElement","isEufemiaElement","renderWithSpacing","spacingProps","_jsx","Div","children","FlexContainer","className","direction","wrap","justify","align","divider","spacing","cn","classnames","childrenArray","toArray","forwardSpaceProps","map","child","i","_ref","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","_jsxs","Space","Heading","level","size","FlexItem","grow","shrink","Section","ButtonRow","Card","stack","Row","Column","InfoCardSection","InfoCard","omitSpaceProps","StepsContext","index","stepsContext","useContext","activeIndex","NextStepButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","Button","onClick","handleNext","PreviousStepButton","stepPrevious","handlePrevious","id","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","dataContext","DataContext","setActiveIndex","useState","useCallback","_window","window","scrollTo","behavior","_window2","hasErrors","setShowAllErrors","stepIndicatorData","_child$props$title","Error","title","handleChange","current_step","Provider","value","StepIndicator","Sidebar","sidebar_id","data","no_animation","on_change","useValue","path","Context","substring","useMemo","_props$value","pointer","ValueString","label","placeholder","inline","showEmpty","prepare","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","ValueNumber","String","StringComponent","Number","NumberComponent","Boolean","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","Date","_props$label","stringProps","dateLabel","Email","emailLabel","FirstName","stringValueProps","firstNameLabel","LastName","lastNameLabel","NationalIdentityNumber","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","StringValue","Span","FormLabel","label_direction","visible","pathDefined","pathUndefined","pathTruthy","pathFalsy","pathTrue","pathFalse","inferData","_Fragment"],"sourceRoot":""}