{"version":3,"file":"20b2c8e48ba59a8ac91859d4e27b3c01b460ba32-ef7002f069506ce8d317.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/Context.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/ButtonRow.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/types.ts"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { P } from '@dnb/eufemia/src'\nimport { Layout, StepsLayout } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ Layout, StepsLayout }}>\n      <StepsLayout>\n        <StepsLayout.Step title=\"Step 1\">\n          <div>\n            <P>Step 1 contents</P>\n            <StepsLayout.NextButton />\n          </div>\n        </StepsLayout.Step>\n        <StepsLayout.Step>\n          <div>\n            <P>Step 2 contents</P>\n            <Layout.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Layout.ButtonRow>\n          </div>\n        </StepsLayout.Step>\n        <StepsLayout.Step>\n          <div>\n            <P>Step 3 contents</P>\n            <StepsLayout.PreviousButton />\n          </div>\n        </StepsLayout.Step>\n      </StepsLayout>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\n\nexport interface ContextState {\n  /** The dataset for the form / form steps */\n  data: any\n  /** Should the form validate data before submitting? */\n  errors?: Record<string, Error>\n  handlePathChange: (path: string, value: any) => void\n  handleSubmit: () => any\n  // Error status\n  showAllErrors: boolean\n  setShowAllErrors: (showAllErrors: boolean) => void\n  // Mounted fields - Components telling the provider what fields is on screen at any time\n  mountedFieldPaths: string[]\n  handleMountField: (path: string) => void\n  handleUnMountField: (path: string) => void\n  setPathWithError: (path: string, hasError: boolean) => void\n  hasErrors: () => boolean\n  _isInsideFormElement?: boolean\n}\n\nexport const defaultContextState: ContextState = {\n  data: undefined,\n  handlePathChange: () => null,\n  handleSubmit: () => null,\n  showAllErrors: false,\n  setShowAllErrors: () => null,\n  mountedFieldPaths: [],\n  handleMountField: () => null,\n  handleUnMountField: () => null,\n  hasErrors: () => false,\n  setPathWithError: () => null,\n  _isInsideFormElement: false,\n}\n\nconst Context = React.createContext<ContextState>(defaultContextState)\n\nexport default Context\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nfunction ButtonRow(props: Props) {\n  const { className, children } = props\n  return (\n    <Div\n      className={classnames('dnb-forms-button-row', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Div>\n  )\n}\n\nButtonRow._supportsEufemiaSpacingProps = true\nexport default ButtonRow\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'flex-start',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction MainHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level={level || 2}\n      size=\"large\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction SubHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level={level || 3}\n      size=\"medium\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexItem(props: Props) {\n  const { className, grow, shrink, width, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    width && `dnb-forms-flex-item--width-${width}`,\n    className\n  )\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {children}\n    </Div>\n  )\n}\n\nFlexItem._supportsEufemiaSpacingProps = true\nexport default FlexItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem\n      className={classnames('dnb-forms-card', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexItem>\n  )\n}\n\nCard._supportsEufemiaSpacingProps = true\nexport default Card\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nSection._supportsEufemiaSpacingProps = true\nexport default Section\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nRow._supportsEufemiaSpacingProps = true\nexport default Row\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nColumn._supportsEufemiaSpacingProps = true\nexport default Column\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n}\n\nexport default Layout\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from '../Layout/FlexContainer'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps & {\n  index?: number\n  title?: string\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Step(props: Props) {\n  const {\n    className,\n    index,\n    direction = 'column',\n    spacing = 'medium',\n    children,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-step', className)}\n      direction={direction}\n      spacing={spacing}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nStep._supportsEufemiaSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nNextButton._supportsEufemiaSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPreviousButton._supportsEufemiaSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport ButtonRow from '../Layout/ButtonRow'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...pickSpacingProps(props)}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsEufemiaSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Div\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...pickSpacingProps(props)}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Div>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsEufemiaSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n","import { JSONSchema7 } from 'json-schema'\nimport { SpacingProps } from '../../components/space/types'\n\ninterface IFormErrorOptions {\n  validationRule?: string | string[]\n}\n\n/**\n * Standard error object for Eufemia Forms, extending the built-in error with additional information for data handling\n */\nexport class FormError extends Error {\n  /**\n   * What validation rule did the error occur based on? (i.e: minLength, required or maximum)\n   */\n  validationRule?: string | string[]\n\n  constructor(message: string, options?: IFormErrorOptions) {\n    super(message)\n\n    if (options) {\n      this.validationRule = options.validationRule\n    }\n  }\n}\n\n// Spacing\n\nexport const pickSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): SpacingProps => {\n  return {\n    space: props?.space,\n    top: props?.top,\n    bottom: props?.bottom,\n    left: props?.left,\n    right: props?.right,\n  }\n}\n\nexport const omitSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): Omit<Props, keyof SpacingProps> => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { space, top, bottom, left, right, ...restProps } = props\n  return restProps\n}\n\n// Data value\n\ninterface DefaultErrorMessages {\n  required?: string\n}\n\nexport interface DataValueReadProps<Value = unknown> {\n  /** JSON Pointer for where the data for this field is located in the source dataset */\n  path?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  value?: Value\n}\n\nconst dataValueReadProps = ['path', 'elementPath', 'value']\n\nexport function pickDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): DataValueReadProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): Omit<DataValueReadProps, keyof DataValueReadProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport interface DataValueWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> {\n  emptyValue?: EmptyValue\n  onFocus?: (value: Value | EmptyValue) => void\n  onBlur?: (value: Value | EmptyValue) => void\n  onChange?: (value: Value | EmptyValue) => void\n}\n\nconst dataValueWriteProps = ['emptyValue', 'onFocus', 'onBlur', 'onChange']\n\nexport function pickDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): DataValueWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): Omit<DataValueWriteProps, keyof DataValueWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type DataValueReadWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = DataValueReadProps<Value> & DataValueWriteProps<Value, EmptyValue>\n\nexport function pickDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(props: Props): DataValueReadWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        dataValueReadProps.includes(key) ||\n        dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(\n  props: Props\n): Omit<DataValueReadWriteProps, keyof DataValueReadWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        !dataValueReadProps.includes(key) &&\n        !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type ComponentProps = SpacingProps & {\n  className?: string\n}\n\nexport type DataValueReadComponentProps<Value = unknown> = ComponentProps &\n  DataValueReadProps<Value>\n\nexport type DataValueReadWriteComponentProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = ComponentProps &\n  DataValueReadProps<Value> &\n  DataValueWriteProps<Value, EmptyValue>\n\nexport interface FieldProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n  ErrorMessages extends { required?: string } = DefaultErrorMessages,\n> extends DataValueReadWriteComponentProps<Value, EmptyValue> {\n  /** ID added to the actual field component, and linked to the label via for-attribute */\n  id?: string\n  layout?: 'horizontal' | 'vertical'\n  /** Main label text */\n  label?: string\n  /** A more discreet text displayed beside the label (i.e for \"(optional)\") */\n  labelDescription?: string\n  /** Secondary information displayed at the end of the label line (i.e character counter) */\n  labelSecondary?: string\n  /** Text showing in place of the value if no value is given */\n  placeholder?: string\n  info?: Error | FormError | string\n  warning?: Error | FormError | string\n  error?: Error | FormError\n  disabled?: boolean\n  // Validation\n  required?: boolean\n  schema?: JSONSchema7\n  validator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  onBlurValidator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  /**\n   * Should error messages based on validation be shown initially (from given value-prop or source data)\n   * before the user interacts with the field?\n   * @default false\n   * */\n  validateInitially?: boolean\n  /**\n   * Should error messages be shown when touching (like focusing a field and blurring) without having changed\n   * the value? So the user did not introduce a new error, but it was invalid based on validation initially.\n   */\n  validateUnchanged?: boolean\n  /** Should validation be done while writing, not just when blurring the field? */\n  continuousValidation?: boolean\n  errorMessages?: ErrorMessages\n  // Derivatives\n  toInput?: (external: Value | undefined) => any\n  fromInput?: (...args: any[]) => Value | undefined\n}\n\nexport interface FieldHelpProps {\n  help?: {\n    title?: string\n    contents?: string\n  }\n}\n\nexport interface ValueProps<Value>\n  extends DataValueReadComponentProps<Value> {\n  label?: string\n  /** Should the component render if the value is empty? */\n  showEmpty?: boolean\n  /** Text showing in place of the value if no value is given. */\n  placeholder?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  /** For showing the value inline (not as a block element) */\n  inline?: boolean\n  // Derivatives\n  /** Prepare value for display (regardless of source like props or data context) */\n  prepare?: (external: Value | undefined) => string\n}\n"],"names":["Default","_jsx","ComponentBox","scope","Layout","StepsLayout","children","defaultContextState","data","undefined","handlePathChange","handleSubmit","showAllErrors","setShowAllErrors","mountedFieldPaths","handleMountField","handleUnMountField","hasErrors","setPathWithError","_isInsideFormElement","Context","React","ButtonRow","props","className","Div","classnames","pickSpacingProps","_supportsEufemiaSpacingProps","isHeadingElement","element","type","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","top","space","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","Object","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","FlexContainer","direction","wrap","justify","align","divider","spacing","width","cn","childrenArray","toArray","map","child","i","_ref","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","_jsxs","Space","key","level","Heading","size","FlexItem","grow","shrink","Card","stack","Section","Row","Column","StepsContext","Step","index","stepsContext","useContext","activeIndex","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","id","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","dataContext","DataContext","setActiveIndex","useState","useCallback","_window","window","scrollTo","behavior","_window2","stepIndicatorData","_child$props$title","Error","title","handleChange","current_step","Provider","value","StepIndicator","Sidebar","sidebar_id","no_animation","on_change","FormError","_Error","message","options","_this","call","validationRule","_inheritsLoose","_wrapNativeSuper","left","right","dataValueReadProps","dataValueWriteProps","omitDataValueReadWriteProps","fromEntries","entries","filter","_ref6","includes"],"sourceRoot":""}