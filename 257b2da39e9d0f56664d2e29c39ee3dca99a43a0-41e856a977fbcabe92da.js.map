{"version":3,"file":"257b2da39e9d0f56664d2e29c39ee3dca99a43a0-41e856a977fbcabe92da.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/Value/Boolean/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/Value/Boolean/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/IterateElementContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/hooks/useDataValue.ts"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { P } from '@dnb/eufemia/src'\nimport { Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean placeholder=\"The value was not filled in\" />\n    </ComponentBox>\n  )\n}\n\nexport const ValueTrue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean value={true} />\n    </ComponentBox>\n  )\n}\n\nexport const ValueFalse = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean value={false} />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean label=\"Label text\" showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Boolean label=\"Label text\" value={false} />\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <P>\n        <span style={{ color: 'red' }}>This is before the component</span>\n        <Value.Boolean value={true} inline />\n        <span style={{ color: 'red' }}>This is after the component</span>\n      </P>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Empty) _missingMdxReference(\"Examples.Empty\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.ValueFalse) _missingMdxReference(\"Examples.ValueFalse\", true);\n  if (!Examples.ValueTrue) _missingMdxReference(\"Examples.ValueTrue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.Empty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value: true\"\n    }), \"\\n\", _jsx(Examples.ValueTrue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value: false\"\n    }), \"\\n\", _jsx(Examples.ValueFalse, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport type { ComponentProps } from '../types'\nimport Context from './Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const { data: contextData, handlePathChange: contextHandlePathChange } =\n    dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange = useMemo(\n    () =>\n      contextHandlePathChange\n        ? (changePath, value) => {\n            contextHandlePathChange(`${path}${changePath}`, value)\n          }\n        : undefined,\n    [contextHandlePathChange, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = contextHandlePathChange\n            ? (changePath, value) => {\n                contextHandlePathChange(`${path}/${i}${changePath}`, value)\n              }\n            : undefined\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsEufemiaSpacingProps = true\nexport default At\n","import Context, { ContextState } from './Context'\nimport Provider from './Provider'\nimport At from './At'\n\nconst DataContext = {\n  Context,\n  Provider,\n  At,\n}\n\nexport type { ContextState }\nexport default DataContext\n","import React from 'react'\nimport { FormError } from '../types'\n\nexport interface FieldBlockContextState {\n  setError?: (id: string, error: FormError) => void\n  setShowError?: (id: string, showError: boolean) => void\n}\n\nconst FieldBlockContext = React.createContext<\n  FieldBlockContextState | undefined\n>(undefined)\n\nexport default FieldBlockContext\n","import React from 'react'\n\nexport interface IterateElementContextState {\n  index: number\n  value: unknown\n  path?: string\n  handleChange: (path: string, value: unknown) => void\n  handleRemove: () => void\n  handlePush: (value: unknown) => void\n}\n\nconst IterateElementContext = React.createContext<\n  IterateElementContextState | undefined\n>(undefined)\n\nexport default IterateElementContext\n","import React from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsEufemiaSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../utils'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsEufemiaSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsEufemiaSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from './Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsEufemiaSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsEufemiaSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsEufemiaSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsEufemiaSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsEufemiaSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsEufemiaSpacingProps = true\nexport default BankAccountNumber\n","import StringComponent from './String'\nimport NumberComponent from './Number'\nimport BooleanComponent from './Boolean'\nimport Currency from './Currency'\nimport DateComponent from './Date'\nimport Email from './Email'\nimport NationalIdentityNumber from './NationalIdentityNumber'\nimport PhoneNumber from './PhoneNumber'\nimport BankAccountNumber from './BankAccountNumber'\n\nconst Value = {\n  String: StringComponent,\n  Number: NumberComponent,\n  Boolean: BooleanComponent,\n  Currency,\n  Date: DateComponent,\n  Email,\n  NationalIdentityNumber,\n  PhoneNumber,\n  BankAccountNumber,\n}\n\nexport default Value\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsEufemiaSpacingProps = true\nexport default ValueBlock\n","import {\n  useRef,\n  useEffect,\n  useContext,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport pointer from 'json-pointer'\nimport { FormError, FieldProps } from '../types'\nimport ajv, { ajvErrorsToOneFormError } from '../utils/ajv'\nimport DataContext from '../DataContext'\nimport FieldBlockContext from '../FieldBlock/FieldBlockContext'\nimport IterateElementContext from '../Iterate/IterateElementContext'\nimport { makeUniqueId } from '../../../shared/component-helper'\n\ninterface ReturnAdditional<Value> {\n  id: string\n  value: Value\n  error: Error | FormError | undefined\n  setHasFocus: (hasFocus: boolean, valueOverride?: unknown) => void\n  handleFocus: FieldProps<unknown>['onFocus']\n  handleBlur: FieldProps<unknown>['onBlur']\n  handleChange: FieldProps<unknown>['onChange']\n}\n\nexport default function useDataValue<\n  Value = unknown,\n  Props extends FieldProps<Value> = FieldProps<Value>,\n>(props: Props): Props & ReturnAdditional<Value> {\n  const {\n    path,\n    elementPath,\n    emptyValue,\n    required,\n    error: errorProp,\n    onFocus,\n    onBlur,\n    onChange,\n    validator,\n    onBlurValidator,\n    schema,\n    errorMessages,\n    validateInitially,\n    validateUnchanged,\n    toInput = (value) => value,\n    fromInput = (value) => value,\n  } = props\n  const id = useMemo(() => props.id ?? makeUniqueId(), [props.id])\n  const dataContext = useContext(DataContext.Context)\n  const fieldBlockContext = useContext(FieldBlockContext)\n  const iterateElementContext = useContext(IterateElementContext)\n\n  const {\n    handlePathChange: dataContextHandlePathChange,\n    setPathWithError: dataContextSetPathWithError,\n    errors: dataContextErrors,\n  } = dataContext ?? {}\n  const inFieldBlock = Boolean(fieldBlockContext)\n  const {\n    setError: setFieldBlockError,\n    setShowError: setShowFieldBlockError,\n  } = fieldBlockContext ?? {}\n  const inIterate = Boolean(iterateElementContext)\n  const {\n    index: iterateElementIndex,\n    value: iterateElementValue,\n    handleChange: handleIterateElementChange,\n  } = iterateElementContext ?? {}\n\n  if (path && path.substring(0, 1) !== '/') {\n    throw new Error(\n      'Invalid path. Data value path JSON Pointers must be from root (starting with a /).'\n    )\n  }\n  if (elementPath && elementPath.substring(0, 1) !== '/') {\n    throw new Error(\n      'Invalid elementPath. Element pathJSON Pointers must be from root of iterate element (starting with a /).'\n    )\n  }\n  if (elementPath && !iterateElementContext) {\n    throw new Error(\n      'elementPath cannot be used when not inside an iterate element context. Wrap the component in an Iterate.Loop.'\n    )\n  }\n\n  const externalValue = useMemo(() => {\n    if (props.value !== undefined) {\n      // Value-prop sent directly to the field has highest priority, overriding any surrounding source\n      return props.value\n    }\n\n    if (inIterate && elementPath) {\n      // This field is inside an iterate, and has a pointer from the base of the element being iterated\n      if (elementPath === '/') {\n        return iterateElementValue\n      }\n\n      return pointer.has(iterateElementValue, elementPath)\n        ? pointer.get(iterateElementValue, elementPath)\n        : undefined\n    }\n\n    if (dataContext.data && path) {\n      // There is a surrounding data context and a path for where in the source to find the data\n      if (path === '/') {\n        return dataContext.data\n      }\n\n      return pointer.has(dataContext.data, path)\n        ? pointer.get(dataContext.data, path)\n        : undefined\n    }\n    return undefined\n  }, [\n    path,\n    elementPath,\n    inIterate,\n    iterateElementValue,\n    props.value,\n    dataContext.data,\n  ])\n\n  // Hold an internal copy of the input value in case the input component is used uncontrolled,\n  // and to handle errors in Eufemia on components that does not take updated callback functions into account.\n  const [value, setValue] = useState(externalValue)\n  const changedRef = useRef(false)\n\n  useEffect(() => {\n    // When receiving the initial value, or receiving an updated value by props, update the internal value\n    // so the component can be used \"controlled\".\n    setValue(externalValue)\n  }, [externalValue])\n\n  // Error handling\n  const [error, setError] = useState<Error | FormError | undefined>()\n  const [showError, setShowError] = useState<boolean>(\n    Boolean(validateInitially || errorProp)\n  )\n  const schemaValidator = useMemo(\n    () =>\n      schema && Object.keys(schema).length > 0\n        ? ajv.compile(schema)\n        : undefined,\n    [schema]\n  )\n\n  const setErrorAndUpdateDataContext = useCallback(\n    (error: FormError | undefined) => {\n      const errorWithCorrectMessage =\n        error instanceof FormError &&\n        typeof error.validationRule === 'string' &&\n        errorMessages?.[error.validationRule] !== undefined\n          ? new FormError(errorMessages[error.validationRule])\n          : error\n\n      setError(errorWithCorrectMessage)\n\n      if (path) {\n        // Tell the data context about the error, so it can stop the user from submitting the form until the error has been fixed\n        dataContextSetPathWithError?.(path, Boolean(error))\n      }\n\n      setFieldBlockError?.(path ?? id, errorWithCorrectMessage)\n    },\n    [\n      path,\n      id,\n      errorMessages,\n      dataContextSetPathWithError,\n      setFieldBlockError,\n    ]\n  )\n\n  const validateValue = useCallback(\n    (valueToValidate): FormError | undefined => {\n      // Prioritize received validator functions first\n      // Possible future change: Merge errors if multiple, like one message with each message concatinated.\n      if (typeof validator === 'function') {\n        // Since the validator can return either a synchronous result or an asynchronous\n        Promise.resolve(validator(valueToValidate))\n          // This is a validator, so it is expected to resolve with an error when the value is invalid. If it\n          // throws an error, it is not caught here as that will cause programmatic errors to show inside the form\n          // as if they were operational errors.\n          .then(setErrorAndUpdateDataContext)\n      }\n\n      if (valueToValidate === emptyValue && required) {\n        const error = new FormError('The value is required', {\n          validationRule: 'required',\n        })\n        setErrorAndUpdateDataContext(error)\n        return error\n      } else if (schemaValidator) {\n        // This input has a direct schema (through props)\n        if (valueToValidate === undefined && emptyValue === undefined) {\n          // Avoid validating undefined-values if they are expected (set with emptyValue) as they will\n          // usually fail against json-schema type\n          setErrorAndUpdateDataContext(undefined)\n          return undefined\n        }\n        schemaValidator(valueToValidate)\n        const error = ajvErrorsToOneFormError(schemaValidator.errors)\n        setErrorAndUpdateDataContext(error)\n        return error\n      } else {\n        // Removing any previous error from required\n        setErrorAndUpdateDataContext(undefined)\n        return undefined\n      }\n    },\n    [\n      schemaValidator,\n      emptyValue,\n      required,\n      setErrorAndUpdateDataContext,\n      validator,\n    ]\n  )\n\n  useEffect(() => {\n    // If a surrounding data context has an error for this field (by path) and no error has been set by local component validation, use the data context error\n    if (!error && path && dataContextErrors?.[path]) {\n      setErrorAndUpdateDataContext(dataContextErrors[path])\n    }\n  }, [path, dataContextErrors, error, setErrorAndUpdateDataContext])\n\n  useEffect(() => {\n    if (dataContext.showAllErrors) {\n      // If showError on a surrounding data context was changed and set to true, it is because the user clicked next, submit or\n      // something else that should lead to showing the user all errors.\n      setShowError(true)\n      setShowFieldBlockError?.(path ?? id, true)\n    }\n  }, [id, path, dataContext.showAllErrors, setShowFieldBlockError])\n\n  const setHasFocus = useCallback(\n    (hasFocus: boolean, valueOverride?: unknown) => {\n      if (hasFocus) {\n        // Field was put in focus (like when clicking in a text field or opening a dropdown menu)\n        onFocus?.(valueOverride ?? value)\n      } else {\n        // Field was removed from focus (like when tabbing out of a text field or closing a dropdown menu)\n        onBlur?.(valueOverride ?? value)\n\n        if (!changedRef.current && !validateUnchanged) {\n          // Avoid showing errors when blurring without havinc hanged the value, so tabbing through several\n          // fields does not make errors pop up all over the place\n          return\n        }\n\n        // External blur validators makes it possible to validate values but not on every character change in case of\n        // expensive validation calling external services etc.\n        if (typeof onBlurValidator === 'function') {\n          // Since the validator can return either a synchronous result or an asynchronous\n          Promise.resolve(onBlurValidator(valueOverride ?? value))\n            // This is a validator, so it is expected to resolve with an error when the value is invalid. If it\n            // throws an error, it is not caught here as that will cause programmatic errors to show inside the form\n            // as if they were operational errors.\n            .then(setErrorAndUpdateDataContext)\n        }\n\n        // Since the user left the field, show error (if any)\n        setShowError(true)\n        setShowFieldBlockError?.(path ?? id, true)\n      }\n    },\n    [\n      id,\n      path,\n      value,\n      validateUnchanged,\n      onFocus,\n      onBlur,\n      onBlurValidator,\n      setErrorAndUpdateDataContext,\n      setShowFieldBlockError,\n    ]\n  )\n\n  const handleFocus = useCallback(() => setHasFocus(true), [setHasFocus])\n  const handleBlur = useCallback(() => setHasFocus(false), [setHasFocus])\n\n  const handleChange = useCallback(\n    (argFromInput) => {\n      const newValue = fromInput(argFromInput)\n\n      if (newValue === value) {\n        // Avoid triggering a change if the value was not actually changed. This may be caused by rendering components\n        // calling onChange even if the actual value did not change.\n        return\n      }\n      setValue(newValue)\n      changedRef.current = true\n      // When changing the value, hide errors to avoid annoying the user before they are finished filling in that value\n      setShowError(false)\n      setShowFieldBlockError?.(path ?? id, false)\n      // Always validate the value immediately when it is changed\n      validateValue(newValue)\n\n      // Tell any parent data context about the error, so they can take it into consideration when a submit button is clicked for instance\n      onChange?.(newValue)\n      if (path) {\n        dataContextHandlePathChange?.(path, newValue)\n      }\n      if (elementPath) {\n        const iteratValuePath = `/${iterateElementIndex}${\n          elementPath && elementPath !== '/' ? elementPath : ''\n        }`\n        handleIterateElementChange?.(iteratValuePath, newValue)\n      }\n    },\n    [\n      id,\n      path,\n      elementPath,\n      iterateElementIndex,\n      value,\n      onChange,\n      validateValue,\n      dataContextHandlePathChange,\n      setShowFieldBlockError,\n      handleIterateElementChange,\n      fromInput,\n    ]\n  )\n\n  const exportError = useMemo(() => errorProp ?? error, [errorProp, error])\n\n  useEffect(() => {\n    // Mount procedure\n    if (path) {\n      dataContext?.handleMountField(path)\n    }\n    validateValue(externalValue)\n\n    return () => {\n      // Unmount procedure\n      if (path) {\n        dataContext?.handleUnMountField(path)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Only run for mount and unmount\n  }, [])\n\n  return {\n    ...props,\n    id,\n    value: toInput(value),\n    error: inFieldBlock ? undefined : showError ? exportError : undefined,\n    setHasFocus,\n    handleFocus,\n    handleBlur,\n    handleChange,\n  }\n}\n"],"names":["Empty","_jsx","ComponentBox","scope","Value","children","Placeholder","ValueTrue","ValueFalse","Label","LabelAndValue","Inline","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","At","path","iterate","dataContext","useContext","Context","data","contextData","handlePathChange","contextHandlePathChange","pointer","undefined","useMemo","changePath","value","Array","isArray","map","element","i","Provider","_supportsEufemiaSpacingProps","FieldBlockContext","React","IterateElementContext","StringComponent","className","label","placeholder","inline","showEmpty","prepare","useDataValue","ValueBlock","pickSpacingProps","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","sharedContext","SharedContext","translation","Forms","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","NationalIdentityNumber","stringValueProps","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","String","Number","Boolean","Date","Span","classnames","FormLabel","label_direction","elementPath","emptyValue","required","error","errorProp","onFocus","onBlur","onChange","validator","onBlurValidator","schema","errorMessages","validateInitially","validateUnchanged","toInput","fromInput","_props$id","makeUniqueId","DataContext","fieldBlockContext","iterateElementContext","dataContextHandlePathChange","setPathWithError","dataContextSetPathWithError","errors","dataContextErrors","inFieldBlock","setError","setFieldBlockError","setShowError","setShowFieldBlockError","inIterate","index","iterateElementIndex","iterateElementValue","handleChange","handleIterateElementChange","substring","externalValue","setValue","useState","changedRef","useRef","useEffect","showError","schemaValidator","keys","length","ajv","compile","setErrorAndUpdateDataContext","useCallback","errorWithCorrectMessage","FormError","validationRule","validateValue","valueToValidate","Promise","resolve","then","ajvErrorsToOneFormError","showAllErrors","setHasFocus","hasFocus","valueOverride","current","handleFocus","handleBlur","argFromInput","newValue","exportError","handleMountField","handleUnMountField"],"sourceRoot":""}