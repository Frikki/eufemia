{"version":3,"file":"36ff310912ab70cbc0c42825f34e11e5903b1ceb-91a8420e5b572faee11e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/Examples.tsx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { format } from '@dnb/eufemia/src/components/number-format/NumberUtils'\nimport styled from '@emotion/styled'\nimport Context from '@dnb/eufemia/src/shared/Context'\nimport {\n  Autocomplete,\n  FormRow,\n  IconPrimary,\n  NumberFormat,\n} from '@dnb/eufemia/src'\n\nconst Wrapper = styled.div`\n  [data-visual-test] {\n    > :not(.dnb-autocomplete--is-popup) .dnb-autocomplete__shell {\n      width: var(--autocomplete-width);\n    }\n  }\n  [data-visual-test='autocomplete-opened'] {\n    width: 45rem;\n    height: 22rem !important;\n  }\n`\n\nexport const AutocompleteDefaultExample = () => (\n  <Wrapper>\n    <ComponentBox scope={{ topMovies }}>\n      <Autocomplete data={topMovies} label=\"Label:\" />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteStatusExample = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"autocomplete-status\"\n      scope={{ topMovies }}\n    >\n      <Autocomplete\n        data={topMovies}\n        label=\"Label:\"\n        status=\"Please select a valid date\"\n        status_state=\"info\"\n        show_submit_button\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteNumbersExample = () => (\n  <Wrapper>\n    <ComponentBox scope={{ format }}>\n      <Autocomplete\n        input_value=\"201\"\n        show_clear_button\n        label=\"Label:\"\n        data={[\n          format(20001234567, { ban: true }),\n          format(22233344425, { ban: true }),\n          format(1234.5, { currency: true }),\n          format('+47116000', { phone: true }),\n        ]}\n        search_numbers={true}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteWithCustomTitle = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"autocomplete-closed\"\n      scope={{ topMovies }}\n    >\n      <Autocomplete\n        data={topMovies}\n        keep_value={true}\n        show_clear_button={true}\n        label=\"Label:\"\n        placeholder=\"Custom placeholder ...\"\n        on_change={({ data }) => {\n          console.log('on_change', data)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteDynamicallyUpdatedData = () => (\n  <Wrapper>\n    <ComponentBox scope={{ topMovies }}>\n      {() => {\n        const onTypeHandler = ({\n          value,\n          showIndicator,\n          hideIndicator,\n          updateData,\n          debounce,\n          /* ... */\n        }) => {\n          console.log('typed value:', value)\n\n          showIndicator()\n          debounce(\n            ({ value }) => {\n              console.log('debounced value:', value)\n\n              // simulate server delay\n              const timeout = setTimeout(() => {\n                // update the drawerList\n                updateData(topMovies)\n                hideIndicator()\n              }, 600)\n\n              // cancel invocation method\n              return () => clearTimeout(timeout)\n            },\n            { value },\n            250\n          )\n        }\n        return (\n          <Autocomplete\n            mode=\"async\"\n            on_type={onTypeHandler}\n            no_scroll_animation={true}\n            placeholder=\"Search ...\"\n          />\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteFirstFocusUpdate = () => (\n  <Wrapper>\n    <ComponentBox scope={{ topMovies }}>\n      {() => {\n        const onFocusHandler = ({\n          updateData,\n          dataList,\n          showIndicatorItem,\n        }) => {\n          if (!dataList.length) {\n            showIndicatorItem()\n            setTimeout(() => {\n              updateData(topMovies)\n            }, 1e3)\n          }\n        }\n\n        return (\n          <Autocomplete\n            mode=\"async\"\n            no_scroll_animation={true}\n            prevent_selection={true}\n            on_type={({ value /* updateData, ... */ }) => {\n              console.log('on_type', value)\n            }}\n            on_focus={onFocusHandler}\n          />\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteToggleExample = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"autocomplete-drawer-button\"\n      scope={{ topMovies }}\n    >\n      <Autocomplete\n        label=\"Label:\"\n        value={10}\n        show_submit_button={true}\n        on_change={({ data }) => {\n          console.log('on_change', data)\n        }}\n      >\n        {() => topMovies}\n      </Autocomplete>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompletePredefinedInput = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"autocomplete-drawer-search\"\n      scope={{ topMovies }}\n    >\n      <Autocomplete\n        label=\"Label:\"\n        input_value=\"the pa ther\"\n        no_animation\n        on_change={({ data }) => {\n          console.log('on_change', data)\n        }}\n      >\n        {() => topMovies}\n      </Autocomplete>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteDifferentSizes = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"autocomplete-sizes\"\n      scope={{ topMovies }}\n    >\n      <FormRow direction=\"vertical\">\n        <Autocomplete\n          label=\"Label:\"\n          size=\"default\"\n          bottom\n          data={() => topMovies}\n        />\n        <Autocomplete\n          label=\"Label:\"\n          size=\"medium\"\n          bottom\n          data={() => topMovies}\n        />\n        <Autocomplete\n          label=\"Label:\"\n          size=\"large\"\n          bottom\n          data={() => topMovies}\n        />\n      </FormRow>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteCustomWidth = () => (\n  <ComponentBox\n    data-visual-test=\"autocomplete-input-width\"\n    scope={{ topMovies }}\n  >\n    {() => {\n      const CustomWidthOne = styled(Autocomplete)`\n        .dnb-autocomplete__shell {\n          width: 10rem;\n        }\n      `\n\n      const CustomWidthTwo = styled(Autocomplete)`\n        &.dnb-autocomplete--is-popup .dnb-drawer-list__root {\n          width: 12rem;\n        }\n      `\n      const CustomWidthThree = styled(Autocomplete)`\n        /** Change the \"__shell\" width */\n        .dnb-autocomplete__shell {\n          width: 12rem;\n        }\n\n        /** Change the \"__list\" width */\n        .dnb-drawer-list__root {\n          width: 20rem;\n        }\n      `\n      return (\n        <FormRow direction=\"vertical\">\n          <CustomWidthOne\n            label=\"Label:\"\n            label_sr_only\n            size=\"default\"\n            icon_position=\"left\"\n            bottom\n            data={topMovies}\n          />\n          <CustomWidthTwo\n            label=\"Label:\"\n            label_sr_only\n            size=\"medium\"\n            bottom\n            data={topMovies}\n          />\n          <CustomWidthThree\n            label=\"Label:\"\n            label_sr_only\n            size=\"large\"\n            align_autocomplete=\"right\"\n            icon_position=\"right\"\n            input_icon=\"bell\"\n            bottom\n            data={topMovies}\n          />\n        </FormRow>\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const AutocompleteSuffix = () => {\n  const { locale } = React.useContext(Context)\n  const ban = format(20001234567, { ban: true, locale })\n  const suffix_value = format(12345678, { currency: true, locale })\n  const numbers = [\n    {\n      selected_value: 'Brukskonto',\n      suffix_value,\n      content: ['Brukskonto', ban],\n    },\n    {\n      selected_value: 'BSU',\n      suffix_value,\n      content: ['BSU', ban],\n    },\n    {\n      selected_value: 'Sparekonto',\n      suffix_value,\n      content: ['Sparekonto', ban],\n    },\n    {\n      selected_value: 'Brukskonto',\n      suffix_value,\n      content: ['Brukskonto', ban],\n    },\n  ]\n  return (\n    <ComponentBox\n      data-visual-test=\"autocomplete-suffix\"\n      scope={{ numbers }}\n    >\n      {() => {\n        const CustomWidth = styled(Autocomplete)`\n          .dnb-drawer-list__root,\n          .dnb-autocomplete__shell {\n            width: 50vw;\n            min-width: 15rem;\n            max-width: 30rem;\n          }\n        `\n        return (\n          <CustomWidth\n            value={1}\n            data={numbers}\n            size=\"medium\"\n            input_icon={null}\n            show_submit_button\n            label=\"From account\"\n            label_direction=\"vertical\"\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AutocompleteOpened = () => {\n  if (!(typeof window !== 'undefined' && (window as any).IS_TEST)) {\n    return <></>\n  }\n  return (\n    <Wrapper>\n      <ComponentBox\n        data-visual-test=\"autocomplete-opened\"\n        scope={{ topMovies }}\n        hideCode\n      >\n        <Autocomplete\n          label=\"Label:\"\n          input_value=\"lord\"\n          opened\n          no_animation\n          direction=\"bottom\"\n          prevent_close\n          data={topMovies}\n          right=\"large\"\n        />\n        <Autocomplete\n          label=\"Label:\"\n          input_value=\"angry\"\n          skip_portal\n          opened\n          no_animation\n          direction=\"bottom\"\n          prevent_close\n          data={topMovies}\n          className=\"focus-trigger\"\n        />\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nconst topMovies = [\n  {\n    content: (\n      <Autocomplete.HorizontalItem>\n        <IconPrimary size=\"medium\" icon=\"bell\" right=\"x-small\" />\n        The Shawshank Redemption\n      </Autocomplete.HorizontalItem>\n    ),\n    year: 1994,\n  },\n  { content: ['The Godfather', 'Line with more info'], year: 1972 },\n  {\n    content: [\n      'The Godfather: Part II',\n      <a key=\"a-1\" className=\"dnb-anchor\" href=\"/\">\n        Anchor 1\n      </a>,\n      <a key=\"a-2\" className=\"dnb-anchor\" href=\"/\">\n        Anchor 2\n      </a>,\n      'Line with more info',\n    ],\n    year: 1974,\n  },\n  { content: 'The Dark Knight', year: 2008 },\n  { content: ['12 Angry Men', 'Second row', 'Third row'], year: 1957 },\n  { content: \"Schindler's List\", year: 1993 },\n  { content: 'Pulp Fiction', year: 1994 },\n  { content: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { content: 'The Good, the Bad and the Ugly', year: 1966 },\n  { content: 'Fight Club', year: 1999 },\n  {\n    content: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    content: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { content: 'Forrest Gump', year: 1994 },\n  { content: 'Inception', year: 2010 },\n  { content: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { content: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { content: 'Goodfellas', year: 1990 },\n  { content: 'The Matrix', year: 1999 },\n  { content: 'Seven Samurai', year: 1954 },\n  { content: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { content: 'City of God', year: 2002 },\n  { content: 'Se7en', year: 1995 },\n  { content: 'The Silence of the Lambs', year: 1991 },\n  { content: \"It's a Wonderful Life\", year: 1946 },\n  { content: 'Life Is Beautiful', year: 1997 },\n  { content: 'The Usual Suspects', year: 1995 },\n  { content: 'Léon: The Professional', year: 1994 },\n  { content: 'Spirited Away', year: 2001 },\n  { content: 'Saving Private Ryan', year: 1998 },\n  { content: 'Once Upon a Time in the West', year: 1968 },\n  { content: 'American History X', year: 1998 },\n  { content: 'Interstellar', year: 2014 },\n  { content: 'Casablanca', year: 1942 },\n  { content: 'City Lights', year: 1931 },\n  { content: 'Psycho', year: 1960 },\n  { content: 'The Green Mile', year: 1999 },\n  { content: 'The Intouchables', year: 2011 },\n  { content: 'Modern Times', year: 1936 },\n  { content: 'Raiders of the Lost Ark', year: 1981 },\n  { content: 'Rear Window', year: 1954 },\n  { content: 'The Pianist', year: 2002 },\n  { content: 'The Departed', year: 2006 },\n  { content: 'Terminator 2: Judgment Day', year: 1991 },\n  { content: 'Back to the Future', year: 1985 },\n  { content: 'Whiplash', year: 2014 },\n  { content: 'Gladiator', year: 2000 },\n  { content: 'Memento', year: 2000 },\n  { content: 'The Prestige', year: 2006 },\n  { content: 'The Lion King', year: 1994 },\n  { content: 'Apocalypse Now', year: 1979 },\n  { content: 'Alien', year: 1979 },\n  { content: 'Sunset Boulevard', year: 1950 },\n  {\n    content:\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { content: 'The Great Dictator', year: 1940 },\n  { content: 'Cinema Paradiso', year: 1988 },\n  { content: 'The Lives of Others', year: 2006 },\n  { content: 'Grave of the Fireflies', year: 1988 },\n  { content: 'Paths of Glory', year: 1957 },\n  { content: 'Django Unchained', year: 2012 },\n  { content: 'The Shining', year: 1980 },\n  { content: 'WALL·E', year: 2008 },\n  { content: 'American Beauty', year: 1999 },\n  { content: 'The Dark Knight Rises', year: 2012 },\n  { content: 'Princess Mononoke', year: 1997 },\n  { content: 'Aliens', year: 1986 },\n  { content: 'Oldboy', year: 2003 },\n  { content: 'Once Upon a Time in America', year: 1984 },\n  { content: 'Witness for the Prosecution', year: 1957 },\n  { content: 'Das Boot', year: 1981 },\n  { content: 'Citizen Kane', year: 1941 },\n  { content: 'North by Northwest', year: 1959 },\n  { content: 'Vertigo', year: 1958 },\n  { content: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { content: 'Reservoir Dogs', year: 1992 },\n  { content: 'Braveheart', year: 1995 },\n  { content: 'M', year: 1931 },\n  { content: 'Requiem for a Dream', year: 2000 },\n  { content: 'Amélie', year: 2001 },\n  { content: 'A Clockwork Orange', year: 1971 },\n  { content: 'Like Stars on Earth', year: 2007 },\n  { content: 'Taxi Driver', year: 1976 },\n  { content: 'Lawrence of Arabia', year: 1962 },\n  { content: 'Double Indemnity', year: 1944 },\n  { content: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { content: 'Amadeus', year: 1984 },\n  { content: 'To Kill a Mockingbird', year: 1962 },\n  { content: 'Toy Story 3', year: 2010 },\n  { content: 'Logan', year: 2017 },\n  { content: 'Full Metal Jacket', year: 1987 },\n  { content: 'Dangal', year: 2016 },\n  { content: 'The Sting', year: 1973 },\n  { content: '2001: A Space Odyssey', year: 1968 },\n  { content: \"Singin' in the Rain\", year: 1952 },\n  { content: 'Toy Story', year: 1995 },\n  { content: 'Bicycle Thieves', year: 1948 },\n  { content: 'The Kid', year: 1921 },\n  { content: 'Inglourious Basterds', year: 2009 },\n  { content: 'Snatch', year: 2000 },\n  { content: '3 Idiots', year: 2009 },\n  { content: 'Monty Python and the Holy Grail', year: 1975 },\n]\n\nexport const AutocompleteDisabledExample = () =>\n  !globalThis.IS_TEST ? null : (\n    <Wrapper>\n      <ComponentBox\n        scope={{ topMovies }}\n        data-visual-test=\"autocomplete-disabled\"\n      >\n        <Autocomplete\n          disabled\n          show_submit_button\n          data={topMovies}\n          value={1}\n          label=\"Label:\"\n          bottom\n        />\n        <br />\n        <Autocomplete\n          disabled\n          show_submit_button\n          data={topMovies}\n          value={1}\n          label=\"Label:\"\n          suffix=\"Suffix\"\n          size=\"large\"\n        />\n      </ComponentBox>\n    </Wrapper>\n  )\n\nexport const AutocompleteContentAsArrayExample = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <Autocomplete\n        data={[\n          {\n            content: [\n              <IconPrimary icon=\"bell\" key=\"item-1\" />,\n              <span className=\"custom-selector-a\" key=\"item-2\">\n                The Shawshank Redemption\n              </span>,\n              <span className=\"custom-selector-b\" key=\"item-3\">\n                The Dark Knight\n              </span>,\n              // etc.\n              <NumberFormat value={1234} key=\"item-4\" />, // <-- Not searchable nor highlightable\n            ],\n          },\n        ]}\n        label=\"Label:\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteContentAsFragmentExample = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <Autocomplete\n        data={[\n          {\n            content: (\n              <>\n                <IconPrimary icon=\"bell\" />\n                <span className=\"custom-selector-a\">\n                  The Shawshank Redemption\n                </span>\n                <span className=\"custom-selector-b\">The Dark Knight</span>\n              </>\n            ),\n          },\n        ]}\n        label=\"Label:\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const AutocompleteContentDecoupledExample = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <Autocomplete\n        data={[\n          {\n            content: ['your visual content'],\n            search_content: ['your search content'],\n          },\n        ]}\n        label=\"Label:\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n"],"names":["Wrapper","AutocompleteDefaultExample","AutocompleteStatusExample","AutocompleteNumbersExample","AutocompleteWithCustomTitle","AutocompleteDynamicallyUpdatedData","AutocompleteFirstFocusUpdate","AutocompleteToggleExample","AutocompletePredefinedInput","AutocompleteDifferentSizes","AutocompleteCustomWidth","AutocompleteSuffix","React","ban","format","suffix_value","currency","numbers","selected_value","content","AutocompleteOpened","window","topMovies","size","icon","right","year","className","href","AutocompleteDisabledExample","globalThis","AutocompleteContentAsArrayExample","AutocompleteContentAsFragmentExample","AutocompleteContentDecoupledExample"],"sourceRoot":""}