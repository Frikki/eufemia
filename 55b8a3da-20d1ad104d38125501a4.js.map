{"version":3,"sources":["webpack://dnb-design-system-portal/./src/shared/menu/SidebarMenu.js"],"names":["PortalToolsMenuMedia","PortalToolsMenu","StyledListItem","Navigation","showAlwaysMenuItems","SidebarLayout","React","constructor","props","super","e","keycode","this","isOpen","toggleMenu","_scrollRef","setPageFocusElement","componentDidMount","current","window","delayBuff","scrollToLastPosition","onscroll","busySettingNewPos","clearTimeout","setTimeout","localStorage","setItem","target","scrollTop","console","log","document","addEventListener","handleKeyDown","getLastPosition","getItem","parseFloat","offsetTop","lastPos","scrollToActiveItem","elem","querySelector","offset","getBoundingClientRect","top","rect","scrollTo","behavior","componentWillUnmount","removeEventListener","render","location","showAll","styles","StaticQuery","query","allMdx","site","pathPrefix","currentPathname","pathname","replace","currentPathnameList","split","filter","i","nav","prepareNav","title","menuTitle","map","path","active","inside","every","includes","curr","arr","prev","level","status","icon","nr","to","onOffsetTop","ListItem","key","isClosing","context","applyPageFocus","id","aria-labelledby","className","classnames","ref","trigger_text","trigger_icon","trigger_icon_position","left","PropTypes","SidebarMenuContext","children","statusTitle","new","beta","wip","cs","dep","imp","params","style","onClick","resetLevels","graphics","size","createSkeletonClass","skeleton","aria-label","Context","first","prefix","p","navItems","edges","node","fields","slug","sort","reduce","acc","cur","items","find","url","countLevels","levelCache","subCache","list","concat","slugPath","frontmatter","order","rest","length","_order","item","parts","sub","slice","join","count","push","oA","oB"],"mappings":"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","file":"55b8a3da-20d1ad104d38125501a4.js","sourcesContent":["/**\n * Sidebar with Menu\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Link from '../parts/Link'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { css, Global } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { resetLevels } from '@dnb/eufemia/src/components/Heading'\nimport Context from '@dnb/eufemia/src/shared/Context'\nimport { SidebarMenuContext } from './SidebarMenuContext'\nimport { createSkeletonClass } from '@dnb/eufemia/src/components/skeleton/SkeletonHelper'\nimport { Icon } from '@dnb/eufemia/src/components'\nimport graphics from './SidebarGraphics'\nimport keycode from 'keycode'\nimport {\n  setPageFocusElement,\n  applyPageFocus\n} from '@dnb/eufemia/src/shared/helpers'\nimport PortalToolsMenu from './PortalToolsMenu'\n\nconst PortalToolsMenuMedia = styled(PortalToolsMenu)`\n  @media screen and (min-width: 50em) {\n    display: none;\n  }\n`\n\nconst StyledListItem = styled.li`\n  list-style: none;\n  margin: 0;\n\n  .dnb-anchor {\n    position: relative;\n    padding: 0;\n    height: 2.5rem;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    transform: translateY(1px);\n    color: var(--color-emerald-green);\n    background-color: inherit;\n    font-size: inherit;\n\n    &:hover {\n      color: var(--color-black);\n      background-color: transparent;\n    }\n  }\n\n  .show-mobile-menu & {\n    opacity: 0.3;\n    animation: show-mobile-menu 600ms cubic-bezier(0.19, 1, 0.22, 1) 1\n      var(--delay) forwards;\n  }\n  .hide-mobile-menu & {\n    opacity: 1;\n    animation: hide-mobile-menu 300ms cubic-bezier(0.19, 1, 0.22, 1) 1\n      calc(10ms - var(--delay)) forwards;\n  }\n\n  &:first-of-type {\n    margin-bottom: 1rem;\n    font-size: var(--font-size-large);\n    background-color: transparent;\n  }\n\n  html:not([dev-grid]) & {\n    background-color: var(--color-white);\n  }\n\n  &.l-1 .dnb-anchor {\n    margin-left: var(--level-icon-adjust);\n    padding-left: calc(var(--level-offset) + var(--level) * 2);\n    height: 4rem;\n    color: var(--color-ocean-green);\n    font-weight: var(--font-weight-medium);\n    font-size: var(--font-size-large);\n  }\n  &.l-2 {\n    .dnb-anchor {\n      padding-left: calc(var(--level-offset) + var(--level) * 2);\n      height: 3.5rem;\n\n      .dnb-icon {\n        margin-right: 1rem;\n        margin-left: var(--level-icon-adjust);\n        color: var(--color-black-80);\n      }\n    }\n    &.is-inside {\n      html:not([dev-grid]) & {\n        background-color: var(--color-mint-green-12);\n      }\n      font-weight: var(--font-weight-medium);\n    }\n  }\n\n  &.l-3 {\n    font-size: var(--font-size-small); /* small size */\n    .dnb-anchor {\n      padding-left: calc(var(--level-offset) + var(--level) * 3);\n    }\n    &.is-inside {\n      html:not([dev-grid]) & {\n        background-color: var(--color-sea-green-30);\n      }\n      font-weight: var(--font-weight-medium);\n    }\n  }\n\n  &.l-4 .dnb-anchor {\n    padding-left: calc(var(--level-offset) + var(--level) * 4);\n  }\n  &.l-5 .dnb-anchor {\n    padding-left: calc(var(--level-offset) + var(--level) * 5);\n  }\n  &.l-6 .dnb-anchor {\n    padding-left: calc(var(--level-offset) + var(--level) * 6);\n  }\n\n  &.l-4,\n  &.l-5,\n  &.l-6 {\n    font-size: var(--font-size-small); /* small size */\n    &.is-inside {\n      html:not([dev-grid]) & {\n        background-color: var(--color-mint-green-12);\n      }\n    }\n  }\n\n  &.l-1,\n  &.l-2,\n  &.l-3,\n  &.l-4,\n  &.l-5,\n  &.l-6 {\n    &.is-active {\n      html:not([dev-grid]) & {\n        background-color: var(--color-mint-green-50);\n      }\n    }\n  }\n\n  .dnb-anchor:focus:not(:active) {\n    color: var(--color-white);\n    svg {\n      color: var(--color-white);\n    }\n    background-color: var(--color-emerald-green);\n  }\n\n  @keyframes show-mobile-menu {\n    0% {\n      opacity: 0.3;\n      transform: translate3d(0, -20%, 0);\n    }\n    40% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 1;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n  @keyframes hide-mobile-menu {\n    0% {\n      opacity: 1;\n      transform: translate3d(0, 0, 0);\n    }\n    60% {\n      opacity: 0.5;\n      transform: translate3d(0, 0, 0);\n    }\n    100% {\n      opacity: 0.3;\n      transform: translate3d(0, -20%, 0);\n    }\n  }\n\n  .status-badge {\n    margin-right: 1rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: baseline; /* then we can set line-height */\n\n    font-size: 0.4375rem; /* safari handles rem value incorrectly */\n    line-height: 1.3125rem; /* same as height + 1px */\n    font-weight: var(--font-weight-basis);\n    text-align: center;\n    text-transform: uppercase;\n    color: var(--color-black);\n\n    /* bg */\n    height: 1.25rem;\n    width: 1.25rem;\n    border-radius: 50%;\n\n    background-color: var(--color-mint-green-25);\n    &::after {\n      content: '';\n      position: absolute;\n      z-index: 1;\n    }\n  }\n  &.status-dep .status-badge {\n    color: var(--color-black-80);\n    background-color: var(--color-fire-red-8);\n  }\n  &.status-new .status-badge {\n    color: var(--color-sea-green);\n    background-color: transparent;\n  }\n  &.status-beta .status-badge {\n    color: var(--color-fire-red);\n    background-color: transparent;\n  }\n  &.status-imp .status-badge {\n    background-color: var(--color-black);\n    color: var(--color-white);\n  }\n`\n\nconst Navigation = styled.nav`\n  position: fixed;\n\n  /* lower than styled.main */\n  z-index: 1;\n\n  /* height of StickyMenuBar */\n  height: calc(100vh - 4rem);\n  margin: 4rem 0 0;\n\n  /* make the sidebar scrollable */\n  overflow-x: hidden;\n  overflow-y: auto;\n  overscroll-behavior: contain;\n  -ms-overflow-style: none;\n\n  /* make the sidemenu accessible for screen readers on mobile devices  */\n  @media screen and (max-width: 50em) {\n    position: relative;\n    height: auto;\n    overflow: auto;\n  }\n\n  background-color: var(--color-white);\n\n  ul {\n    /* some air we need */\n    padding: 2rem 0 1rem;\n\n    /* has to be the same value as margin-left */\n    width: 30vw;\n    width: var(--aside-width);\n  }\n\n  /*\n    God for a mobile menu instead\n    make sure that Content main \"styled.main\" gets the same max-width\n  */\n  @media screen and (max-width: 50em) {\n    &:not(.show-mobile-menu) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 50em) {\n    position: relative;\n    ul {\n      width: 100vw;\n      max-height: none;\n      overflow-y: visible;\n    }\n  }\n\n  .main-menu-toggle {\n    margin-left: var(--level-offset);\n\n    .dnb-icon:nth-of-type(1) {\n      color: var(--color-sea-green);\n      margin-right: 0.5rem;\n\n      &.dnb-icon--small {\n        margin-left: 0.5rem;\n      }\n    }\n\n    &.dnb-button__text {\n      color: var(--color-sea-green);\n    }\n    &.dnb-button:hover {\n      color: var(--color-black);\n      .dnb-button__text,\n      .dnb-icon {\n        color: inherit;\n      }\n    }\n\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n  }\n`\n\nconst showAlwaysMenuItems = [] // like \"uilib\" something like that\n\nexport default class SidebarLayout extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    showAll: PropTypes.bool\n  }\n  static defaultProps = {\n    showAll: false\n  }\n  static contextType = SidebarMenuContext\n\n  constructor(props) {\n    super(props)\n    this._scrollRef = React.createRef()\n    setPageFocusElement('nav ul li.is-active a:nth-of-type(1)', 'sidebar')\n  }\n\n  componentDidMount() {\n    // remember last scroll position\n    if (this._scrollRef.current) {\n      if (typeof window !== 'undefined') {\n        let delayBuff\n        this.scrollToLastPosition()\n\n        this._scrollRef.current.onscroll = (e) => {\n          if (this.busySettingNewPos) return\n          clearTimeout(delayBuff)\n          delayBuff = setTimeout(() => {\n            try {\n              window.localStorage.setItem('sidebarPos', e.target.scrollTop)\n            } catch (e) {\n              console.log('SidebarLayout error:', e)\n            }\n          }, 100)\n        }\n      }\n    }\n\n    if (typeof document !== 'undefined') {\n      document.addEventListener('keydown', this.handleKeyDown)\n    }\n  }\n\n  getLastPosition() {\n    if (typeof window !== 'undefined') {\n      try {\n        return window.localStorage.getItem('sidebarPos')\n          ? parseFloat(window.localStorage.getItem('sidebarPos'))\n          : this.offsetTop\n      } catch (e) {\n        return 0\n      }\n    }\n  }\n\n  scrollToLastPosition() {\n    if (this._scrollRef.current) {\n      this.busySettingNewPos = true\n      const lastPos = this.getLastPosition()\n      if (lastPos > 0) {\n        this._scrollRef.current.scrollTop = lastPos\n      } else {\n        this.scrollToActiveItem()\n      }\n      setTimeout(() => {\n        this.busySettingNewPos = false\n      }, 10)\n    }\n  }\n\n  scrollToActiveItem() {\n    if (this._scrollRef.current) {\n      const elem = this._scrollRef.current.querySelector('li.is-active')\n      if (!elem) {\n        return false\n      }\n      try {\n        const offset = this._scrollRef.current.getBoundingClientRect().top\n        const rect = elem.getBoundingClientRect()\n        const top = this._scrollRef.current.scrollTop + rect.top - offset\n        if (window.scrollTo) {\n          window.scrollTo({\n            top,\n            behavior: 'smooth'\n          })\n        } else {\n          window.scrollTop = top\n        }\n      } catch (e) {\n        console.log('Could not set scrollToActiveItem', e)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleKeyDown = (e) => {\n    switch (keycode(e)) {\n      case 'esc':\n        if (this.isOpen) {\n          this.toggleMenu()\n        }\n        break\n    }\n  }\n\n  render() {\n    const { location, showAll = false } = this.props\n\n    return (\n      <>\n        <Global\n          styles={css`\n            :root {\n              --level-offset: 3vw;\n              @media screen and (max-width: 50em) {\n                --level-offset: 2rem;\n              }\n\n              --delay: 0; /* polyfill fallback */\n\n              /* stylelint-disable */\n              --aside-width: 30vw; /* IE fix */\n              --aside-width: calc(25vw + 5rem);\n              /* stylelint-enable */\n\n              /* 2.5rem - but we don't want it to be responsive */\n              --level-icon-adjust: -40px;\n              --level: 2vw;\n\n              @media screen and (max-width: 50em) {\n                --level: 1.3rem;\n              }\n            }\n          `}\n        />\n        <StaticQuery\n          query={graphql`\n            query {\n              site {\n                pathPrefix\n              }\n              allMdx(\n                # limit: 2\n                # sort: { fields: [frontmatter___order], order: ASC }\n                filter: {\n                  frontmatter: { title: { ne: null }, draft: { ne: true } }\n                }\n              ) {\n                edges {\n                  node {\n                    fields {\n                      slug\n                    }\n                    frontmatter {\n                      title\n                      menuTitle\n                      order\n                      status\n                      icon\n                    }\n                  }\n                }\n              }\n            }\n          `}\n          render={({ allMdx, site: { pathPrefix } }) => {\n            const currentPathname = location.pathname.replace(/(\\/)$/, '')\n            const currentPathnameList = currentPathname\n              .split('/')\n              .filter((i) => i)\n\n            const nav = prepareNav({\n              location,\n              allMdx,\n              showAll,\n              pathPrefix\n            })\n              .filter(({ title, menuTitle }) => title || menuTitle)\n\n              .map((props) => {\n                const path = `/${props.path}`\n\n                // get the active item\n                const active =\n                  currentPathname === path ||\n                  currentPathname === path.replace(/(\\/)$/, '')\n\n                // check if a item path is inside another\n                const inside = path\n                  .split('/')\n                  .filter((i) => i)\n                  .every((i) => currentPathnameList.includes(i))\n\n                return { ...props, active, inside }\n              })\n\n              // mark also the rest of the same level as inside\n              .map((curr, i, arr) => {\n                const prev = arr[i - 1] ? arr[i - 1] : null\n                if (prev && curr.level >= 4) {\n                  if (prev.inside && curr.level >= prev.level) {\n                    curr.inside = true\n                  }\n                }\n                return curr\n              })\n              .map(\n                (\n                  {\n                    title,\n                    menuTitle,\n                    status,\n                    icon,\n                    path,\n                    level,\n                    active,\n                    inside\n                  },\n                  nr\n                ) => {\n                  const props = {\n                    level,\n                    nr,\n                    status,\n                    icon,\n                    active,\n                    inside,\n                    to: path,\n                    onOffsetTop: (offsetTop) =>\n                      (this.offsetTop = offsetTop)\n                  }\n\n                  return (\n                    <ListItem key={path} {...props}>\n                      {menuTitle || title}\n                    </ListItem>\n                  )\n                }\n              )\n\n            const { isOpen, isClosing, toggleMenu } = this.context\n\n            this.isOpen = isOpen\n            this.toggleMenu = toggleMenu\n            if (isOpen && !isClosing) {\n              setTimeout(() => {\n                this.scrollToActiveItem()\n                applyPageFocus('sidebar')\n              }, 300) // after animation is done\n            } else if (isClosing) {\n              setTimeout(() => {\n                applyPageFocus('content')\n              }, 300) // after animation is done - to make sure we can get the focus on h1\n            }\n\n            return (\n              <>\n                <Navigation\n                  id=\"portal-sidebar-menu\"\n                  aria-labelledby=\"toggle-sidebar-menu\"\n                  className={classnames(\n                    'dnb-scrollbar-appearance',\n                    isOpen && 'show-mobile-menu',\n                    isClosing && 'hide-mobile-menu'\n                  )}\n                  ref={this._scrollRef}\n                >\n                  <PortalToolsMenuMedia\n                    trigger_text=\"Portal Tools\"\n                    trigger_icon=\"chevron_right\"\n                    trigger_icon_position=\"right\"\n                    left=\"large\"\n                    top=\"large\"\n                  />\n                  <ul className=\"dev-grid\">{nav}</ul>\n                  {isOpen && (\n                    <Global\n                      styles={css`\n                        .dnb-app-content {\n                          display: none !important;\n                        }\n                      `}\n                    />\n                  )}\n                </Navigation>\n              </>\n            )\n          }}\n        />\n      </>\n    )\n  }\n}\n\nclass ListItem extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    onOffsetTop: PropTypes.func,\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    to: PropTypes.string.isRequired,\n    level: PropTypes.number,\n    nr: PropTypes.number,\n    status: PropTypes.string,\n    icon: PropTypes.string,\n    active: PropTypes.bool,\n    inside: PropTypes.bool\n  }\n  static defaultProps = {\n    className: null,\n    active: false,\n    inside: false,\n    level: 0,\n    nr: null,\n    status: null,\n    icon: null,\n    onOffsetTop: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n  componentDidMount() {\n    if (this.props.active && this.ref.current) {\n      this.props.onOffsetTop(this.ref.current.offsetTop)\n    }\n  }\n\n  render() {\n    const {\n      className,\n      active,\n      inside,\n      to,\n      level,\n      nr,\n      status,\n      icon,\n      children\n    } = this.props\n\n    const statusTitle =\n      status &&\n      {\n        new: 'New',\n        beta: 'Beta',\n        wip: 'Work in Progress',\n        cs: 'Coming soon',\n        dep: 'Deprecated',\n        imp: 'Needs improvement'\n      }[status]\n\n    const params = {}\n    if (active) {\n      params['aria-current'] = true\n    }\n\n    return (\n      <StyledListItem\n        className={classnames(\n          `l-${level}`,\n          active && 'is-active', // use anchor hover style\n          inside && 'is-inside',\n          status ? `status-${status}` : null,\n          className\n        )}\n        ref={this.ref}\n        style={{\n          '--delay': `${\n            nr !== null && nr < 20 ? nr * 12 : 0 // random(1, 160)\n          }ms`\n        }}\n      >\n        <Link\n          to={to}\n          onClick={() => {\n            resetLevels(1)\n          }}\n          className={classnames(\n            'dnb-anchor',\n            'dnb-anchor--no-underline',\n            'dnb-anchor--no-radius',\n            'dnb-anchor--no-hover',\n            icon && graphics[icon] ? 'has-icon' : null\n          )}\n          {...params}\n        >\n          <span>\n            {icon && graphics[icon] && (\n              <Icon icon={graphics[icon]} size=\"medium\" />\n            )}\n            <span\n              className={classnames(\n                createSkeletonClass('font', this.context.skeleton)\n              )}\n            >\n              {children}\n            </span>\n          </span>\n          {status && (\n            <span\n              className={classnames(\n                'status-badge',\n                createSkeletonClass('font', this.context.skeleton)\n              )}\n              title={statusTitle}\n              aria-label={statusTitle}\n            >\n              {status}\n            </span>\n          )}\n        </Link>\n      </StyledListItem>\n    )\n  }\n}\n\nconst prepareNav = ({ location, allMdx, showAll, pathPrefix }) => {\n  const pathname = location.pathname.replace(/(\\/)$/, '')\n  let first = null\n  if (showAll === false) {\n    const prefix = pathPrefix ? pathPrefix.replace(/^(\\/)/, '') : null\n    first = pathname.split('/').filter((p) => p && p !== prefix)[0]\n  }\n\n  const navItems = allMdx.edges\n    .map(\n      ({\n        node: {\n          fields: { slug }\n        }\n      }) => slug\n    )\n    .filter((slug) => slug !== '/')\n    // preorder\n    .sort()\n    .reduce(\n      (acc, cur) => {\n        const prefix = cur.split('/').filter((p) => p)[0]\n\n        if (showAll === false) {\n          if (prefix === first) {\n            return { ...acc, items: [...acc.items, cur] }\n          } else {\n            return { ...acc, [cur]: [cur] }\n          }\n        } else {\n          if (showAlwaysMenuItems.find((url) => url === cur)) {\n            return { ...acc, [cur]: [cur] }\n          }\n\n          if (\n            prefix &&\n            showAlwaysMenuItems.find((url) => url === `/${prefix}`)\n          ) {\n            return {\n              ...acc,\n              [`/${prefix}`]: [...acc[`/${prefix}`], cur]\n            }\n          } else {\n            return { ...acc, items: [...acc.items, cur] }\n          }\n        }\n      },\n      { items: [] }\n    )\n\n  let countLevels = 0\n  const levelCache = {},\n    subCache = {}\n\n  const list = showAlwaysMenuItems\n    .reduce((acc, cur) => acc.concat(navItems[cur]), []) // put in the sub parts\n    .concat(navItems.items) // put inn the main parts\n    // make items\n    .map((slugPath) => {\n      const {\n        node: {\n          fields: { slug },\n          frontmatter: { title, order, ...rest }\n        }\n      } = allMdx.edges.find(\n        ({\n          node: {\n            fields: { slug }\n          }\n        }) => slug === slugPath\n      )\n\n      const level = slug.split('/').filter((p) => p).length\n      level > countLevels ? (countLevels = level) : countLevels\n\n      return { title, path: slug, level, order, _order: slug, ...rest }\n    })\n\n    // prepare items, make sure we forward order for sub paths, if needed\n    .map((item) => {\n      const parts = item.path.split('/').filter((p) => p)\n      const sub = parts.slice(0, parts.length - 1).join('/')\n\n      subCache[sub] = subCache[sub] || {\n        count: 1\n      }\n      levelCache[item.level] = levelCache[item.level] || {}\n      const count = subCache[sub].count++\n\n      item._order = parts\n        .reduce((acc, cur, i) => {\n          if (!levelCache[item.level][cur]) {\n            levelCache[item.level][cur] = item.order\n              ? parseFloat(item.order) + 1000 // push manual ordering to the top\n              : count\n          }\n          if (levelCache[i + 1]) {\n            acc.push(levelCache[i + 1][cur])\n          }\n          return acc\n        }, [])\n        .join('/')\n\n      return item\n    })\n\n  list\n    // reorder regarding potential manually defined order\n    .sort(({ _order: oA }, { _order: oB }) =>\n      oA < oB ? -1 : oA > oB ? 1 : 0\n    )\n  return list\n}\n\n// const random = (min, max) =>\n//   Math.floor(Math.random() * (max - min + 1) + min)\n"],"sourceRoot":""}