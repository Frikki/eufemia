{"version":3,"file":"560353e96ef4970dcd2c662c33ce6240ba0ae9f7-b96463b78e598106d4be.js","mappings":"gpBAgBO,MAAMA,EAA4BA,KACvCC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,WAAA,IACAC,aACA,KAAAC,UAAA,EAAAC,SAAA,01BAqDaC,EAA+BA,KAC1CV,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFS,YAAA,IACAP,OAAA,IACAC,MAAA,IACAC,WAAA,IACAM,OAAA,IACAL,aAAA,IACAM,YACA,eAAAL,UAAA,EAAAC,SAAA,u+CAwEaK,EAAsBA,KACjCd,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,6aAyBaS,EAAgBA,KAC3BlB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,iSAeaU,EAAmBA,KAC9BnB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,uiBA0BaW,EAAwBA,KACnCpB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,0qCAkDaY,EAAmBA,KAC9BrB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,kyBAoCaa,EAAaA,KACxBtB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,ixBAgCac,EAAYA,KACvBvB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,KAAA,IACAC,OAAA,IACAW,YAAA,IACAV,MAAA,IACAW,MAAA,IACAC,WACA,KAAAR,SAAA,sgE,sICnYA,SAASe,EAAaC,GACpB,MAAMC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3B,UACJC,EAAS,SACTpB,GAAWiB,aAAa,EAAbA,EAAeI,YAAYC,MAAMC,kBACzCC,GACDR,EACES,GAAcP,EAAAA,EAAAA,YAAWQ,EAAAA,GAE/B,OACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLP,UAAWQ,IAAW,2BAA4BR,GAClDS,QACEJ,EAAYK,qBAAuB,KAAOL,EAAYM,aAExDC,KAAK,YACDR,EAAIxB,SAEPA,GAGP,CAEAe,EAAakB,8BAA+B,EAC5C,Q,WC1Be,SAASC,EAAWC,GAKxB,IALyB,SAClCnC,EAAQ,UACRoB,EAAY,KAAI,SAChBgB,EAAW,QACRZ,GACGW,EACN,MAAMV,EAAcY,EAAAA,WAAiBX,EAAAA,GAQrC,OAFAD,EAAYK,sBAAuB,GAGjCvC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CACJC,QAAQ,OACRnB,UAAWQ,IAAW,kBAAmBR,GACzCgB,SAOJ,SAAyBI,GAA+C,IAADC,EACrED,SAAAA,EAAOE,iBAEPjB,SAAyB,QAAdgB,EAAXhB,EAAaM,oBAAY,IAAAU,GAAzBA,EAAAE,KAAAlB,GAEwB,mBAAbW,GACTA,EAASI,EAEb,KAdQhB,EAAIxB,SAEPA,GAaP,C,eChCA,MANmB,CACjB4C,QCGa,SAAoBT,GAUF,IAV4B,SAC3DnC,EAAQ,KACR6C,EAAI,OACJC,EAAM,SACNC,EAAQ,aACRC,EAAY,SACZZ,EAAQ,gBACRa,EAAe,kBACfC,KACG1B,GACyBW,EAC5B,MAAMgB,EAAgB,CACpBN,OACAC,SACAC,WACAC,eACAZ,SAAWS,IACe,mBAAbT,GACTA,EAASS,EACX,EAEFI,kBACAC,qBAGF,OACE3D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAQ,IAAKD,EAAanD,UACzBT,EAAAA,EAAAA,KAAC2C,EAAW,IAAKV,EAAIxB,SAAGA,KAG9B,EDhCEqD,QAAO,EACPtC,aACF,E,2qCEEO,SAASuC,EAAiBf,GAC/B,OAAOA,EAAQP,OAASuB,EAAAA,GAAehB,EAAQP,OAASwB,EAAAA,CAC1D,CAEA,MAAMC,EACJlB,IAC2B,IAADmB,EAAAC,EAAAC,EAC1B,GAAKvB,EAAAA,eAAqBE,GAG1B,OACoB,QADpBmB,EACe,QADfC,EACEpB,EAAQvB,aAAK,IAAA2C,OAAA,EAAbA,EAAeE,WAAG,IAAAH,EAAAA,EACe,iBAAZ,QAApBE,EAAOrB,EAAQvB,aAAK,IAAA4C,OAAA,EAAbA,EAAeE,OACnBvB,EAAQvB,MAAM8C,MAAMD,SACpBE,CAAS,EAIXC,EACJzB,IAC2B,IAAD0B,EAAAC,EAAAC,EAC1B,GAAK9B,EAAAA,eAAqBE,GAG1B,OACuB,QADvB0B,EACe,QADfC,EACE3B,EAAQvB,aAAK,IAAAkD,OAAA,EAAbA,EAAeE,cAAM,IAAAH,EAAAA,EACY,iBAAZ,QAApBE,EAAO5B,EAAQvB,aAAK,IAAAmD,OAAA,EAAbA,EAAeL,OACnBvB,EAAQvB,MAAM8C,MAAMM,YACpBL,CAAS,EAaJM,EACX9B,IACa,IAAD+B,EACZ,OACGjC,EAAAA,eAAqBE,KACgC,KAApDA,SAAa,QAAN+B,EAAP/B,EAASP,YAAI,IAAAsC,OAAN,EAAPA,EAA8C,+BAdnB/B,IACxBgC,OAAOC,OAAOC,GAAiBC,MACnCC,IAAmBpC,aAAO,EAAPA,EAASP,QAAS2C,IAatCC,CAAiBrC,EAAQ,EAIvBsC,EAAoBA,CAACtC,EAA0BvB,IAC3BqD,EAAsB9B,GAG5CF,EAAAA,aAAmBE,EAAwCvB,IAE3DzB,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,IAAK9D,EAAKhB,SAAGuC,IA8BrB,SAASwC,EAAc/D,GACrB,MAAM,UACJI,EAAS,SACTpB,EAAQ,UACRgF,EAAY,SAAQ,KACpBC,GAAO,EAAK,QACZC,EAAU,aAAY,MACtBC,EAAQ,aAAY,QACpBC,EAAU,QAAO,QACjBC,EAAU,QAAO,MACjBC,GACEtE,EAEEuE,EAAK3D,IACT,2BACAoD,GAAc,uCAAsCA,IACpDE,GAAY,qCAAoCA,IAChDC,GAAU,mCAAkCA,IAC5CF,GAAS,iCACTG,GAAY,qCAAoCA,IAChDC,GAAY,qCAAoCA,IAChDC,GAAU,mCAAkCA,IAC5ClE,GAEIoE,EAAgBnD,EAAAA,SAAeoD,QAAQzF,GAE7C,OACET,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAAC1D,UAAWmE,MAAQG,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAC9B,WAAdgF,EACGQ,EAAcG,KAAI,CAACC,EAAOC,KAAO,IAAD1D,EAAA2D,EAI9B,MAAMC,EAAgB,IAANF,EACVG,EAAgBR,aAAa,EAAbA,EAAgBK,EAAI,GACpCI,EAAmB3C,EAAiBsC,GACpCM,EACJL,EAAI,GAAKvC,EAAiB0C,GAM5B,GACc,SAAZZ,IAECW,IAEAG,IACAD,EACD,CAAC,IAADE,EAAAC,EACA,MAAMC,EACyB,QADXF,EAClBnC,EAAegC,UAAc,IAAAG,EAAAA,EAAId,EAC7BxB,EAAwB,QAArBuC,EAAG3C,EAAYmC,UAAM,IAAAQ,EAAAA,EAAIf,EAElC,OACEiB,EAAAA,EAAAA,MAACjE,EAAAA,SAAc,CAAArC,SAAA,EACbT,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CAACuB,IAAKwC,KACZ9G,EAAAA,EAAAA,KAAA,MAAI6B,UAAU,iCACbyD,EAAkBe,EAAO,CACxB9B,MAAO,CAAED,MAAKO,OAnBP,GAoBPP,MACAO,OArBO,MAeW,WAAUyB,IAUpC,CAEA,MAAMhC,EAEJkC,EACI,EAG6B,QAF7B5D,EACkB,QADlB2D,EACArC,EAAYmC,UAAM,IAAAE,EAAAA,EAClB9B,EAAegC,UAAc,IAAA7D,EAAAA,EAC7BkD,EAEN,OAAOR,EAAkBe,EAAO,CAC9BW,IAAM,WAAUV,IAChB/B,MAAO,CAAED,MAAKO,OAtCD,GAuCbP,MACAO,OAxCa,GAyCb,IAGJpE,GAGV,CAEA+E,EAAc9C,8BAA+B,EAC7C,O,8ECjLA,SAASsB,EAAWpB,GAA8B,IAA7B,MAAEqE,KAAUxF,GAAcmB,EAC7C,MAAM,UAAEf,EAAS,SAAEpB,GAAagB,EAChC,OACEzB,EAAAA,EAAAA,KAACkH,EAAAA,GAAO,CACNrF,UAAWQ,IAAW,yBAA0BR,GAChDoF,MAAOA,GAAS,EAChBE,KAAK,YACDhB,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,GAGP,CAEAuD,EAAYtB,8BAA+B,EAC3C,K,8ECfA,SAASuB,EAAUrB,GAA8B,IAA7B,MAAEqE,KAAUxF,GAAcmB,EAC5C,MAAM,UAAEf,EAAS,SAAEpB,GAAagB,EAChC,OACEzB,EAAAA,EAAAA,KAACkH,EAAAA,GAAO,CACNrF,UAAWQ,IAAW,wBAAyBR,GAC/CoF,MAAOA,GAAS,EAChBE,KAAK,aACDhB,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,GAGP,CAEAwD,EAAWvB,8BAA+B,EAC1C,K,uICdA,SAAS0E,EAAS3F,GAChB,MAAM,UAAEI,EAAS,KAAEwF,EAAI,OAAEC,EAAM,MAAEvB,EAAK,SAAEtF,GAAagB,EAC/CuE,EAAK3D,IACT,sBACAgF,GAAQ,4BACRC,GAAU,8BACVvB,GAAU,8BAA6BA,IACvClE,GAGF,OACE7B,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAAC1D,UAAWmE,MAAQG,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAC5CA,GAGP,CAEA2G,EAAS1E,8BAA+B,EACxC,QCfA,SAAS6E,EAAK9F,GACZ,MAAM,UAAEI,EAAS,MAAE2F,EAAK,UAAE/B,EAAS,QAAEK,EAAO,SAAErF,GAAagB,EAE3D,OAAI+F,GAEAxH,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CACZ3D,UAAWQ,IAAW,iBAAkBR,GACxC4D,UAAU,SACVI,QAAQ,OACRC,QAASA,QAAAA,EAAW,aAChBK,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,IAKHgF,GAAaK,GAEb9F,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CACZ3D,UAAWQ,IAAW,iBAAkBR,GACxC4D,UAAWA,QAAAA,EAAa,SACxBI,QAAQ,QACRC,QAASA,QAAAA,EAAW,YAChBK,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,KAMLT,EAAAA,EAAAA,KAACoH,EAAQ,CACPvF,UAAWQ,IAAW,iBAAkBR,OACpCsE,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,GAGP,CAEA8G,EAAK7E,8BAA+B,EACpC,QC5CA,SAAS+E,EAAQhG,GACf,MAAM,UAAEI,EAAS,UAAE4D,EAAS,QAAEK,EAAO,SAAErF,GAAagB,EACpD,OACEzB,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CACZ3D,UAAWQ,IAAW,oBAAqBR,GAC3C4D,UAAWA,QAAAA,EAAa,SACxBK,QAASA,QAAAA,EAAW,YAChBK,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,GAGP,CAEAgH,EAAQ/E,8BAA+B,EACvC,Q,sBCrBA,SAASgF,EAAG9E,GAAiC,IAAhC,SAAEnC,KAAagB,GAAcmB,EACxC,OACE5C,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CAACC,UAAU,SAAUhE,EAAKhB,SACrCA,GAGP,CAEAiH,EAAIhF,8BAA+B,EACnC,QCTA,SAASiF,EAAM/E,GAAiC,IAAhC,SAAEnC,KAAagB,GAAcmB,EAC3C,OACE5C,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CAACC,UAAU,YAAahE,EAAKhB,SACxCA,GAGP,CAEAkH,EAAOjF,8BAA+B,EACtC,QCMA,MAZe,CACbkF,UAAS,IACTL,KAAI,EACJ/B,cAAa,KACb4B,SAAQ,EACRK,QAAO,EACPzD,YAAW,IACXC,WAAU,IACVyD,IAAG,EACHC,OACF,E,wBCZA,MAAME,E,QAAe/E,mBACnB0B,GAGF,K,kLCIA,SAASsD,EAAKrG,GACZ,MAAM,UACJI,EAAS,MACTkG,EAAK,UACLtC,EAAY,SAAQ,QACpBK,EAAU,SAAQ,SAClBrF,GACEgB,EACEuG,GAAerG,EAAAA,EAAAA,YAAWkG,EAAAA,GAEhC,OAAIG,aAAY,EAAZA,EAAcC,eAAgBF,EAEzB,MAIP/H,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CACZ3D,UAAWQ,IAAW,iBAAkBR,GACxC4D,UAAWA,EACXK,QAASA,MACLK,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BA,GAGP,CAEAqH,EAAKpF,8BAA+B,EACpC,Q,sBC/BA,SAASwF,EAAWzG,GAClB,MAAMC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3B,UACJC,EAAS,QACTsG,EAAU,UAAS,cACnBC,EAAgB,QAAO,KACvBC,EAAO,gBAAe,SACtB5H,GAAWiB,aAAa,EAAbA,EAAeI,YAAYC,MAAMuG,WAC1C7G,EACEuG,GAAerG,EAAAA,EAAAA,YAAWkG,EAAAA,GAEhC,OACE7H,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,IACDX,EACJI,UAAWQ,IAAW,wBAAyBR,GAC/CS,QAAS0F,aAAY,EAAZA,EAAcO,WACvBJ,QAASA,EACTC,cAAeA,EACfC,KAAMA,EAAK5H,SAEVA,GAGP,CAEAyH,EAAWxF,8BAA+B,EAC1C,QC1BA,SAAS8F,EAAe/G,GACtB,MAAMC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3B,UACJC,EAAS,QACTsG,EAAU,WAAU,cACpBC,EAAgB,OAAM,KACtBC,EAAO,eAAc,SACrB5H,GAAWiB,aAAa,EAAbA,EAAeI,YAAYC,MAAM0G,eAC1ChH,EACEuG,GAAerG,EAAAA,EAAAA,YAAWkG,EAAAA,GAEhC,OACE7H,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,IACDX,EACJI,UAAWQ,IAAW,4BAA6BR,GACnDS,QAAS0F,aAAY,EAAZA,EAAcU,eACvBP,QAASA,EACTC,cAAeA,EACfC,KAAMA,EAAK5H,SAEVA,GAGP,CAEA+H,EAAe9F,8BAA+B,EAC9C,Q,WC5BA,SAASiG,EAAQlH,GACf,MAAM,UAAEI,GAAcJ,EACtB,OACEsF,EAAAA,EAAAA,MAACa,EAAAA,EAAS,CACR/F,UAAWQ,IAAW,oBAAqBR,OACvCsE,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAAA,EAE3BT,EAAAA,EAAAA,KAACwI,EAAc,KACfxI,EAAAA,EAAAA,KAACkI,EAAU,MAGjB,CAEAS,EAAQjG,8BAA+B,EACvC,QCHA,SAAS3B,EAAYU,GACnB,MAAM,UACJI,EAAS,GACT+G,GAAKC,EAAAA,EAAAA,MAAc,KACnBC,EAAO,QAAO,sBACdC,EAAqB,mBACrBC,EAAqB,EAAC,aACtBC,EAAY,SACZxI,GACEgB,EACES,GAAcP,EAAAA,EAAAA,YAAWhB,EAAAA,IACzB,EAACsH,EAAY,EAACiB,IAClBC,EAAAA,EAAAA,UAAiBH,GAEbN,GAAiB7H,EAAAA,EAAAA,cAAY,KAKL,IAADuI,GAJ3BF,GAAgBjB,IACdgB,SAAAA,EAAehB,EAAc,GACtBA,EAAc,KAEnBc,KACI,QAANK,EAAAC,cAAM,IAAAD,GAANA,EAAQE,SAAS,CAAEhF,IAAK,EAAGiF,SAAU,WACvC,GACC,CAACR,EAAuBE,IAErBV,GAAa1H,EAAAA,EAAAA,cAAY,KAMC,IAAD2I,EALxBtH,EAAYuH,YASfvH,EAAYwH,kBAAiB,IAR7BR,GAAgBjB,IACdgB,SAAAA,EAAehB,EAAc,GACtBA,EAAc,KAEnBc,IACI,QAANS,EAAAH,cAAM,IAAAG,GAANA,EAAQF,SAAS,CAAEhF,IAAK,EAAGiF,SAAU,YAIzC,GACC,CAACrH,EAAa6G,EAAuBE,IAElCU,EAAoB7G,EAAAA,SAAesD,IAAI3F,GAAW4F,IAAW,IAADuD,EAChE,IAAK9G,EAAAA,eAAqBuD,IAAUA,EAAM5D,OAASqF,EACjD,MAAM,IAAI+B,MAAM,4CAElB,OAAwB,QAAxBD,EAAOvD,EAAM5E,MAAMqI,aAAK,IAAAF,EAAAA,EAAI,eAAe,IAGvCG,GAAelJ,EAAAA,EAAAA,cAAY+B,IAAuB,IAAtB,aAAEoH,GAAcpH,EAChDsG,EAAec,EAAa,GAC3B,IAEH,OACEhK,EAAAA,EAAAA,KAAC6H,EAAAA,EAAahE,SAAQ,CACpBoG,MAAO,CACLhC,cACAS,iBACAH,cACA9H,UAEFsG,EAAAA,EAAAA,MAACxB,EAAAA,EAAG,CACF1D,UAAWQ,IAAW,yBAA0BR,OAC5CsE,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAAA,EAE3BsG,EAAAA,EAAAA,MAAA,SAAOlF,UAAU,kCAAiCpB,SAAA,EAChDT,EAAAA,EAAAA,KAACkK,EAAAA,EAAcC,QAAO,CAACC,WAAYxB,KACnC5I,EAAAA,EAAAA,KAACkK,EAAAA,EAAa,CACZrF,QAAM,EACNmF,aAAc/B,EACd3E,KAAMqG,EACNb,KAAMA,EACNuB,cAAY,EACZC,UAAWP,EACXK,WAAYxB,EACZkB,MAAM,SAGV9J,EAAAA,EAAAA,KAAA,OAAK6B,UAAU,mCAAkCpB,SAC9CqC,EAAAA,SAAesD,IAAI3F,GAAU,CAAC4F,EAAOC,IAChCxD,EAAAA,eAAqBuD,IAAUA,EAAM5D,OAASqF,EACzChF,EAAAA,aACLuD,EACA,CACE0B,MAAOzB,IAIND,UAMnB,CAEAtF,EAAY2B,8BAA+B,EAE3C3B,EAAY+G,KAAOA,EACnB/G,EAAYmH,WAAaA,EACzBnH,EAAYyH,eAAiBA,EAC7BzH,EAAY4H,QAAUA,EAEtB,ICtHA,EDsHA,C,uGElHA,SAAS4B,EAAgB9I,GACvB,MAAM,UACJI,EAAS,MACT2I,EAAK,YACLC,EAAW,MACXR,EAAK,OACLS,EAAM,UACNC,EAAS,QACTC,EAAWX,IAAUA,KACnB1J,EAAAA,EAAAA,GAAakB,GAEjB,OACEzB,EAAAA,EAAAA,KAAC6K,EAAAA,EAAU,CACThJ,UAAWA,EACX2I,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJvE,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAE1BmK,EAAQX,IAGf,CAEAM,EAAgB7H,8BAA+B,EAC/C,QClBO,SAASoI,EACdb,EACAc,GAEA,MAAM,kBACJC,EAAiB,aACjBC,EAAY,cACZC,EAAa,cACbC,EAAgB,IAAG,UACnBC,EAAS,OACTC,EAAM,OACNC,GACEP,QAAAA,EAAW,CAAC,EAEVQ,OACU/G,IAAd4G,EAA0BnB,EAAQuB,KAAKC,IAAI,GAAIL,GAAanB,EAExDyB,OACclH,IAAlB0G,EACIK,EAAcI,QAAQT,GACtBD,GAEEO,KAAKI,MAAML,EAAgBC,KAAKC,IAAI,GAAIR,IACxCO,KAAKC,IAAI,GAAIR,IACbY,WACFN,EAAcM,WAEdC,OACctH,IAAlB2G,EACIO,EAAaK,QAAQ,IAAKZ,GAC1BO,EAEAM,OACkBxH,IAAtBwG,EACIc,EAAkBC,QAChB,wBACAf,GAEFc,EAEAG,OACOzH,IAAX6G,EACIA,EAASW,EACTA,EAKN,YAFaxH,IAAX8G,EAAuBW,EAAaX,EAASW,CAGjD,CCjDA,SAASC,EAAgBzK,GACvB,MAAM,UACJI,EAAS,MACT2I,EAAK,YACLC,EAAW,MACXR,EAAK,OACLS,EAAM,UACNC,EAAS,kBACTK,EAAiB,cACjBG,EAAa,aACbF,EAAY,OACZI,EAAM,OACNC,IACE/K,EAAAA,EAAAA,GAAakB,GAEjB,OACEzB,EAAAA,EAAAA,KAAC6K,EAAAA,EAAU,CACThJ,UAAWA,EACX2I,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJvE,EAAAA,EAAAA,IAAiB1E,GAAMhB,cAEhB+D,IAAVyF,EACGa,EAAab,EAAO,CAClBe,mBACwB,IAAtBA,EAA6B,IAAMA,EACrCG,gBACAF,eACAI,SACAC,WAEF,MAGV,CAEAY,EAAgBxJ,8BAA+B,EAC/C,Q,qBC9CA,SAASyJ,EAAiB1K,GACxB,MAAMC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3B,UAAEC,EAAS,MAAE2I,EAAK,YAAEC,EAAW,UAAEE,EAAS,MAAEV,EAAK,OAAES,IACvDnK,EAAAA,EAAAA,GAAakB,GAEf,OACEzB,EAAAA,EAAAA,KAAC6K,EAAAA,EAAU,CACThJ,UAAWA,EACX2I,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJvE,EAAAA,EAAAA,IAAiB1E,GAAMhB,UAEhB,IAAVwJ,IAA4B,IAAVA,GACL,IAAVA,EACEvI,aAAa,EAAbA,EAAeI,YAAYC,MAAMqK,WACjC1K,aAAa,EAAbA,EAAeI,YAAYC,MAAMsK,UACnC,MAGV,CAEAF,EAAiBzJ,8BAA+B,EAChD,QC3BA,SAAS4J,EAAS7K,GAAe,IAAD8K,EAAAC,EAC9B,MAAMC,EAAqB,IACtBhL,EACH+I,MAAO/I,EAAM+I,MACbQ,kBAA0C,QAAzBuB,EAAE9K,EAAMuJ,yBAAiB,IAAAuB,EAAAA,EAAI,IAC9CjB,OAAoB,QAAdkB,EAAE/K,EAAM6J,cAAM,IAAAkB,EAAAA,EAAI,OAE1B,OAAOxM,EAAAA,EAAAA,KAACkM,EAAe,IAAKO,GAC9B,CAEAH,EAAS5J,8BAA+B,EACxC,QCVA,SAASgK,EAAcjL,GAAe,IAADkL,EACnC,MAAMjL,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3BgL,EAAqB,IACtBnL,EACH+I,MAAkB,QAAbmC,EAAElL,EAAM+I,aAAK,IAAAmC,EAAAA,EAAIjL,aAAa,EAAbA,EAAeI,YAAYC,MAAM8K,WAEzD,OAAO7M,EAAAA,EAAAA,KAACuK,EAAe,IAAKqC,GAC9B,CAEAF,EAAchK,8BAA+B,EAC7C,QCXA,SAASoK,EAAMrL,GAAe,IAADkL,EAC3B,MAAMjL,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3BgL,EAAqB,IACtBnL,EACH+I,MAAkB,QAAbmC,EAAElL,EAAM+I,aAAK,IAAAmC,EAAAA,EAAIjL,aAAa,EAAbA,EAAeI,YAAYC,MAAMgL,YAEzD,OAAO/M,EAAAA,EAAAA,KAACuK,EAAe,IAAKqC,GAC9B,CAEAE,EAAMpK,8BAA+B,EACrC,Q,WCPA,SAASsK,EAAuBvL,GAAe,IAADkL,EAC5C,MAAMjL,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3BqL,EAA0B,IAC3BxL,EACH+I,MACa,QADRmC,EACHlL,EAAM+I,aAAK,IAAAmC,EAAAA,EACVlL,EAAMiJ,QAEHhJ,aADA8C,EACA9C,EAAeI,YAAYC,MAAMmL,4BACvCtC,QAAUX,IACRkD,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAYnD,GAAQ,CACzBoD,KAAK,IACJxB,YAEP,OAAO7L,EAAAA,EAAAA,KAACuK,EAAe,IAAK0C,GAC9B,CAEAD,EAAuBtK,8BAA+B,EACtD,QCnBA,SAAS4K,EAAY7L,GAAe,IAADkL,EACjC,MAAMjL,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3BqL,EAA0B,IAC3BxL,EACH+I,MACa,QADRmC,EACHlL,EAAM+I,aAAK,IAAAmC,EAAAA,EACVlL,EAAMiJ,QAEHhJ,aADA8C,EACA9C,EAAeI,YAAYC,MAAMwL,iBACvC3C,QAAUX,IACRkD,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAYnD,GAAQ,CACzBuD,OAAO,IACN3B,YAEP,OAAO7L,EAAAA,EAAAA,KAACuK,EAAe,IAAK0C,GAC9B,CAEAK,EAAY5K,8BAA+B,EAC3C,QCnBA,SAAS+K,EAAkBhM,GAAe,IAADkL,EACvC,MAAMjL,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3BqL,EAA0B,IAC3BxL,EACH+I,MACa,QADRmC,EACHlL,EAAM+I,aAAK,IAAAmC,EAAAA,EACVlL,EAAMiJ,QAEHhJ,aADA8C,EACA9C,EAAeI,YAAYC,MAAM2L,uBACvC9C,QAAUX,IACRkD,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAYnD,GAAQ,CACzB0D,KAAK,IACJ9B,YAEP,OAAO7L,EAAAA,EAAAA,KAACuK,EAAe,IAAK0C,GAC9B,CAEAQ,EAAkB/K,8BAA+B,ECNjD,MAZc,CACZkL,OAAQrD,EACRsD,OAAQ3B,EACR4B,QAAS3B,EACTG,SAAQ,EACRyB,KAAMrB,EACNI,MAAK,EACLE,uBAAsB,EACtBM,YAAW,EACXG,kBDUF,E,4FEnBA,SAAS5C,EAAWpJ,GAClB,MAAM,UAAEI,EAAS,MAAE2I,EAAK,OAAEE,EAAM,YAAED,EAAW,UAAEE,EAAS,SAAElK,GACxDgB,EACF,OACGhB,UAA4D,IAAbA,GAC/CkK,GACAF,GAMD1D,EAAAA,EAAAA,MAACiH,EAAAA,EAAI,CACHnM,UAAWQ,IACT,kBACAqI,GAAU,gCACV7I,OAEEsE,EAAAA,EAAAA,IAAiB1E,GAAMhB,SAAA,CAE1B+J,IACCxK,EAAAA,EAAAA,KAACiO,EAAAA,EAAS,CACRpM,UAAU,+BACVqM,gBAAiBxD,EAAS,aAAe,WAAWjK,SAEnD+J,IAGJ/J,QAAAA,GACCT,EAAAA,EAAAA,KAAA,QAAM6B,UAAU,qCAAoCpB,SACjDgK,OAtBA,IA2BX,CAEAI,EAAWnI,8BAA+B,EAC1C,K,gFCzBA,SAASzB,EAAU2B,GAUR,IAVS,QAClBuL,EAAO,YACPC,EAAW,cACXC,EAAa,WACbC,EAAU,UACVC,EAAS,SACTC,EAAQ,UACRC,EAAS,UACTC,EAAS,SACTjO,GACMmC,EACN,MAAMV,GAAcP,EAAAA,EAAAA,YAAWhB,EAAAA,EAAYwB,SAE3C,OAAgB,IAAZgM,GAIAC,IAAgBO,IAAAA,IAAYzM,EAAYoB,KAAM8K,IAG9CC,GAAiBM,IAAAA,IAAYzM,EAAYoB,KAAM+K,GAN1C,MAWPC,GACEK,IAAAA,IAAYzM,EAAYoB,KAAMgL,IAC7BK,IAAAA,IAAYzM,EAAYoB,KAAMgL,GAKjCC,GACAI,IAAAA,IAAYzM,EAAYoB,KAAMiL,IAC9BT,QAAQa,IAAAA,IAAYzM,EAAYoB,KAAMiL,IAE/B,OAIPC,GACEG,IAAAA,IAAYzM,EAAYoB,KAAMkL,KACc,IAA5CG,IAAAA,IAAYzM,EAAYoB,KAAMkL,OAKhCC,GACEE,IAAAA,IAAYzM,EAAYoB,KAAMmL,KACe,IAA7CE,IAAAA,IAAYzM,EAAYoB,KAAMmL,IAK9BC,IAAcA,EAAUxM,EAAYoB,MAC/B,MAGFtD,EAAAA,EAAAA,KAAA4O,EAAAA,SAAA,CAAAnO,SAAGA,IAdD,KAfA,IA8BX,CAEAQ,EAAWyB,8BAA+B,EAC1C,K","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/SubmitButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/FormElement.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/FormHandler.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Visibility/Visibility.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { useCallback } from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Input, Slider } from '@dnb/eufemia/src'\nimport {\n  Form,\n  Layout,\n  StepsLayout,\n  Field,\n  Value,\n  Visibility,\n  FieldBlock,\n  useDataValue,\n  DataContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const CreateBasicFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        Field,\n        FieldBlock,\n        useDataValue,\n      }}\n    >\n      {() => {\n        const MyCustomField = (props) => {\n          const preparedProps = {\n            ...props,\n            validator: (value) => {\n              return value === 'secret'\n                ? new Error('Do not reveal the secret!')\n                : undefined\n            },\n          }\n\n          const {\n            info,\n            warning,\n            error,\n            value,\n            handleChange,\n            handleFocus,\n            handleBlur,\n          } = useDataValue(preparedProps)\n\n          return (\n            <FieldBlock\n              label=\"What is the secret of the custom field?\"\n              info={info}\n              warning={warning}\n              error={error}\n            >\n              <Input\n                value={value}\n                on_change={({ value }) => handleChange(value)}\n                on_focus={handleFocus}\n                on_blur={handleBlur}\n              />\n            </FieldBlock>\n          )\n        }\n\n        return (\n          <MyCustomField\n            value=\"Nothing to see here\"\n            onChange={(value) => console.log('onChange', value)}\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const CreateComposedFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Layout,\n        Field,\n        FieldBlock,\n        Slider,\n        useDataValue,\n        useCallback,\n      }}\n    >\n      {() => {\n        const MyComposedField = (props) => {\n          const birthYear = useDataValue({\n            path: '/birthYear',\n          })\n\n          const handleBirthYearChange = useCallback(\n            (sliderData) => {\n              birthYear.handleChange(sliderData.value)\n            },\n            [birthYear],\n          )\n\n          return (\n            <FieldBlock label={props.label ?? 'Name and age'}>\n              <Layout.Row>\n                <Field.String\n                  path=\"/firstName\"\n                  label=\"First name\"\n                  width=\"medium\"\n                  minLength={2}\n                />\n                <Field.String\n                  path=\"/lastName\"\n                  label=\"Last name\"\n                  width=\"medium\"\n                  required\n                />\n                <Layout.FlexItem width=\"large\">\n                  <Slider\n                    min={1900}\n                    max={new Date().getFullYear()}\n                    step={1}\n                    label=\"Birth year\"\n                    label_direction=\"vertical\"\n                    // @ts-ignore\n                    value={birthYear.value}\n                    on_change={handleBirthYearChange}\n                    on_drag_start={birthYear.handleFocus}\n                    on_drag_end={birthYear.handleBlur}\n                    status={birthYear.error?.message}\n                    tooltip\n                    alwaysShowTooltip\n                  />\n                </Layout.FlexItem>\n              </Layout.Row>\n            </FieldBlock>\n          )\n        }\n\n        const data = {\n          firstName: 'John',\n          birthYear: 2000,\n        }\n\n        return (\n          <DataContext.Provider\n            data={data}\n            onChange={(data) => console.log('onChange', data)}\n          >\n            <MyComposedField label=\"My custom label\" />\n          </DataContext.Provider>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const BaseFieldComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Layout.Card stack>\n        <Field.String\n          label=\"Text field\"\n          value=\"Lorem Ipsum\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          label=\"Number Field\"\n          value={789}\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Boolean\n          label=\"Boolean Field\"\n          value={true}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const FeatureFields = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Layout.Card stack>\n        <Field.String label=\"Fornavn\" value=\"John\" />\n        <Field.String label=\"Etternavn\" value=\"Smith\" />\n        <Field.NationalIdentityNumber value=\"20058512345\" />\n        <Field.Email value=\"john@smith.email\" />\n        <Field.PhoneNumber value=\"+47 98765432\" />\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Layout.Section>\n        <Layout.MainHeading>Profile</Layout.MainHeading>\n\n        <Layout.Card stack>\n          <Layout.SubHeading>Name</Layout.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Layout.Card>\n\n        <Layout.Card stack>\n          <Layout.SubHeading>More information</Layout.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Layout.Card>\n      </Layout.Section>\n    </ComponentBox>\n  )\n}\n\nexport const VisibilityBasedOnData = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Layout.Section>\n          <Layout.MainHeading>Profile</Layout.MainHeading>\n\n          <Layout.Card stack>\n            <Layout.SubHeading>Name</Layout.SubHeading>\n\n            <Field.String path=\"/firstName\" label=\"Fornavn\" />\n            <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          </Layout.Card>\n        </Layout.Section>\n        <Field.Boolean\n          path=\"/advanced\"\n          variant=\"checkbox-button\"\n          label=\"More fields\"\n        />\n        <Visibility pathTrue=\"/advanced\">\n          <Layout.Section>\n            <Layout.Card stack>\n              <Layout.SubHeading>More information</Layout.SubHeading>\n\n              <Field.NationalIdentityNumber value=\"20058512345\" />\n              <Field.Email value=\"john@smith.email\" />\n              <Field.PhoneNumber value=\"+47 98765432\" />\n            </Layout.Card>\n          </Layout.Section>\n        </Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const UsingFormHandler = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Smith',\n          ssn: '20058512345',\n          email: 'john@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Layout.MainHeading>Profile</Layout.MainHeading>\n\n        <Layout.Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          <Field.NationalIdentityNumber path=\"/ssn\" />\n          <Field.Email path=\"/email\" />\n          <Field.PhoneNumber path=\"/phone\" />\n\n          <Layout.ButtonRow>\n            <Form.SubmitButton />\n          </Layout.ButtonRow>\n        </Layout.Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Validation = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Layout.MainHeading>Profile</Layout.MainHeading>\n\n        <Layout.Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n          <Field.NationalIdentityNumber path=\"/ssn\" validateInitially />\n          <Field.Email path=\"/email\" validateInitially />\n          <Field.PhoneNumber path=\"/phone\" validateInitially />\n        </Layout.Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithSteps = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Layout,\n        StepsLayout,\n        Field,\n        Value,\n        Visibility,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <StepsLayout>\n          <StepsLayout.Step title=\"Name\">\n            <Layout.MainHeading>Profile</Layout.MainHeading>\n\n            <Layout.Card stack>\n              <Layout.SubHeading>Name</Layout.SubHeading>\n\n              <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n              <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n            </Layout.Card>\n\n            <Layout.ButtonRow>\n              <StepsLayout.NextButton />\n            </Layout.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"More information\">\n            <Layout.MainHeading>Profile</Layout.MainHeading>\n\n            <Layout.Card stack>\n              <Layout.SubHeading>More information</Layout.SubHeading>\n\n              <Field.NationalIdentityNumber path=\"/ssn\" />\n              <Field.Email path=\"/email\" />\n              <Field.PhoneNumber path=\"/phone\" />\n            </Layout.Card>\n\n            <Layout.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Layout.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"Summary\">\n            <Layout.MainHeading>Profile</Layout.MainHeading>\n\n            <Layout.Card stack>\n              <Layout.FlexContainer direction=\"row\">\n                <Value.String path=\"/firstName\" label=\"Fornavn\" />\n                <Value.String path=\"/lastName\" label=\"Etternavn\" />\n              </Layout.FlexContainer>\n\n              <Value.NationalIdentityNumber path=\"/ssn\" />\n              <Value.Email path=\"/email\" />\n              <Value.PhoneNumber path=\"/phone\" />\n            </Layout.Card>\n\n            <Layout.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <Form.SubmitButton />\n            </Layout.ButtonRow>\n          </StepsLayout.Step>\n        </StepsLayout>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport SharedContext from '../../../shared/Context'\nimport Context from '../DataContext/Context'\n\nexport type Props = ComponentProps &\n  Partial<React.HTMLAttributes<HTMLButtonElement | HTMLAnchorElement>>\n\nfunction SubmitButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    children = sharedContext?.translation.Forms.contextSubmit,\n    ...rest\n  } = props\n  const dataContext = useContext(Context)\n\n  return (\n    <Button\n      className={classnames('dnb-forms__submit-button', className)}\n      onClick={\n        dataContext._isInsideFormElement ? null : dataContext.handleSubmit\n      }\n      type=\"submit\"\n      {...rest}\n    >\n      {children}\n    </Button>\n  )\n}\n\nSubmitButton._supportsEufemiaSpacingProps = true\nexport default SubmitButton\n","import React from 'react'\nimport Context from '../DataContext/Context'\nimport Space from '../../../components/space/Space'\nimport classnames from 'classnames'\nimport type { SpacingProps } from '../../../shared/types'\n\nexport type Props = React.HTMLAttributes<HTMLFormElement> & SpacingProps\n\nexport default function FormElement({\n  children,\n  className = null,\n  onSubmit = null,\n  ...rest\n}: Props) {\n  const dataContext = React.useContext(Context)\n\n  /**\n   * Set to true,\n   * this way we prevent \"handleSubmit\" to be called twice when the SubmitButton is pressed.\n   */\n  dataContext._isInsideFormElement = true\n\n  return (\n    <Space\n      element=\"form\"\n      className={classnames('dnb-forms__form', className)}\n      onSubmit={onSubmitHandler}\n      {...rest}\n    >\n      {children}\n    </Space>\n  )\n\n  function onSubmitHandler(event: React.SyntheticEvent<HTMLFormElement>) {\n    event?.preventDefault()\n\n    dataContext?.handleSubmit?.()\n\n    if (typeof onSubmit === 'function') {\n      onSubmit(event)\n    }\n  }\n}\n","import SubmitButton from './SubmitButton'\nimport Element from './FormElement'\nimport Handler from './FormHandler'\n\nconst FormExport = {\n  Handler,\n  Element,\n  SubmitButton,\n}\n\nexport default FormExport\n","import React from 'react'\nimport { JsonObject } from 'json-pointer'\nimport Provider, { Props as ProviderProps } from '../DataContext/Provider'\nimport FormElement from './FormElement'\nimport type { SpacingProps } from '../../../shared/types'\n\nexport type Props = React.HTMLAttributes<HTMLFormElement> & SpacingProps\n\nexport default function FormHandler<Data extends JsonObject>({\n  children,\n  data,\n  schema,\n  onChange,\n  onPathChange,\n  onSubmit,\n  onSubmitRequest,\n  scrollTopOnSubmit,\n  ...rest\n}: ProviderProps<Data> & Props) {\n  const ProviderProps = {\n    data,\n    schema,\n    onChange,\n    onPathChange,\n    onSubmit: (data: Data) => {\n      if (typeof onSubmit === 'function') {\n        onSubmit(data)\n      }\n    },\n    onSubmitRequest,\n    scrollTopOnSubmit,\n  }\n\n  return (\n    <Provider {...ProviderProps}>\n      <FormElement {...rest}>{children}</FormElement>\n    </Provider>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'flex-start',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction MainHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level={level || 2}\n      size=\"large\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction SubHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level={level || 3}\n      size=\"medium\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexItem(props: Props) {\n  const { className, grow, shrink, width, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    width && `dnb-forms-flex-item--width-${width}`,\n    className\n  )\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {children}\n    </Div>\n  )\n}\n\nFlexItem._supportsEufemiaSpacingProps = true\nexport default FlexItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem\n      className={classnames('dnb-forms-card', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexItem>\n  )\n}\n\nCard._supportsEufemiaSpacingProps = true\nexport default Card\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nSection._supportsEufemiaSpacingProps = true\nexport default Section\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nRow._supportsEufemiaSpacingProps = true\nexport default Row\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nColumn._supportsEufemiaSpacingProps = true\nexport default Column\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n}\n\nexport default Layout\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from '../Layout/FlexContainer'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps & {\n  index?: number\n  title?: string\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Step(props: Props) {\n  const {\n    className,\n    index,\n    direction = 'column',\n    spacing = 'medium',\n    children,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-step', className)}\n      direction={direction}\n      spacing={spacing}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nStep._supportsEufemiaSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nNextButton._supportsEufemiaSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPreviousButton._supportsEufemiaSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport ButtonRow from '../Layout/ButtonRow'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...pickSpacingProps(props)}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsEufemiaSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Div\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...pickSpacingProps(props)}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Div>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsEufemiaSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n","import React from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsEufemiaSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../utils'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsEufemiaSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsEufemiaSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from './Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsEufemiaSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsEufemiaSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsEufemiaSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsEufemiaSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsEufemiaSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsEufemiaSpacingProps = true\nexport default BankAccountNumber\n","import StringComponent from './String'\nimport NumberComponent from './Number'\nimport BooleanComponent from './Boolean'\nimport Currency from './Currency'\nimport DateComponent from './Date'\nimport Email from './Email'\nimport NationalIdentityNumber from './NationalIdentityNumber'\nimport PhoneNumber from './PhoneNumber'\nimport BankAccountNumber from './BankAccountNumber'\n\nconst Value = {\n  String: StringComponent,\n  Number: NumberComponent,\n  Boolean: BooleanComponent,\n  Currency,\n  Date: DateComponent,\n  Email,\n  NationalIdentityNumber,\n  PhoneNumber,\n  BankAccountNumber,\n}\n\nexport default Value\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsEufemiaSpacingProps = true\nexport default ValueBlock\n","import React, { useContext } from 'react'\nimport pointer from 'json-pointer'\nimport DataContext from '../DataContext'\n\nexport type Props = {\n  visible?: boolean\n  /** Given data context path must be defined to show children */\n  pathDefined?: string\n  /** Given data context path must be undefined to show children */\n  pathUndefined?: string\n  /** Given data context path must be truthy to show children */\n  pathTruthy?: string\n  /** Given data context path must be falsy to show children */\n  pathFalsy?: string\n  /** Given data context path must be true to show children */\n  pathTrue?: string\n  /** Given data context path must be false to show children */\n  pathFalse?: string\n  /** Infer visibility calling given derivative function with the whole data set. Should return true/false for visibility.   */\n  inferData?: (data: unknown) => boolean\n  children: React.ReactNode\n}\n\nfunction Visibility({\n  visible,\n  pathDefined,\n  pathUndefined,\n  pathTruthy,\n  pathFalsy,\n  pathTrue,\n  pathFalse,\n  inferData,\n  children,\n}: Props) {\n  const dataContext = useContext(DataContext.Context)\n\n  if (visible === false) {\n    return null\n  }\n\n  if (pathDefined && !pointer.has(dataContext.data, pathDefined)) {\n    return null\n  }\n  if (pathUndefined && pointer.has(dataContext.data, pathUndefined)) {\n    return null\n  }\n\n  if (\n    pathTruthy &&\n    (!pointer.has(dataContext.data, pathTruthy) ||\n      !pointer.get(dataContext.data, pathTruthy))\n  ) {\n    return null\n  }\n  if (\n    pathFalsy &&\n    pointer.has(dataContext.data, pathFalsy) &&\n    Boolean(pointer.get(dataContext.data, pathFalsy))\n  ) {\n    return null\n  }\n\n  if (\n    pathTrue &&\n    (!pointer.has(dataContext.data, pathTrue) ||\n      pointer.get(dataContext.data, pathTrue) !== true)\n  ) {\n    return null\n  }\n  if (\n    pathFalse &&\n    (!pointer.has(dataContext.data, pathFalse) ||\n      pointer.get(dataContext.data, pathFalse) !== false)\n  ) {\n    return null\n  }\n\n  if (inferData && !inferData(dataContext.data)) {\n    return null\n  }\n\n  return <>{children}</>\n}\n\nVisibility._supportsEufemiaSpacingProps = true\nexport default Visibility\n"],"names":["CreateBasicFieldComponent","_jsx","ComponentBox","scope","Form","Layout","Field","FieldBlock","useDataValue","noInline","children","CreateComposedFieldComponent","DataContext","Slider","useCallback","BaseFieldComponents","StepsLayout","Value","Visibility","FeatureFields","LayoutComponents","VisibilityBasedOnData","UsingFormHandler","Validation","WithSteps","SubmitButton","props","sharedContext","useContext","SharedContext","className","translation","Forms","contextSubmit","rest","dataContext","Context","Button","classnames","onClick","_isInsideFormElement","handleSubmit","type","_supportsEufemiaSpacingProps","FormElement","_ref","onSubmit","React","Space","element","event","_dataContext$handleSu","preventDefault","call","Handler","data","schema","onChange","onPathChange","onSubmitRequest","scrollTopOnSubmit","ProviderProps","Provider","Element","isHeadingElement","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","top","space","undefined","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","Object","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","Div","FlexContainer","direction","wrap","justify","align","divider","spacing","width","cn","childrenArray","toArray","pickSpacingProps","map","child","i","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","_jsxs","key","level","Heading","size","FlexItem","grow","shrink","Card","stack","Section","Row","Column","ButtonRow","StepsContext","Step","index","stepsContext","activeIndex","NextButton","variant","icon_position","icon","stepNext","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","id","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","setActiveIndex","useState","_window","window","scrollTo","behavior","_window2","hasErrors","setShowAllErrors","stepIndicatorData","_child$props$title","Error","title","handleChange","current_step","value","StepIndicator","Sidebar","sidebar_id","no_animation","on_change","StringComponent","label","placeholder","inline","showEmpty","prepare","ValueBlock","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","NationalIdentityNumber","stringValueProps","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","String","Number","Boolean","Date","Span","FormLabel","label_direction","visible","pathDefined","pathUndefined","pathTruthy","pathFalsy","pathTrue","pathFalse","inferData","pointer","_Fragment"],"sourceRoot":""}