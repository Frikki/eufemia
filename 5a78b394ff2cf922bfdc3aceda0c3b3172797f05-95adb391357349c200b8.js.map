{"version":3,"file":"5a78b394ff2cf922bfdc3aceda0c3b3172797f05-95adb391357349c200b8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","webpack://dnb-design-system-portal/../../node_modules/@emotion/styled/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://dnb-design-system-portal/../../node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/trash.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/form-row/FormRow.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/form-set/FormSet.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/radio/RadioGroupContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/radio/RadioGroup.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/radio/Radio.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/textarea/Textarea.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/toggle-button/ToggleButtonGroupContext.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/toggle-button/ToggleButtonGroup.js","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/toggle-button/ToggleButton.js","webpack://dnb-design-system-portal/../../node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/extends.js"],"sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : function useInsertionEffect(create) {\n  create();\n};\nfunction useInsertionEffectMaybe(create) {\n\n  useInsertionEffect(create);\n}\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectMaybe(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst trash = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M9.5 11.5v-5m-3 5v-5M1 3h14m-2.423 11.083a1 1 0 0 1-.997.917H4.42a1 1 0 0 1-.996-.917L2.5 3h11l-.923 11.083ZM9.5 1h-3a1 1 0 0 0-1 1v1h5V2a1 1 0 0 0-1-1Z\"\n    />\n  </svg>\n)\nexport default trash\n","/**\n * Web FormRow Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  extend,\n  extendPropsWithContextInClassComponent,\n  isTrue,\n  makeUniqueId,\n  validateDOMAttributes,\n} from '../../shared/component-helper'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\n\nimport Context from '../../shared/Context'\nimport FormLabel from '../form-label/FormLabel'\nimport Section from '../section/Section'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\n\nexport const formRowPropTypes = {\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  label_direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  label_id: PropTypes.string,\n  label_class: PropTypes.string,\n  no_label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  no_fieldset: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  locale: PropTypes.string,\n  wrap: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  vertical: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  centered: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  section_style: PropTypes.string,\n  section_spacing: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  globalStatus: PropTypes.shape({\n    id: PropTypes.string,\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  }),\n  responsive: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  class: PropTypes.string,\n\n  skipContentWrapperIfNested: PropTypes.bool,\n\n  ...spacingPropTypes,\n\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n}\n\nexport const formRowDefaultProps = {\n  id: null,\n  label: null,\n  label_direction: null,\n  label_sr_only: null,\n  label_id: null,\n  label_class: null,\n  no_label: false,\n  no_fieldset: null,\n  locale: null,\n  wrap: null,\n  direction: null,\n  vertical: null,\n  centered: null,\n  section_style: null,\n  section_spacing: null,\n  globalStatus: null,\n  responsive: null,\n  disabled: null,\n  skeleton: null,\n  class: null,\n\n  skipContentWrapperIfNested: false,\n  className: null,\n  children: null,\n}\n\nexport default class FormRow extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    ...formRowPropTypes,\n  }\n\n  static defaultProps = {\n    ...formRowDefaultProps,\n  }\n\n  static getContent(props) {\n    let label = null\n    let children =\n      typeof props.children === 'function'\n        ? props.children(props)\n        : props.children\n\n    if (Array.isArray(props.children)) {\n      children = children.reduce((pV, cV) => {\n        if (cV && cV.type && cV.type.name === 'FormLabel') {\n          label = cV.props.children\n        } else {\n          pV.push(cV)\n        }\n        return pV\n      }, [])\n    }\n\n    return { label, children }\n  }\n\n  constructor(props) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n\n    // We may considder to use this later to check if we are inside FormSet\n    // this.isInsideFormSet =\n    //   context.FormRow && context.FormRow.isInsideFormSet\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      FormRow.defaultProps,\n      this.context.FormRow // nested FormRow\n    )\n\n    const {\n      label_direction,\n      label_sr_only,\n      label_id,\n      label_class,\n      no_fieldset,\n      no_label,\n      locale,\n      direction,\n      vertical,\n      centered,\n      section_style,\n      section_spacing,\n      globalStatus,\n      responsive,\n      disabled,\n      skeleton,\n      wrap,\n      className,\n      class: _className,\n      skipContentWrapperIfNested,\n\n      id: _id, // eslint-disable-line\n      label: _label, // eslint-disable-line\n\n      ...attributes\n    } = props\n\n    let { label } = props\n\n    const isNested =\n      this.context.FormRow && this.context.FormRow.itsMeAgain\n\n    // in case we have a label already, we split this out and use this one instead\n    const { label: nestedLabel, children } = FormRow.getContent(this.props)\n    if (!label && nestedLabel) {\n      label = nestedLabel\n    }\n    const hasLabel =\n      (typeof label === 'string' && label.length > 0) || label\n        ? true\n        : false\n\n    const id = this._id\n    const params = {\n      className: classnames(\n        'dnb-form-row',\n        (isTrue(vertical) || direction) &&\n          `dnb-form-row--${isTrue(vertical) ? 'vertical' : direction}`,\n        (isTrue(vertical) || label_direction) &&\n          `dnb-form-row--${\n            isTrue(vertical) ? 'vertical' : label_direction\n          }-label`, // <-- has label\n        centered && 'dnb-form-row--centered',\n        isNested && 'dnb-form-row--nested',\n        createSpacingClasses(props),\n        className,\n        _className\n      ),\n      ...attributes,\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    const providerContext = extend(this.context, {\n      locale: locale ? locale : this.context.locale,\n      FormRow: {\n        useId: () => {\n          if (this.isIsUsed) {\n            // make a new ID, as we used one\n            return makeUniqueId() // cause we need an id anyway\n          }\n          this.isIsUsed = true\n          return id\n        },\n        itsMeAgain: true,\n        hasLabel,\n        globalStatus,\n        direction,\n        vertical,\n        label_direction: isTrue(vertical) ? 'vertical' : label_direction,\n        responsive,\n        disabled,\n        skeleton,\n      },\n    })\n\n    const useFieldset = !isTrue(no_fieldset) && hasLabel\n\n    return (\n      <Context.Provider value={providerContext}>\n        <Fieldset useFieldset={useFieldset}>\n          <Section\n            style_type={section_style || 'transparent'}\n            spacing={section_spacing}\n            element=\"div\"\n            {...params}\n          >\n            <AlignmentHelper />\n\n            {label && (\n              <FormLabel\n                className={classnames('dnb-form-row__label', label_class)}\n                id={label_id ? label_id : id + '-label'}\n                for_id={useFieldset ? null : id} // we don't use for_id, because we don't have a single element to target to\n                text={label}\n                element={useFieldset ? 'legend' : 'label'}\n                label_direction={label_direction}\n                sr_only={label_sr_only}\n                disabled={disabled}\n                skeleton={skeleton}\n              />\n            )}\n\n            {isTrue(no_label) && (\n              <span\n                className=\"dnb-form-label dnb-form-row__label-dummy\"\n                aria-hidden\n              />\n            )}\n\n            {isNested && skipContentWrapperIfNested ? (\n              children\n            ) : (\n              <div\n                className={classnames(\n                  'dnb-form-row__content',\n                  isTrue(wrap) && 'dnb-form-row__content--wrap',\n                  label && !isTrue(vertical) && direction !== 'vertical',\n                  responsive && 'dnb-responsive-component'\n                )}\n              >\n                {children}\n              </div>\n            )}\n          </Section>\n        </Fieldset>\n      </Context.Provider>\n    )\n  }\n}\n\nconst Fieldset = ({\n  useFieldset,\n  children,\n  className = null,\n  ...props\n}) => {\n  if (useFieldset) {\n    return (\n      <fieldset\n        className={classnames('dnb-form-row__fieldset', className)}\n        {...props}\n      >\n        {children}\n      </fieldset>\n    )\n  }\n  return (\n    <div\n      className={classnames('dnb-form-row__fieldset', className)}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\n// docs (or use ptd): https://github.com/facebook/prop-types#usage\nFieldset.propTypes = {\n  children: PropTypes.node,\n  useFieldset: PropTypes.bool,\n  className: PropTypes.string,\n}\nFieldset.defaultProps = {\n  children: null,\n  useFieldset: false,\n  className: null,\n}\n","/**\n * Web FormSet Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  extend,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  processChildren,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\nimport Context from '../../shared/Context'\nimport { formRowDefaultProps, formRowPropTypes } from '../form-row/FormRow'\n\nexport default class FormSet extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    element: PropTypes.string,\n    no_form: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    prevent_submit: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n\n    ...formRowPropTypes,\n\n    on_submit: PropTypes.func,\n  }\n\n  static defaultProps = {\n    element: 'form',\n    no_form: false,\n    disabled: null,\n    skeleton: null,\n    prevent_submit: false,\n\n    on_submit: null,\n  }\n\n  static getContent(props) {\n    return processChildren(props)\n  }\n\n  constructor(props) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n  }\n\n  onSubmitHandler = (event) => {\n    const { prevent_submit } = this.props\n    if (isTrue(prevent_submit)) {\n      event.preventDefault()\n    }\n    dispatchCustomElementEvent(this, 'on_submit', { event })\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      FormSet.defaultProps,\n      this.context.FormSet\n    )\n\n    const {\n      element,\n      locale,\n      no_form,\n      prevent_submit, // eslint-disable-line\n      id, // eslint-disable-line\n      className,\n      class: _className,\n\n      ...rest\n    } = props\n\n    const allowedProps = Object.entries(rest).reduce((acc, [k, v]) => {\n      if (\n        typeof formRowDefaultProps[k] !== 'undefined' &&\n        k !== 'id' &&\n        k !== 'children' &&\n        k !== 'label'\n      ) {\n        acc[k] = v\n      }\n      return acc\n    }, {})\n    const attributes = Object.entries(rest).reduce((acc, [k, v]) => {\n      if (typeof allowedProps[k] === 'undefined' && k !== 'children') {\n        acc[k] = v\n      }\n      return acc\n    }, {})\n\n    const params = {\n      className: classnames(\n        'dnb-form-set',\n        createSpacingClasses(this.props),\n        className,\n        _className\n      ),\n      ...attributes,\n    }\n\n    if (!isTrue(no_form)) {\n      params.onSubmit = this.onSubmitHandler\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    const content = FormSet.getContent(this.props)\n\n    const providerContext = extend(this.context, {\n      locale: locale ? locale : this.context.locale,\n      FormRow: allowedProps,\n      // isInsideFormSet: true // We may considder to use this later to check if we are inside FormSet\n    })\n\n    const Element = isTrue(no_form) ? 'div' : element\n\n    return (\n      <Context.Provider value={providerContext}>\n        <Element {...params}>{content}</Element>\n      </Context.Provider>\n    )\n  }\n}\n","/**\n * Web RadioGroup Context\n *\n */\n\nimport React from 'react'\n\nconst RadioGroupContext = React.createContext({})\n\nexport default RadioGroupContext\n","/**\n * Web RadioGroup Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  extendPropsWithContextInClassComponent,\n  makeUniqueId,\n  validateDOMAttributes,\n  getStatusState,\n  combineDescribedBy,\n  combineLabelledBy,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { includeValidProps } from '../form-row/FormRowHelpers'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport FormRow from '../form-row/FormRow'\nimport FormStatus from '../form-status/FormStatus'\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\nimport RadioGroupContext from './RadioGroupContext'\n\n/**\n * The radio component is our enhancement of the classic radio button. It acts like a radio. Example: On/off, yes/no.\n */\nexport default class RadioGroup extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    label_position: PropTypes.oneOf(['left', 'right']),\n    title: PropTypes.string,\n    no_fieldset: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    id: PropTypes.string,\n    name: PropTypes.string,\n    size: PropTypes.oneOf(['default', 'medium', 'large']),\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    layout_direction: PropTypes.oneOf(['column', 'row']),\n    vertical: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    value: PropTypes.string,\n    attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    ...spacingPropTypes,\n\n    class: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    on_change: PropTypes.func,\n  }\n\n  static defaultProps = {\n    label: null,\n    label_direction: null,\n    label_sr_only: null,\n    label_position: null,\n    title: null,\n    no_fieldset: null,\n    disabled: null,\n    skeleton: null,\n    id: null,\n    name: null,\n    size: null,\n    status: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    vertical: null,\n    layout_direction: 'row',\n    value: undefined,\n    attributes: null,\n    class: null,\n\n    className: null,\n    children: null,\n\n    on_change: null,\n  }\n\n  static parseChecked = (state) => /true|on/.test(String(state))\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (props.value !== state._value) {\n        state.value = props.value\n      }\n      if (typeof props.value !== 'undefined') {\n        state._value = props.value\n      }\n    }\n    state._listenForPropChanges = true\n\n    return state\n  }\n\n  constructor(props) {\n    super(props)\n    this._refInput = React.createRef()\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this._name = props.name || this._id\n    this.state = {\n      _listenForPropChanges: true,\n    }\n  }\n\n  onChangeHandler = ({ value, event }) => {\n    this.setState({ value, _listenForPropChanges: false })\n    dispatchCustomElementEvent(this, 'on_change', {\n      value,\n      event,\n    })\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      RadioGroup.defaultProps,\n      includeValidProps(this.context.FormRow),\n      this.context.RadioGroup\n    )\n\n    const {\n      status,\n      status_state,\n      status_props,\n      status_no_animation,\n      globalStatus,\n      suffix,\n      label,\n      label_direction,\n      label_sr_only,\n      label_position,\n      vertical,\n      layout_direction,\n      no_fieldset,\n      size,\n      disabled,\n      skeleton,\n      className,\n      class: _className,\n\n      id: _id, // eslint-disable-line\n      name: _name, // eslint-disable-line\n      value: _value, // eslint-disable-line\n      children, // eslint-disable-line\n      on_change, // eslint-disable-line\n\n      ...rest\n    } = props\n\n    const { value } = this.state\n\n    const id = this._id\n    const showStatus = getStatusState(status)\n\n    const classes = classnames(\n      'dnb-radio-group',\n      status && `dnb-radio-group__status--${status_state}`,\n      `dnb-radio-group--${layout_direction}`,\n      'dnb-form-component',\n      createSpacingClasses(props),\n      className,\n      _className\n    )\n\n    const params = {\n      ...rest,\n    }\n\n    if (showStatus || suffix) {\n      params['aria-describedby'] = combineDescribedBy(\n        params,\n        showStatus ? id + '-status' : null,\n        suffix ? id + '-suffix' : null\n      )\n    }\n    if (label) {\n      params['aria-labelledby'] = combineLabelledBy(params, id + '-label')\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    const context = {\n      name: this._name,\n      value,\n      size,\n      disabled,\n      label_position,\n      onChange: this.onChangeHandler,\n    }\n\n    const formRowParams = {\n      id,\n      label,\n      label_id: id + '-label', // send the id along, so the FormRow component can use it\n      label_direction,\n      label_sr_only,\n      direction: label_direction,\n      vertical,\n      disabled,\n      skeleton,\n      no_fieldset,\n      skipContentWrapperIfNested: true,\n    }\n\n    return (\n      <RadioGroupContext.Provider value={context}>\n        <div className={classes}>\n          <AlignmentHelper />\n          <FormRow {...formRowParams}>\n            <span\n              id={id}\n              className=\"dnb-radio-group__shell\"\n              role=\"radiogroup\"\n              {...params}\n            >\n              {children}\n\n              {suffix && (\n                <Suffix\n                  className=\"dnb-radio-group__suffix\"\n                  id={id + '-suffix'} // used for \"aria-describedby\"\n                  context={props}\n                >\n                  {suffix}\n                </Suffix>\n              )}\n\n              <FormStatus\n                show={showStatus}\n                id={id + '-form-status'}\n                globalStatus={globalStatus}\n                label={label}\n                text={status}\n                state={status_state}\n                text_id={id + '-status'} // used for \"aria-describedby\"\n                width_selector={id + ', ' + id + '-label'}\n                no_animation={status_no_animation}\n                skeleton={skeleton}\n                {...status_props}\n              />\n            </span>\n          </FormRow>\n        </div>\n      </RadioGroupContext.Provider>\n    )\n  }\n}\n","/**\n * Web Radio Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport keycode from 'keycode'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  getStatusState,\n  combineDescribedBy,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nimport FormLabel from '../form-label/FormLabel'\nimport FormStatus from '../form-status/FormStatus'\nimport RadioGroup from './RadioGroup'\nimport RadioGroupContext from './RadioGroupContext'\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\nimport { includeValidProps } from '../form-row/FormRowHelpers'\n\n/**\n * The radio component is our enhancement of the classic radio button.\n */\nexport default class Radio extends React.PureComponent {\n  static contextType = RadioGroupContext\n\n  static propTypes = {\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    label_position: PropTypes.oneOf(['left', 'right']),\n    checked: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    id: PropTypes.string,\n    element: PropTypes.node,\n    group: PropTypes.string,\n    size: PropTypes.oneOf(['default', 'medium', 'large']),\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    value: PropTypes.string,\n    attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    readOnly: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    ...spacingPropTypes,\n\n    class: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    on_change: PropTypes.func,\n    on_state_update: PropTypes.func,\n  }\n\n  static defaultProps = {\n    label: null,\n    label_sr_only: null,\n    label_position: null,\n    checked: null,\n    disabled: null,\n    id: null,\n    size: null,\n    element: 'input',\n    group: null,\n    status: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    value: '',\n    attributes: null,\n    readOnly: false,\n    skeleton: null,\n    class: null,\n\n    className: null,\n    children: null,\n\n    on_change: null,\n    on_state_update: null,\n  }\n\n  static Group = RadioGroup\n\n  static parseChecked = (state) => /true|on/.test(String(state))\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (props.checked !== state._checked) {\n        state.checked = Radio.parseChecked(props.checked)\n      }\n    }\n    state._listenForPropChanges = true\n\n    if (state.checked !== state.__checked) {\n      dispatchCustomElementEvent({ props }, 'on_state_update', {\n        checked: state.checked,\n      })\n    }\n\n    state._checked = props.checked\n    state.__checked = state.checked\n\n    return state\n  }\n\n  constructor(props) {\n    super(props)\n    this._refInput = React.createRef()\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this.state = {\n      _listenForPropChanges: true,\n    }\n  }\n\n  onKeyDownHandler = (event) => {\n    const key = keycode(event)\n    // only have key support if there is only a single radio\n    if (this.isInNoGroup()) {\n      switch (key) {\n        case 'enter':\n          this.onChangeHandler(event)\n          break\n      }\n    } else if (this.isContextGroupOrSingle()) {\n      switch (key) {\n        case 'space':\n        case 'enter': {\n          const { value } = this.context\n          if (value !== null && typeof value !== 'undefined') {\n            event.preventDefault()\n          }\n          if (key === 'enter') {\n            const checked = !this.state.checked\n            this.setState({ checked, _listenForPropChanges: false })\n          }\n          break\n        }\n      }\n    } else {\n      // else we only use the native support, and don't want space support\n      // because only arrow keys has to be used\n      switch (key) {\n        case 'space': {\n          event.preventDefault()\n          break\n        }\n      }\n    }\n    dispatchCustomElementEvent(this, 'on_key_down', { event })\n  }\n\n  onChangeHandler = (_event) => {\n    const event = _event\n    if (isTrue(this.props.readOnly)) {\n      return event.preventDefault()\n    }\n    const value = event.target.value\n    const checked = !this.state.checked\n\n    // delay in case we have a props group only\n    if (this.isPlainGroup()) {\n      // in case we have a false \"hasContext\" but a \"group\"\n      // then we have to use a delay, to overwrite the uncrontrolled state\n      setTimeout(() => {\n        this.setState({ checked, _listenForPropChanges: false }, () =>\n          this.callOnChange({ value, checked, event })\n        )\n      }, 1)\n    } else {\n      this.setState({ checked, _listenForPropChanges: false })\n      this.callOnChange({ value, checked, event })\n    }\n  }\n\n  // only support on change if there is either:\n  // 1. context group usage\n  // 2. or a single, no group usage\n  isContextGroupOrSingle = () =>\n    typeof this.context.value !== 'undefined' && !this.props.group\n  isPlainGroup = () =>\n    typeof this.context.value === 'undefined' && this.props.group\n  isInNoGroup = () =>\n    typeof this.context.value === 'undefined' && !this.props.group\n\n  onClickHandler = (event) => {\n    if (isTrue(this.props.readOnly)) {\n      return event.preventDefault()\n    }\n    // only have click support if there are more plain radio\n    if (!this.isPlainGroup()) {\n      return\n    }\n    const value = event.target.value\n    const checked = event.target.checked\n    this.callOnChange({ value, checked, event })\n  }\n\n  callOnChange = ({ value, checked, event }) => {\n    const { group } = this.props\n    if (this.context.onChange) {\n      this.context.onChange({\n        value,\n      })\n    }\n    dispatchCustomElementEvent(this, 'on_change', {\n      group,\n      checked,\n      value,\n      event,\n    })\n\n    // help firefox and safari to have an correct state after a click\n    if (this._refInput.current) {\n      this._refInput.current.focus()\n    }\n  }\n\n  render() {\n    return (\n      <Context.Consumer>\n        {(context) => {\n          // from internal context\n          const contextProps = extendPropsWithContextInClassComponent(\n            this.props,\n            Radio.defaultProps,\n            this.context\n          )\n\n          // use only the props from context, who are available here anyway\n          const props = extendPropsWithContextInClassComponent(\n            this.props,\n            Radio.defaultProps,\n            contextProps,\n            { skeleton: context?.skeleton },\n            includeValidProps(context.FormRow),\n            context.Radio\n          )\n\n          const {\n            status,\n            status_state,\n            status_props,\n            status_no_animation,\n            globalStatus,\n            suffix,\n            element,\n            label,\n            label_sr_only,\n            label_position,\n            size,\n            readOnly,\n            skeleton,\n            className,\n            class: _className,\n            id: _id, // eslint-disable-line\n            group: _group, // eslint-disable-line\n            value: _value, // eslint-disable-line\n            checked: _checked, // eslint-disable-line\n            disabled: _disabled, // eslint-disable-line\n            children, // eslint-disable-line\n            on_change, // eslint-disable-line\n            on_state_update, // eslint-disable-line\n\n            ...rest\n          } = props\n\n          let { checked } = this.state\n          let { value, group, disabled } = props // get it from context also\n\n          const hasContext = typeof this.context.name !== 'undefined'\n\n          if (hasContext) {\n            if (typeof this.context.value !== 'undefined') {\n              checked = this.context.value === value\n            }\n            group = this.context.name\n            if (isTrue(this.context.disabled) && disabled !== false) {\n              disabled = true\n            }\n          } else if (typeof rest.name !== 'undefined') {\n            group = rest.name\n          }\n\n          const id = this._id\n          const showStatus = getStatusState(status)\n\n          const mainParams = {\n            className: classnames(\n              'dnb-radio',\n              status && `dnb-radio__status--${status_state}`,\n              size && `dnb-radio--${size}`,\n              label &&\n                `dnb-radio--label-position-${label_position || 'right'}`,\n              createSpacingClasses(props),\n              className,\n              _className\n            ),\n          }\n\n          let inputParams = {\n            role: hasContext || group ? 'radio' : null,\n            type: hasContext || group ? 'radio' : 'checkbox', // overwriting the type\n          }\n\n          if (!group) {\n            inputParams.type = 'checkbox'\n            inputParams.role = 'radio' // breaks axe test\n          }\n\n          if (showStatus || suffix) {\n            inputParams['aria-describedby'] = combineDescribedBy(\n              inputParams,\n              showStatus ? id + '-status' : null,\n              suffix ? id + '-suffix' : null\n            )\n          }\n          if (readOnly) {\n            inputParams['aria-readonly'] = inputParams.readOnly = true\n          }\n\n          inputParams = Object.assign(inputParams, rest)\n\n          skeletonDOMAttributes(inputParams, skeleton, this.context)\n\n          // also used for code markup simulation\n          validateDOMAttributes(this.props, inputParams)\n\n          const labelComp = label && (\n            <FormLabel\n              id={id + '-label'}\n              for_id={id}\n              text={label}\n              disabled={disabled}\n              skeleton={skeleton}\n              sr_only={label_sr_only}\n            />\n          )\n\n          const Element = element || 'input'\n\n          return (\n            <span {...mainParams}>\n              <span className=\"dnb-radio__order\">\n                {label_position === 'left' && labelComp}\n\n                <span className=\"dnb-radio__inner\">\n                  <AlignmentHelper />\n\n                  <FormStatus\n                    show={showStatus}\n                    id={id + '-form-status'}\n                    globalStatus={globalStatus}\n                    label={label}\n                    text_id={id + '-status'} // used for \"aria-describedby\"\n                    width_selector={id + ', ' + id + '-label'}\n                    text={status}\n                    state={status_state}\n                    no_animation={status_no_animation}\n                    skeleton={skeleton}\n                    {...status_props}\n                  />\n\n                  <span className=\"dnb-radio__row\">\n                    <span className=\"dnb-radio__shell\">\n                      <Element\n                        type=\"radio\"\n                        value={value}\n                        id={id}\n                        name={group}\n                        className=\"dnb-radio__input\"\n                        checked={checked}\n                        aria-checked={\n                          this.isPlainGroup() ? undefined : checked\n                        }\n                        disabled={isTrue(disabled)}\n                        ref={this._refInput}\n                        {...inputParams}\n                        onChange={this.onChangeHandler}\n                        onClick={this.onClickHandler}\n                        onKeyDown={this.onKeyDownHandler}\n                      />\n\n                      <span\n                        className={classnames(\n                          'dnb-radio__button',\n                          createSkeletonClass(\n                            'shape',\n                            skeleton,\n                            this.context\n                          )\n                        )}\n                        aria-hidden\n                      />\n                      <span className=\"dnb-radio__focus\" aria-hidden />\n                      <span className=\"dnb-radio__dot\" aria-hidden />\n                    </span>\n\n                    {label_position !== 'left' && labelComp}\n\n                    {suffix && (\n                      <Suffix\n                        className=\"dnb-radio__suffix\"\n                        id={id + '-suffix'} // used for \"aria-describedby\"\n                        context={props}\n                      >\n                        {suffix}\n                      </Suffix>\n                    )}\n                  </span>\n                </span>\n              </span>\n            </span>\n          )\n        }}\n      </Context.Consumer>\n    )\n  }\n}\n","/**\n * Web Textarea Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport FormLabel from '../form-label/FormLabel'\nimport FormStatus from '../form-status/FormStatus'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  processChildren,\n  getStatusState,\n  combineDescribedBy,\n  warn,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport { includeValidProps } from '../form-row/FormRowHelpers'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\n\n/**\n * The textarea component is an umbrella component for all textareas which share the same style as the classic `text` textarea field.\n */\nexport default class Textarea extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    value: PropTypes.string,\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    textarea_state: PropTypes.string,\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    placeholder: PropTypes.string,\n    align: PropTypes.oneOf(['left', 'right']),\n    stretch: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    autoresize: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    autoresize_max_rows: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    class: PropTypes.string,\n    textarea_class: PropTypes.string,\n    textarea_attributes: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n    readOnly: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    cols: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    inner_ref: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    textarea_element: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n    on_change: PropTypes.func,\n    on_focus: PropTypes.func,\n    on_blur: PropTypes.func,\n    on_key_down: PropTypes.func,\n    on_state_update: PropTypes.func,\n  }\n\n  static defaultProps = {\n    value: 'initval',\n    id: null,\n    label: null,\n    label_direction: null,\n    label_sr_only: null,\n    status: null,\n    textarea_state: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    placeholder: null,\n    align: null,\n    stretch: null,\n    disabled: null,\n    skeleton: null,\n    autoresize: null,\n    autoresize_max_rows: null,\n    textarea_class: null,\n    class: null,\n    textarea_attributes: null,\n    readOnly: false,\n    rows: null,\n    cols: null,\n    inner_ref: null,\n\n    className: null,\n    textarea_element: null,\n    children: null,\n\n    on_change: null,\n    on_focus: null,\n    on_blur: null,\n    on_key_down: null,\n    on_state_update: null,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const value = Textarea.getValue(props)\n    if (\n      state._listenForPropChanges &&\n      value !== 'initval' &&\n      value !== state.value\n    ) {\n      if (\n        value !== state.value &&\n        value !== state._value &&\n        typeof props.on_state_update === 'function'\n      ) {\n        dispatchCustomElementEvent({ props }, 'on_state_update', { value })\n      }\n      state.value = value\n    }\n    if (props.textarea_state) {\n      state.textareaState = props.textarea_state\n    }\n    state._listenForPropChanges = true\n    return state\n  }\n\n  static hasValue(value) {\n    return (\n      ((typeof value === 'string' || typeof value === 'number') &&\n        String(value).length > 0) ||\n      false\n    )\n  }\n\n  static getValue(props) {\n    const value = processChildren(props)\n    if (value === '' || Textarea.hasValue(value)) {\n      return value\n    }\n    return props.value\n  }\n\n  state = {\n    textareaState: 'virgin',\n    value: null,\n    _value: null,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this._ref = props.inner_ref || React.createRef()\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n\n    // make sure we don't trigger getDerivedStateFromProps on startup\n    this.state._listenForPropChanges = true\n    if (props.textarea_state) {\n      this.state.textareaState = props.textarea_state\n    }\n    this.state._value = props.value\n  }\n  componentDidMount() {\n    if (isTrue(this.props.autoresize) && typeof window !== 'undefined') {\n      this.setAutosize()\n      try {\n        this.resizeObserver = new ResizeObserver(this.setAutosize)\n        this.resizeObserver.observe(document.body)\n      } catch (e) {\n        window.addEventListener('resize', this.setAutosize)\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect()\n      this.resizeObserver = null\n    }\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.setAutosize)\n    }\n  }\n  onFocusHandler = (event) => {\n    const { value } = this._ref.current\n    this.setState({\n      value,\n      _listenForPropChanges: false,\n      textareaState: 'focus',\n    })\n    dispatchCustomElementEvent(this, 'on_focus', { value, event })\n  }\n  onBlurHandler = (event) => {\n    const { value } = event.target\n    this.setState({\n      value,\n      _listenForPropChanges: false,\n      textareaState: Textarea.hasValue(value) ? 'dirty' : 'initial',\n    })\n    dispatchCustomElementEvent(this, 'on_blur', { value, event })\n  }\n  onChangeHandler = (event) => {\n    const { value } = event.target\n\n    if (isTrue(this.props.autoresize)) {\n      this.prepareAutosize()\n    }\n\n    const rows = this.getRows(value)\n\n    const ret = dispatchCustomElementEvent(this, 'on_change', {\n      value,\n      rows,\n      event,\n    })\n    if (ret !== false) {\n      this.setState({ value, _listenForPropChanges: false })\n      if (isTrue(this.props.autoresize)) {\n        this.setAutosize(rows)\n      }\n    }\n  }\n  onKeyDownHandler = (event) => {\n    const rows = this.getRows()\n    const { value } = event.target\n    dispatchCustomElementEvent(this, 'on_key_down', {\n      value,\n      rows,\n      event,\n    })\n  }\n  prepareAutosize = () => {\n    const elem = this._ref.current\n    if (!elem) {\n      return // stop here if no element was gotten\n    }\n    try {\n      elem.style.height = 'auto'\n    } catch (e) {\n      warn(e)\n    }\n  }\n  setAutosize = (rows = null) => {\n    const elem = this._ref.current\n    if (!elem) {\n      return // stop here if no element was gotten\n    }\n    try {\n      if (typeof this._heightOffset === 'undefined') {\n        this._heightOffset = elem.offsetHeight - elem.clientHeight\n      }\n\n      elem.style.height = 'auto'\n\n      // get rows after we set height to auto, this way we get 100% correct rows\n      const lineHeight = this.getLineHeight()\n      let newHeight = elem.scrollHeight + this._heightOffset\n      if (!rows) {\n        rows = this.getRows()\n      }\n\n      if (rows === 1) {\n        if (newHeight > lineHeight) {\n          newHeight = lineHeight\n        }\n      }\n\n      const maxRows = parseFloat(this.props.autoresize_max_rows)\n      if (maxRows > 0) {\n        const maxHeight = maxRows * lineHeight\n\n        if (rows > maxRows || newHeight > maxHeight) {\n          newHeight = maxHeight\n        }\n      }\n\n      elem.style.height = newHeight + 'px'\n    } catch (e) {\n      warn(e)\n    }\n  }\n  getRows() {\n    return (\n      Math.floor(this._ref.current.scrollHeight / this.getLineHeight()) ||\n      1\n    )\n  }\n  getLineHeight() {\n    return parseFloat(getComputedStyle(this._ref.current).lineHeight) || 0\n  }\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      Textarea.defaultProps,\n      { skeleton: this.context?.skeleton },\n      this.context.getTranslation(this.props).Textarea,\n      includeValidProps(this.context.FormRow),\n      this.context.Textarea\n    )\n\n    const {\n      label,\n      label_direction,\n      label_sr_only,\n      status,\n      status_state,\n      status_props,\n      status_no_animation,\n      globalStatus,\n      suffix,\n      disabled,\n      skeleton,\n      stretch,\n      placeholder,\n      align,\n      textarea_class,\n      readOnly,\n      textarea_attributes,\n      class: _className,\n      className,\n\n      autoresize,\n      autoresize_max_rows, //eslint-disable-line\n      id: _id, //eslint-disable-line\n      children, //eslint-disable-line\n      value: _value, //eslint-disable-line\n      textarea_element: _textarea_element, //eslint-disable-line\n\n      ...attributes\n    } = props\n\n    const { value, textareaState } = this.state\n\n    const id = this._id\n    const showStatus = getStatusState(status)\n    const hasValue = Textarea.hasValue(value)\n\n    // pass along all props we wish to have as params\n    let { textarea_element: TextareaElement } = props\n\n    const textareaAttributes = textarea_attributes\n      ? typeof textarea_attributes === 'string'\n        ? JSON.parse(textarea_attributes)\n        : textarea_attributes\n      : {}\n\n    const textareaParams = {\n      className: classnames('dnb-textarea__textarea', textarea_class),\n      role: 'textbox',\n      value: hasValue ? value : '',\n      id,\n      disabled: isTrue(disabled) || isTrue(skeleton),\n      name: id,\n      'aria-placeholder': placeholder,\n      ...attributes,\n      ...textareaAttributes,\n      onChange: this.onChangeHandler,\n      onFocus: this.onFocusHandler,\n      onBlur: this.onBlurHandler,\n      // onPaste: this.onChangeHandler,\n      onKeyDown: this.onKeyDownHandler,\n    }\n\n    // we may considder using: aria-details\n    if (showStatus || suffix) {\n      textareaParams['aria-describedby'] = combineDescribedBy(\n        textareaParams,\n        showStatus ? id + '-status' : null,\n        suffix ? id + '-suffix' : null\n      )\n    }\n    if (readOnly) {\n      textareaParams['aria-readonly'] = textareaParams.readOnly = true\n    }\n\n    const mainParams = {\n      className: classnames(\n        'dnb-textarea',\n        `dnb-textarea--${textareaState}`,\n        hasValue && 'dnb-textarea--has-content',\n        align && `dnb-textarea__align--${align}`,\n        status && `dnb-textarea__status--${status_state}`,\n        autoresize && 'dnb-textarea__autoresize',\n        label_direction && `dnb-textarea--${label_direction}`,\n        isTrue(stretch) && `dnb-textarea--stretch`,\n        'dnb-form-component',\n        createSkeletonClass(null, skeleton),\n        createSpacingClasses(props),\n        _className,\n        className\n      ),\n    }\n\n    const innerParams = {\n      className: classnames(\n        'dnb-textarea__inner',\n        createSkeletonClass('shape', skeleton, this.context)\n      ),\n    }\n\n    const shellParams = {\n      className: classnames('dnb-textarea__shell'),\n    }\n\n    if (isTrue(disabled) || isTrue(skeleton)) {\n      shellParams['aria-disabled'] = true\n    }\n\n    // to show the ending dots on a placeholder, if the text is longer\n    const placeholderStyle =\n      parseFloat(this.props.rows) > 0\n        ? {\n            '--textarea-rows': parseFloat(this.props.rows),\n            // '--textarea-cols': parseFloat(this.props.cols)\n          }\n        : null\n\n    skeletonDOMAttributes(innerParams, skeleton, this.context)\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, textareaParams)\n    validateDOMAttributes(null, innerParams)\n    validateDOMAttributes(null, shellParams)\n\n    if (TextareaElement && typeof TextareaElement === 'function') {\n      TextareaElement = TextareaElement(textareaParams, this._ref)\n    } else if (!TextareaElement && _textarea_element) {\n      TextareaElement = _textarea_element\n    }\n\n    return (\n      <span {...mainParams}>\n        {label && (\n          <FormLabel\n            id={id + '-label'}\n            for_id={id}\n            text={label}\n            label_direction={label_direction}\n            sr_only={label_sr_only}\n            disabled={disabled}\n            skeleton={skeleton}\n          />\n        )}\n\n        <span {...innerParams}>\n          <AlignmentHelper />\n\n          <FormStatus\n            show={showStatus}\n            id={id + '-form-status'}\n            globalStatus={globalStatus}\n            label={label}\n            text_id={id + '-status'} // used for \"aria-describedby\"\n            text={status}\n            state={status_state}\n            no_animation={status_no_animation}\n            skeleton={skeleton}\n            {...status_props}\n          />\n\n          <span className=\"dnb-textarea__row\">\n            <span {...shellParams}>\n              {TextareaElement || (\n                <textarea ref={this._ref} {...textareaParams} />\n              )}\n\n              {placeholder && (\n                <span\n                  aria-hidden\n                  className={classnames(\n                    'dnb-textarea__placeholder',\n                    align ? `dnb-textarea__align--${align}` : null\n                  )}\n                  style={placeholderStyle}\n                >\n                  {placeholder}\n                </span>\n              )}\n\n              <span className=\"dnb-textarea__state\" />\n            </span>\n\n            {suffix && (\n              <Suffix\n                className=\"dnb-textarea__suffix\"\n                id={id + '-suffix'} // used for \"aria-describedby\"\n                context={props}\n              >\n                {suffix}\n              </Suffix>\n            )}\n          </span>\n        </span>\n      </span>\n    )\n  }\n}\n","/**\n * Web ToggleButtonGroup Context\n *\n */\n\nimport React from 'react'\n\nconst ToggleButtonGroupContext = React.createContext({})\n\nexport default ToggleButtonGroupContext\n","/**\n * Web ToggleButtonGroup Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  getStatusState,\n  combineDescribedBy,\n  combineLabelledBy,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport FormRow from '../form-row/FormRow'\nimport FormStatus from '../form-status/FormStatus'\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\nimport ToggleButtonGroupContext from './ToggleButtonGroupContext'\nimport { includeValidProps } from '../form-row/FormRowHelpers'\n\nexport default class ToggleButtonGroup extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    title: PropTypes.string,\n    multiselect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    variant: PropTypes.oneOf(['default', 'checkbox', 'radio']),\n    left_component: PropTypes.node,\n    no_fieldset: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    id: PropTypes.string,\n    name: PropTypes.string,\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    vertical: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    layout_direction: PropTypes.oneOf(['column', 'row']),\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    values: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    ...spacingPropTypes,\n\n    class: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    on_change: PropTypes.func,\n  }\n\n  static defaultProps = {\n    label: null,\n    label_direction: null,\n    label_sr_only: null,\n    title: null,\n    multiselect: null,\n    variant: null,\n    left_component: null,\n    no_fieldset: null,\n    disabled: null,\n    skeleton: null,\n    id: null,\n    name: null,\n    status: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    vertical: null,\n    layout_direction: 'row',\n    value: undefined,\n    values: undefined,\n    attributes: null,\n    class: null,\n\n    className: null,\n    children: null,\n\n    on_change: null,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (\n        typeof props.value !== 'undefined' &&\n        props.value !== state.value\n      ) {\n        state.value = props.value\n      }\n      if (\n        typeof props.values !== 'undefined' &&\n        props.values !== state.values\n      ) {\n        state.values = ToggleButtonGroup.getValues(props)\n      }\n    }\n    state._listenForPropChanges = true\n\n    return state\n  }\n\n  static getValues(props) {\n    if (typeof props.values === 'string' && props.values[0] === '[') {\n      return JSON.parse(props.values)\n    }\n    return props.values\n  }\n\n  constructor(props) {\n    super(props)\n    this._refInput = React.createRef()\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this._name = props.name || makeUniqueId() // cause we need an id anyway\n    this.state = {\n      // do not set the value here, else get true in this check } else if (context.values && Array.isArray(context.values)) {\n      _listenForPropChanges: true,\n    }\n  }\n\n  onChangeHandler = ({ value, event }) => {\n    const { multiselect } = this.props\n    const values = this.state.values || []\n\n    if (isTrue(multiselect)) {\n      if (!values.includes(value)) {\n        values.push(value)\n      } else {\n        values.splice(values.indexOf(value), 1)\n      }\n    }\n\n    this.setState({\n      value,\n      values,\n      _listenForPropChanges: false,\n    })\n\n    dispatchCustomElementEvent(this, 'on_change', {\n      value,\n      values,\n      event,\n    })\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      ToggleButtonGroup.defaultProps,\n      this.context.getTranslation(this.props).ToggleButton,\n      includeValidProps(this.context.FormRow),\n      this.context.ToggleButtonGroup\n    )\n\n    const {\n      status,\n      status_state,\n      status_props,\n      status_no_animation,\n      globalStatus,\n      suffix,\n      label_direction,\n      label_sr_only,\n      vertical,\n      layout_direction,\n      label,\n      variant,\n      left_component,\n      no_fieldset,\n      disabled,\n      skeleton,\n      className,\n      class: _className,\n\n      multiselect,\n      id: _id, // eslint-disable-line\n      name: _name, // eslint-disable-line\n      value: _value, // eslint-disable-line\n      values: _values, // eslint-disable-line\n      children, // eslint-disable-line\n      on_change, // eslint-disable-line\n\n      ...rest\n    } = props\n\n    const { value, values } = this.state\n\n    const id = this._id\n    const showStatus = getStatusState(status)\n\n    const classes = classnames(\n      'dnb-toggle-button-group',\n      status && `dnb-toggle-button-group__status--${status_state}`,\n      !label && 'dnb-toggle-button-group--no-label',\n      `dnb-toggle-button-group--${layout_direction}`,\n      // (isTrue(vertical) || label_direction === 'vertical') &&\n      //   `dnb-toggle-button-group--vertical`,\n      (isTrue(vertical) || label_direction) &&\n        `dnb-form-row--${\n          isTrue(vertical) ? 'vertical' : label_direction\n        }-label`, // <-- has label\n      'dnb-form-component',\n      createSpacingClasses(props),\n      className,\n      _className\n    )\n\n    const params = {\n      ...rest,\n    }\n\n    if (showStatus || suffix) {\n      params['aria-describedby'] = combineDescribedBy(\n        params,\n        showStatus ? id + '-status' : null,\n        suffix ? id + '-suffix' : null\n      )\n    }\n    if (label) {\n      params['aria-labelledby'] = combineLabelledBy(params, id + '-label')\n    }\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, params)\n\n    const context = {\n      name: this._name,\n      value,\n      values,\n      multiselect: isTrue(multiselect),\n      variant,\n      left_component,\n      disabled,\n      skeleton,\n      setContext: (context) => {\n        // also look for a fuctions, we we are able to fill old values\n        // this is used in the \"constructor\" inside the ToggleButton.js component\n        if (typeof context === 'function') {\n          context = context(this._tmp)\n        }\n        this._tmp = { ...this._tmp, ...context }\n        this.setState({\n          ...context,\n          _listenForPropChanges: false,\n        })\n      },\n      onChange: this.onChangeHandler,\n    }\n\n    const formRowParams = {\n      id,\n      label,\n      label_id: id + '-label', // send the id along, so the FormRow component can use it\n      label_direction,\n      label_sr_only,\n      direction: label_direction,\n      vertical,\n      disabled,\n      skeleton,\n      no_fieldset,\n      skipContentWrapperIfNested: true,\n      // status,\n      // status_state\n    }\n\n    return (\n      <ToggleButtonGroupContext.Provider value={context}>\n        <div className={classes}>\n          <AlignmentHelper />\n          <FormRow {...formRowParams}>\n            <span\n              id={id}\n              className=\"dnb-toggle-button-group__shell\"\n              role=\"group\"\n              {...params}\n            >\n              <FormStatus\n                show={showStatus}\n                id={id + '-form-status'}\n                globalStatus={globalStatus}\n                label={label}\n                text_id={id + '-status'} // used for \"aria-describedby\"\n                text={status}\n                state={status_state}\n                no_animation={status_no_animation}\n                skeleton={skeleton}\n                {...status_props}\n              />\n\n              <span className=\"dnb-toggle-button-group__children\">\n                {children}\n\n                {suffix && (\n                  <Suffix\n                    className=\"dnb-toggle-button-group__suffix\"\n                    id={id + '-suffix'} // used for \"aria-describedby\"\n                    context={props}\n                  >\n                    {suffix}\n                  </Suffix>\n                )}\n              </span>\n            </span>\n          </FormRow>\n        </div>\n      </ToggleButtonGroupContext.Provider>\n    )\n  }\n}\n","/**\n * Web ToggleButton Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport keycode from 'keycode'\nimport {\n  warn,\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  getStatusState,\n  combineDescribedBy,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport { includeValidProps } from '../form-row/FormRowHelpers'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\n\nimport Radio from '../radio/Radio'\nimport Checkbox from '../checkbox/Checkbox'\nimport Button from '../button/Button'\nimport FormLabel from '../form-label/FormLabel'\nimport FormStatus from '../form-status/FormStatus'\nimport ToggleButtonGroup from './ToggleButtonGroup'\nimport ToggleButtonGroupContext from './ToggleButtonGroupContext'\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\n\n/**\n * The toggle-button component is our enhancement of the classic toggle-button button.\n */\nexport default class ToggleButton extends React.PureComponent {\n  static Group = ToggleButtonGroup\n\n  static contextType = ToggleButtonGroupContext\n\n  static propTypes = {\n    text: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    title: PropTypes.string,\n    checked: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    variant: PropTypes.oneOf(['default', 'checkbox', 'radio']),\n    left_component: PropTypes.node,\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    id: PropTypes.string,\n    // group: PropTypes.string,\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    icon: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n    icon_position: PropTypes.oneOf(['left', 'right']),\n    icon_size: PropTypes.string,\n    attributes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    readOnly: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    ...spacingPropTypes,\n\n    class: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    on_change: PropTypes.func,\n    on_state_update: PropTypes.func,\n  }\n\n  static defaultProps = {\n    text: null,\n    label: null,\n    label_direction: null,\n    label_sr_only: null,\n    title: null,\n    checked: undefined,\n    variant: null,\n    left_component: null,\n    disabled: null,\n    skeleton: null,\n    id: null,\n    // group: null,\n    status: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    value: '',\n    icon: null,\n    icon_position: 'right',\n    icon_size: null,\n    attributes: null,\n    readOnly: false,\n    class: null,\n\n    className: null,\n    children: null,\n\n    on_change: null,\n    on_state_update: null,\n  }\n\n  static parseChecked = (state) => /true|on/.test(String(state))\n\n  static getDerivedStateFromProps(props, state) {\n    if (state._listenForPropChanges) {\n      if (props.checked !== state._checked) {\n        state.checked = ToggleButton.parseChecked(props.checked)\n      }\n    }\n    state._listenForPropChanges = true\n\n    if (state.checked !== state.__checked) {\n      dispatchCustomElementEvent({ props }, 'on_state_update', {\n        checked: state.checked,\n      })\n    }\n\n    state._checked = props.checked\n    state.__checked = state.checked\n\n    return state\n  }\n\n  constructor(props, context) {\n    super(props)\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this._refButton = React.createRef()\n\n    this.state = {\n      _listenForPropChanges: true,\n    }\n\n    // set the startup checked values from context, if they exists\n    if (context.name && typeof props.value !== 'undefined') {\n      if (typeof context.value !== 'undefined') {\n        this.state.checked = context.value === props.value\n        this.state._listenForPropChanges = false\n      } else if (context.values && Array.isArray(context.values)) {\n        this.state.checked = context.values.includes(props.value)\n        this.state._listenForPropChanges = false\n\n        // make sure we update the context\n        // with a possible custom set \"checked\" state\n      } else if (ToggleButton.parseChecked(props.checked)) {\n        if (context.setContext) {\n          if (context.multiselect) {\n            context.setContext((tmp) => {\n              return {\n                values:\n                  // in case we have set before a new context (other component)\n                  // we fill combine theese arrays\n                  tmp && Array.isArray(tmp.values)\n                    ? [...tmp.values, props.value]\n                    : [props.value],\n              }\n            })\n          } else {\n            context.setContext({\n              value: props.value,\n            })\n          }\n        }\n      }\n    }\n  }\n\n  onKeyDownHandler = (event) => {\n    switch (keycode(event)) {\n      case 'enter':\n        this.onClickHandler({ event })\n        break\n    }\n  }\n\n  onKeyUpHandler = (event) => {\n    switch (keycode(event)) {\n      case 'enter':\n        this.onClickHandler({ event })\n        break\n    }\n  }\n\n  onClickHandler = ({ event }) => {\n    if (isTrue(this.props.readOnly)) {\n      return event.preventDefault()\n    }\n    event.persist()\n\n    // only select a value once\n    if (\n      !isTrue(this.context.multiselect) &&\n      this.props.value === this.context.value\n    ) {\n      return\n    }\n\n    // else we change the checked state\n    const checked = !this.state.checked\n    this.setState({\n      checked,\n      _listenForPropChanges: false,\n    })\n    this.callOnChange({ checked, event })\n\n    if (this._refButton.current && checked) {\n      // simulate focus for firefox and safari\n      // so we can get rid of the hover ring after click\n      try {\n        this._refButton.current._ref.current.focus()\n      } catch (e) {\n        warn(e)\n      }\n    }\n  }\n\n  callOnChange = ({ checked, event }) => {\n    const { value } = this.props\n    if (this.context.onChange) {\n      this.context.onChange({\n        value,\n        event,\n      })\n    }\n    dispatchCustomElementEvent(this, 'on_change', {\n      checked,\n      value,\n      event,\n    })\n  }\n\n  render() {\n    return (\n      <Context.Consumer>\n        {(context) => {\n          // from internal context\n          const contextProps = extendPropsWithContextInClassComponent(\n            this.props,\n            ToggleButton.defaultProps,\n            this.context\n          )\n\n          // use only the props from context, who are available here anyway\n          const props = extendPropsWithContextInClassComponent(\n            this.props,\n            ToggleButton.defaultProps,\n            contextProps,\n            context.translation.ToggleButton,\n            includeValidProps(context.FormRow),\n            context.ToggleButton\n          )\n\n          const {\n            status,\n            status_state,\n            status_props,\n            status_no_animation,\n            globalStatus,\n            suffix,\n            label,\n            label_direction,\n            label_sr_only,\n            text,\n            title,\n            readOnly,\n            className,\n            class: _className,\n            disabled,\n            skeleton,\n            variant,\n            left_component,\n            icon,\n            icon_size,\n            icon_position,\n            value: propValue,\n\n            id: _id, // eslint-disable-line\n            // group: _group, // eslint-disable-line\n            checked: _checked, // eslint-disable-line\n            children,\n            on_change, // eslint-disable-line\n            on_state_update, // eslint-disable-line\n\n            ...rest\n          } = props\n\n          let { checked } = this.state\n\n          if (\n            !isTrue(this.context.multiselect) &&\n            typeof this.context.value !== 'undefined'\n          ) {\n            const contextValue = this.context.value\n            if (\n              typeof propValue === 'string' ||\n              typeof propValue === 'number'\n            ) {\n              checked = propValue === contextValue\n            }\n          } else if (\n            isTrue(this.context.multiselect) &&\n            typeof this.context.values !== 'undefined'\n          ) {\n            const contextValues = this.context.values\n            if (\n              typeof propValue === 'string' ||\n              typeof propValue === 'number'\n            ) {\n              checked = contextValues.includes(propValue)\n            }\n          }\n\n          const id = this._id\n          const showStatus = getStatusState(status)\n\n          const mainParams = {\n            className: classnames(\n              'dnb-toggle-button',\n              status && `dnb-toggle-button__status--${status_state}`,\n              checked && `dnb-toggle-button--checked`,\n              label_direction && `dnb-toggle-button--${label_direction}`,\n              createSpacingClasses(props),\n              className,\n              _className\n            ),\n          }\n\n          // to remove spacing props\n          validateDOMAttributes(this.props, rest)\n\n          const buttonParams = {\n            id,\n            disabled,\n            skeleton,\n            text: text || children,\n            title,\n            icon,\n            icon_size,\n            icon_position,\n            'aria-pressed': String(checked || false),\n            ...rest,\n          }\n\n          const componentParams = {\n            checked,\n            disabled,\n            element: 'span',\n            'data-checked': String(checked || false),\n            'aria-checked': undefined,\n            role: undefined,\n            type: undefined,\n            name: null,\n            title: null,\n          }\n\n          if (status) {\n            // do not send along the message, but only the status states\n            if (status_state === 'info') {\n              componentParams.status_state = 'info'\n            } else {\n              componentParams.status = 'error'\n            }\n          }\n\n          if (showStatus || suffix) {\n            buttonParams['aria-describedby'] = combineDescribedBy(\n              buttonParams,\n              showStatus ? id + '-status' : null,\n              suffix ? id + '-suffix' : null\n            )\n          }\n          if (readOnly) {\n            buttonParams['aria-readonly'] = buttonParams.readOnly = true\n          }\n\n          let leftComponent = null\n          switch (variant) {\n            case 'radio':\n              leftComponent = (\n                <Radio id={`${id}-radio`} {...componentParams} />\n              )\n              break\n\n            case 'checkbox':\n              leftComponent = (\n                <Checkbox id={`${id}-checkbox`} {...componentParams} />\n              )\n              break\n\n            case 'default':\n            default:\n              leftComponent = left_component\n              break\n          }\n\n          return (\n            <span {...mainParams}>\n              {label && (\n                <FormLabel\n                  id={id + '-label'}\n                  for_id={id}\n                  text={label}\n                  disabled={disabled}\n                  skeleton={skeleton}\n                  label_direction={label_direction}\n                  sr_only={label_sr_only}\n                />\n              )}\n              <span className=\"dnb-toggle-button__inner\">\n                <FormStatus\n                  show={showStatus}\n                  id={id + '-form-status'}\n                  globalStatus={globalStatus}\n                  label={label}\n                  text_id={id + '-status'} // used for \"aria-describedby\"\n                  text={status}\n                  state={status_state}\n                  no_animation={status_no_animation}\n                  skeleton={skeleton}\n                  {...status_props}\n                />\n\n                <span className=\"dnb-toggle-button__shell\">\n                  <AlignmentHelper />\n\n                  <Button\n                    variant=\"secondary\"\n                    className=\"dnb-toggle-button__button\"\n                    custom_content={\n                      leftComponent && (\n                        <span className=\"dnb-toggle-button__component\">\n                          {leftComponent}\n                        </span>\n                      )\n                    }\n                    {...buttonParams}\n                    ref={this._refButton}\n                    onClick={this.onClickHandler}\n                    onKeyDown={this.onKeyDownHandler}\n                    onKeyUp={this.onKeyUpHandler}\n                  />\n\n                  {suffix && (\n                    <Suffix\n                      className=\"dnb-toggle-button__suffix\"\n                      id={id + '-suffix'} // used for \"aria-describedby\"\n                      context={props}\n                    >\n                      {suffix}\n                    </Suffix>\n                  )}\n                </span>\n              </span>\n            </span>\n          )\n        }}\n      </Context.Consumer>\n    )\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}"],"names":["reactPropsRegex","prop","test","charCodeAt","registerStyles","cache","serialized","isStringTag","className","key","name","undefined","registered","styles","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","useInsertionEffect","create","Insertion","_ref","inserted","current","insert","sheet","next","insertStyles","createStyled","identifierName","targetClassName","__emotion_real","baseTag","__emotion_base","label","target","defaultShouldForwardProp","shouldUseAs","args","arguments","__emotion_styles","slice","push","raw","apply","len","length","i","Styled","w","props","ref","registeredStyles","classNames","rawClassName","FinalTag","as","classInterpolations","mergedProps","theme","useContext","T","split","forEach","concat","finalShouldForwardProp","newProps","_key","createElement","Fragment","displayName","defaultProps","Object","defineProperty","value","withComponent","nextTag","nextOptions","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","PropTypes","id","message","spacingPropTypes","formRowDefaultProps","label_direction","label_sr_only","label_id","label_class","no_label","no_fieldset","locale","wrap","direction","vertical","centered","section_style","section_spacing","globalStatus","responsive","disabled","skeleton","class","skipContentWrapperIfNested","children","FormRow","_id","makeUniqueId","getContent","Array","isArray","reduce","pV","cV","type","render","extendPropsWithContextInClassComponent","this","context","_className","_label","attributes","isNested","itsMeAgain","nestedLabel","hasLabel","params","classnames","isTrue","createSpacingClasses","validateDOMAttributes","providerContext","extend","useId","isIsUsed","useFieldset","Fieldset","style_type","spacing","element","for_id","text","sr_only","React","contextType","Context","FormSet","onSubmitHandler","event","prevent_submit","preventDefault","dispatchCustomElementEvent","processChildren","no_form","rest","allowedProps","entries","acc","k","v","onSubmit","content","Element","on_submit","RadioGroup","onChangeHandler","setState","_listenForPropChanges","_refInput","_name","state","getDerivedStateFromProps","_value","includeValidProps","status","status_state","status_props","status_no_animation","suffix","label_position","layout_direction","size","on_change","showStatus","getStatusState","classes","combineDescribedBy","combineLabelledBy","onChange","formRowParams","AlignmentHelper","role","Suffix","FormStatus","show","text_id","width_selector","no_animation","title","parseChecked","String","Radio","onKeyDownHandler","keycode","isInNoGroup","isContextGroupOrSingle","checked","_event","readOnly","isPlainGroup","setTimeout","callOnChange","group","onClickHandler","focus","_checked","__checked","contextProps","_group","_disabled","on_state_update","hasContext","mainParams","inputParams","assign","skeletonDOMAttributes","labelComp","FormLabel","onClick","onKeyDown","createSkeletonClass","RadioGroupContext","Group","Textarea","textareaState","onFocusHandler","onBlurHandler","hasValue","autoresize","prepareAutosize","rows","getRows","setAutosize","elem","style","e","warn","_heightOffset","offsetHeight","clientHeight","lineHeight","getLineHeight","newHeight","scrollHeight","maxRows","parseFloat","autoresize_max_rows","maxHeight","inner_ref","textarea_state","getValue","componentDidMount","window","resizeObserver","ResizeObserver","observe","document","body","addEventListener","componentWillUnmount","disconnect","removeEventListener","Math","floor","getComputedStyle","getTranslation","stretch","placeholder","align","textarea_class","textarea_attributes","textarea_element","_textarea_element","TextareaElement","textareaAttributes","JSON","parse","textareaParams","onFocus","onBlur","innerParams","shellParams","placeholderStyle","cols","on_focus","on_blur","on_key_down","ToggleButtonGroup","multiselect","values","includes","splice","indexOf","getValues","ToggleButton","variant","left_component","_values","setContext","_tmp","onKeyUpHandler","persist","_refButton","tmp","translation","icon","icon_size","icon_position","propValue","contextValues","contextValue","buttonParams","componentParams","leftComponent","Checkbox","Button","custom_content","onKeyUp","ToggleButtonGroupContext","_extends","source","prototype","hasOwnProperty","call"],"sourceRoot":""}