{"version":3,"file":"5d993dcc9fa6dc4e3f3b63e8b7a585bec1a190f8-d3adecd71516102471b5.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Layout/FlexContainer/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Layout/FlexContainer/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/InfoCardSection.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Layout,\n  TestElement,\n  Field,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.Card>\n        <Layout.FlexContainer>\n          <Layout.FlexItem>\n            <TestElement>FlexItem</TestElement>\n          </Layout.FlexItem>\n          <Layout.FlexItem>\n            <TestElement>FlexItem</TestElement>\n          </Layout.FlexItem>\n          <Layout.FlexItem>\n            <TestElement>FlexItem</TestElement>\n          </Layout.FlexItem>\n          <Layout.FlexItem>\n            <TestElement>FlexItem</TestElement>\n          </Layout.FlexItem>\n        </Layout.FlexContainer>\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.Card>\n        <p>No width (default)</p>\n        <Layout.FlexContainer>\n          <TestElement>Contents</TestElement>\n        </Layout.FlexContainer>\n        <p>Small</p>\n        <Layout.FlexContainer width=\"small\">\n          <TestElement>Cont.</TestElement>\n        </Layout.FlexContainer>\n        <p>Medium</p>\n        <Layout.FlexContainer width=\"medium\">\n          <TestElement>Contents</TestElement>\n        </Layout.FlexContainer>\n        <p>Large</p>\n        <Layout.FlexContainer width=\"large\">\n          <TestElement>Contents</TestElement>\n        </Layout.FlexContainer>\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const RowWithFlexItem = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"row\">\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const RowWithFlexItemJustifyCenter = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"row\" justify=\"center\">\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const RowWithFlexItemJustifyFlexEnd = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"row\" justify=\"flex-end\">\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const RowWithCard = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"row\">\n        <Layout.Card>FlexItem</Layout.Card>\n        <Layout.Card>FlexItem</Layout.Card>\n        <Layout.Card>FlexItem</Layout.Card>\n        <Layout.Card>FlexItem</Layout.Card>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const RowWithFieldString = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"row\">\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Field.String label=\"Label\" value=\"Foo\" />\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const ColumnWithFlexItem = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"column\">\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n        <Layout.FlexItem>\n          <TestElement>FlexItem</TestElement>\n        </Layout.FlexItem>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const ColumnWithCard = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.FlexContainer direction=\"column\">\n        <Layout.Card>Card contents</Layout.Card>\n        <Layout.Card>Card contents</Layout.Card>\n        <Layout.Card>Card contents</Layout.Card>\n        <Layout.Card>Card contents</Layout.Card>\n      </Layout.FlexContainer>\n    </ComponentBox>\n  )\n}\n\nexport const ColumnWithFieldString = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.Card>\n        <Layout.FlexContainer direction=\"column\">\n          <Field.String label=\"Label\" value=\"Foo\" />\n          <Field.String label=\"Label\" value=\"Foo\" />\n          <Field.String label=\"Label\" value=\"Foo\" />\n          <Field.String label=\"Label\" value=\"Foo\" />\n        </Layout.FlexContainer>\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const ColumnSpaceDivider = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.Card>\n        <Layout.FlexContainer direction=\"column\" divider=\"space\">\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n        </Layout.FlexContainer>\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n\nexport const ColumnLineDivider = () => {\n  return (\n    <ComponentBox scope={{ Layout, TestElement, Field }}>\n      <Layout.Card>\n        <Layout.FlexContainer direction=\"column\" divider=\"line\">\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n        </Layout.FlexContainer>\n      </Layout.Card>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ColumnLineDivider) _missingMdxReference(\"Examples.ColumnLineDivider\", true);\n  if (!Examples.ColumnSpaceDivider) _missingMdxReference(\"Examples.ColumnSpaceDivider\", true);\n  if (!Examples.ColumnWithCard) _missingMdxReference(\"Examples.ColumnWithCard\", true);\n  if (!Examples.ColumnWithFieldString) _missingMdxReference(\"Examples.ColumnWithFieldString\", true);\n  if (!Examples.ColumnWithFlexItem) _missingMdxReference(\"Examples.ColumnWithFlexItem\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.RowWithCard) _missingMdxReference(\"Examples.RowWithCard\", true);\n  if (!Examples.RowWithFieldString) _missingMdxReference(\"Examples.RowWithFieldString\", true);\n  if (!Examples.RowWithFlexItem) _missingMdxReference(\"Examples.RowWithFlexItem\", true);\n  if (!Examples.RowWithFlexItemJustifyCenter) _missingMdxReference(\"Examples.RowWithFlexItemJustifyCenter\", true);\n  if (!Examples.RowWithFlexItemJustifyFlexEnd) _missingMdxReference(\"Examples.RowWithFlexItemJustifyFlexEnd\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"No properties\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Row with FlexItem\"\n    }), \"\\n\", _jsx(Examples.RowWithFlexItem, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Row with FlexItem, \", _jsx(_components.code, {\n        children: \"justify=\\\"center\\\"\"\n      })]\n    }), \"\\n\", _jsx(Examples.RowWithFlexItemJustifyCenter, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Row with FlexItem, \", _jsx(_components.code, {\n        children: \"justify=\\\"flex-end\\\"\"\n      })]\n    }), \"\\n\", _jsx(Examples.RowWithFlexItemJustifyFlexEnd, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Row with Card\"\n    }), \"\\n\", _jsx(Examples.RowWithCard, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Row with Field.String\"\n    }), \"\\n\", _jsx(Examples.RowWithFieldString, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Column with FlexItem\"\n    }), \"\\n\", _jsx(Examples.ColumnWithFlexItem, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Column with Card\"\n    }), \"\\n\", _jsx(Examples.ColumnWithCard, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Column with Field.String\"\n    }), \"\\n\", _jsx(Examples.ColumnWithFieldString, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Column, space divider\"\n    }), \"\\n\", _jsx(Examples.ColumnSpaceDivider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Column, line divider\"\n    }), \"\\n\", _jsx(Examples.ColumnLineDivider, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'stretch',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...forwardSpaceProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nfunction MainHeading(props: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level=\"2\"\n      size=\"large\"\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nfunction SubHeading(props: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level=\"3\"\n      size=\"medium\"\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport type { ComponentProps } from '../component-types'\nimport { forwardSpaceProps } from '../utils'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexItem(props: Props) {\n  const { className, grow, shrink, width, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    width && `dnb-forms-flex-item--width-${width}`,\n    className\n  )\n\n  return (\n    <Div className={cn} {...forwardSpaceProps(props)}>\n      {children}\n    </Div>\n  )\n}\n\nFlexItem._supportsEufemiaSpacingProps = true\nexport default FlexItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...forwardSpaceProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...forwardSpaceProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem\n      className={classnames('dnb-forms-card', className)}\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </FlexItem>\n  )\n}\n\nCard._supportsEufemiaSpacingProps = true\nexport default Card\n","import React from 'react'\nimport classnames from 'classnames'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...forwardSpaceProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nSection._supportsEufemiaSpacingProps = true\nexport default Section\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nRow._supportsEufemiaSpacingProps = true\nexport default Row\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nColumn._supportsEufemiaSpacingProps = true\nexport default Column\n","import React from 'react'\nimport classnames from 'classnames'\nimport { InfoCard } from '../../../components'\nimport { InfoCardProps } from '../../../components/info-card/InfoCard'\nimport { forwardSpaceProps, omitSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport Section from './Section'\n\nexport type Props = ComponentProps & InfoCardProps\n\nfunction InfoCardSection(props: Props) {\n  const { className } = props\n  return (\n    <Section\n      className={classnames('dnb-forms-info-card-section', className)}\n      {...forwardSpaceProps(props)}\n    >\n      <InfoCard {...omitSpaceProps(props)} />\n    </Section>\n  )\n}\n\nInfoCardSection._supportsEufemiaSpacingProps = true\nexport default InfoCardSection\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\nimport InfoCardSection from './InfoCardSection'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n  InfoCardSection,\n}\n\nexport default Layout\n","import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default function TestElement({ children }: Props) {\n  return <div className=\"dnb-forms-test-element\">{children}</div>\n}\n"],"names":["Default","_jsx","ComponentBox","scope","Layout","TestElement","Field","children","Widths","RowWithFlexItem","RowWithFlexItemJustifyCenter","RowWithFlexItemJustifyFlexEnd","RowWithCard","RowWithFieldString","ColumnWithFlexItem","ColumnWithCard","ColumnWithFieldString","ColumnSpaceDivider","ColumnLineDivider","_createMdxContent","props","_components","Object","assign","h2","h3","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","isHeadingElement","element","type","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","React","top","space","undefined","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","Div","FlexContainer","className","direction","wrap","justify","align","divider","spacing","width","cn","classnames","childrenArray","toArray","forwardSpaceProps","map","child","i","_ref","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","Space","key","_supportsEufemiaSpacingProps","Heading","level","size","FlexItem","grow","shrink","Card","stack","Section","Row","Column","InfoCardSection","InfoCard","omitSpaceProps","ButtonRow"],"sourceRoot":""}