{"version":3,"file":"808c39ece4eb360b91453eb7f2b18368d728ea91-5f7a543fcadf473f9b9a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dropdown/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/dropdown/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport {\n  Dropdown,\n  NumberFormat,\n  IconPrimary,\n  FormRow,\n  Link,\n  HelpButton,\n  P,\n} from '@dnb/eufemia/src'\n\nimport type { DropdownProps } from '@dnb/eufemia/src/components/dropdown/Dropdown'\n\ntype VisualTestReturn = Pick<\n  DropdownProps,\n  | 'opened'\n  | 'prevent_close'\n  | 'independent_width'\n  | 'skip_portal'\n  | 'direction'\n>\n\nconst Wrapper = styled.div`\n  .dnb-form-label {\n    margin-right: 1rem;\n  }\n  [data-visual-test] {\n    > :not(.dnb-dropdown--is-popup):not(.dnb-dropdown--independent-width):not(.dnb-dropdown--stretch)\n      .dnb-dropdown__shell {\n      width: var(--dropdown-width);\n    }\n  }\n  [data-visual-test-wrapper='dropdown-action_menu-custom'],\n  [data-visual-test-wrapper='dropdown-more_menu'] {\n    width: 20rem;\n    height: 15rem !important;\n  }\n  [data-visual-test='dropdown-action_menu-custom'] .dnb-dropdown__list {\n    width: 15rem;\n  }\n  [data-visual-test='dropdown-list'] .dnb-drawer-list__list {\n    display: block;\n    visibility: visible;\n    position: relative;\n    top: 0;\n    width: var(--dropdown-width);\n  }\n`\n\nconst data = [\n  // Every data item can, beside \"content\" - contain what ever\n  {\n    // (optional) can be what ever\n    selected_key: 'key_0',\n\n    // (optional) is show instead of \"content\", once selected\n    selected_value: 'Item 1 Value',\n\n    // Item content as a string or array\n    content: 'Item 1 Content',\n  },\n  {\n    selected_key: 'key_1',\n    content: ['Item 2 Value', 'Item 2 Content'],\n  },\n  {\n    selected_key: 'key_2',\n    selected_value: 'Item 3 Value',\n    content: ['Item 3 Content A', 'Item 3 Content B'],\n  },\n  {\n    selected_key: 'key_3',\n    selected_value: 'Item 4 Value',\n    content: ['Item 4 Content A', <>Custom Component</>],\n  },\n]\n\nexport const DropdownFind = () => (\n  <Wrapper>\n    <ComponentBox>\n      {() => {\n        const scrollableData = [\n          {\n            content: 'A',\n          },\n          {\n            content: 'B',\n          },\n          {\n            selected_value: (\n              <NumberFormat always_selectall ban>\n                11345678962\n              </NumberFormat>\n            ),\n            content: [\n              <NumberFormat key=\"ban-1\" always_selectall ban>\n                11345678962\n              </NumberFormat>,\n              'C',\n            ],\n          },\n          {\n            selected_value: (\n              <NumberFormat always_selectall ban>\n                15349648901\n              </NumberFormat>\n            ),\n            content: [\n              <NumberFormat key=\"ban-2\" always_selectall ban>\n                15349648901\n              </NumberFormat>,\n              'D',\n            ],\n          },\n          {\n            content: 'E',\n          },\n          {\n            selected_key: 'key_1',\n            selected_value: 'Find me by keypress',\n            content: ['F', 'F', 'F', 'F'],\n          },\n          {\n            content: 'G',\n          },\n          {\n            content: 'H',\n          },\n        ]\n\n        return (\n          <Dropdown\n            data={scrollableData}\n            value=\"key_1\" // use either index (5) or selected_key: 'key_1'\n            label=\"Label:\"\n          />\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownNoValue = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"dropdown-closed\">\n      {() => {\n        const data = [\n          // Every data item can, beside \"content\" - contain what ever\n          {\n            // (optional) can be what ever\n            selected_key: 'key_0',\n\n            // (optional) is show instead of \"content\", once selected\n            selected_value: 'Item 1 Value',\n\n            // Item content as a string or array\n            content: 'Item 1 Content',\n          },\n          {\n            selected_key: 'key_1',\n            content: ['Item 2 Value', 'Item 2 Content'],\n          },\n          {\n            selected_value: (\n              <NumberFormat always_selectall ban>\n                11345678962\n              </NumberFormat>\n            ),\n            content: [\n              <NumberFormat key=\"ban\" always_selectall ban>\n                11345678962\n              </NumberFormat>,\n              'Bank account number',\n            ],\n          },\n          {\n            selected_key: 'key_2',\n            selected_value: 'Item 3 Value',\n            content: ['Item 3 Content A', 'Item 3 Content B'],\n          },\n          {\n            selected_key: 'key_3',\n            selected_value: 'Item 4 Value',\n            content: ['Item 4 Content A', <>Custom Component</>],\n          },\n        ]\n\n        return (\n          <Dropdown\n            data={data}\n            label=\"Label:\"\n            title=\"Please select a value\"\n            on_change={({ data }) => {\n              console.log('on_change', data)\n            }}\n          />\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownEllipsisOverflow = () =>\n  globalThis.IS_TEST ? (\n    <Wrapper>\n      <ComponentBox data-visual-test=\"dropdown-ellipsis\">\n        <Dropdown\n          data={['Long text that will overflow with CSS ellipsis']}\n          value={0}\n          label=\"Label:\"\n        />\n      </ComponentBox>\n    </Wrapper>\n  ) : null\n\nexport const DropdownDirections = () => {\n  const visualTestProps = (enabled: boolean): VisualTestReturn => {\n    if (!enabled) {\n      return {}\n    }\n    return {\n      opened: true,\n      prevent_close: true,\n      direction: 'top',\n    }\n  }\n  return (\n    <Wrapper>\n      <ComponentBox\n        scope={{ visualTestProps }}\n        data-visual-test=\"dropdown-item-directions\"\n      >\n        <Dropdown\n          label=\"Label:\"\n          data={[\n            ['Vertical', 'alignment'],\n            <>\n              <P modifier=\"medium\">Vertical</P>\n              <P>alignment</P>\n            </>,\n            <Dropdown.HorizontalItem key=\"item-1\">\n              <P modifier=\"medium\" right=\"x-small\">\n                Horizontal\n              </P>\n              <P>alignment</P>\n            </Dropdown.HorizontalItem>,\n          ]}\n          {...visualTestProps(\n            globalThis.IS_TEST &&\n              window.location.search.includes('item-directions')\n          )}\n        />\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport const DropdownIconLeft = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"dropdown-left-icon\">\n      <Dropdown\n        label=\"Label:\"\n        icon_position=\"left\"\n        data={data}\n        value={3}\n        skip_portal={true}\n        on_change={({ data: selectedDataItem }) => {\n          console.log('on_change', selectedDataItem)\n        }}\n        on_show={() => {\n          console.log('on_show')\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownActionMenu = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"dropdown-action_menu\">\n      <Dropdown\n        title=\"ActionMenu\"\n        action_menu={true}\n        align_dropdown=\"left\"\n        data={[\n          <>\n            <IconPrimary icon=\"check\" right />\n            Save\n          </>,\n          <>\n            <IconPrimary icon=\"download\" right />\n            Download\n          </>,\n        ]}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownTertiary = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"dropdown-tertiary\">\n      <Dropdown\n        variant=\"tertiary\"\n        independent_width={true}\n        icon_position=\"left\"\n        align_dropdown=\"left\"\n        data={data}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownMoreMenu = () => {\n  const visualTestProps = (enabled: boolean): VisualTestReturn => {\n    if (!enabled) {\n      return {}\n    }\n    return {\n      opened: true,\n      prevent_close: true,\n      independent_width: true,\n      direction: 'bottom',\n    }\n  }\n  return (\n    <Wrapper>\n      <ComponentBox\n        scope={{ visualTestProps }}\n        data-visual-test=\"dropdown-more_menu\"\n      >\n        <Dropdown\n          more_menu={true}\n          size=\"small\"\n          title=\"Choose an item\"\n          data={() => [\n            <Link href=\"/\" key=\"item-1\">\n              Go to this Link\n            </Link>,\n            'Or press on me',\n            <>Custom component</>,\n          ]}\n          right=\"small\"\n          {...visualTestProps(\n            globalThis.IS_TEST &&\n              window.location.search.includes('left-side')\n          )}\n        />\n        <Dropdown\n          prevent_selection={true}\n          align_dropdown=\"right\"\n          size=\"small\"\n          title={null}\n          aria-label=\"Choose an item\"\n          data={() => [\n            <Link href=\"/\" key=\"item-1\">\n              Go to this Link\n            </Link>,\n            'Or press on me',\n            <>Custom component</>,\n          ]}\n          right=\"small\"\n          {...visualTestProps(\n            globalThis.IS_TEST &&\n              window.location.search.includes('right-side')\n          )}\n        />\n        <Dropdown\n          more_menu={true}\n          title=\"Choose an item\"\n          data={[\n            <Link href=\"/\" key=\"item-1\">\n              Go to this Link\n            </Link>,\n            'Or press on me',\n            <>Custom component</>,\n          ]}\n          right=\"small\"\n        />\n        <Dropdown\n          prevent_selection={true}\n          align_dropdown=\"right\"\n          title={null}\n          aria-label=\"Choose an item\"\n          data={[\n            <Link href=\"/\" key=\"item-1\">\n              Go to this Link\n            </Link>,\n            'Or press on me',\n            <>Custom component</>,\n          ]}\n          on_change={({ value }) => {\n            console.log('on_change', value)\n          }}\n          on_select={({ active_item }) => {\n            console.log('on_select', active_item)\n          }}\n        />\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport const DropdownDisabled = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"dropdown-disabled\">\n      <Dropdown disabled data={['Disabled Dropdown']} label=\"Label:\" />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownDisabledTertiary = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"dropdown-disabled-tertiary\">\n      <Dropdown\n        disabled\n        variant=\"tertiary\"\n        data={['Disabled Dropdown']}\n        label=\"Disabled tertiary dropdown\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownCustomEvent = () => {\n  const visualTestProps = (enabled: boolean): VisualTestReturn => {\n    if (!enabled) {\n      return {}\n    }\n    return {\n      opened: true,\n      prevent_close: true,\n      independent_width: true,\n      skip_portal: true,\n      direction: 'bottom',\n    }\n  }\n  return (\n    <Wrapper>\n      <ComponentBox\n        scope={{ data, visualTestProps }}\n        data-visual-test=\"dropdown-action_menu-custom\"\n      >\n        {() => {\n          const CustomComponent = () => (\n            <CustomComponentInner\n              onTouchStart={preventDefault}\n              onClick={(e) => {\n                console.log('Do something different')\n                preventDefault(e)\n              }}\n            >\n              Custom event handler\n            </CustomComponentInner>\n          )\n          const CustomComponentInner = styled.span`\n            display: block;\n            width: 100%;\n            margin: -1rem -2rem -1rem -1rem;\n            padding: 1rem 2rem 1rem 1rem;\n          `\n          const preventDefault = (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n          }\n\n          return (\n            <Dropdown\n              action_menu\n              right\n              label=\"Label:\"\n              title=\"Choose an item\"\n              data={() => [\n                <Link href=\"/\" key=\"item-1\">\n                  Go to this Link\n                </Link>,\n                'Or press on me',\n                <CustomComponent key=\"item-2\" />,\n              ]}\n              on_change={({ value }) => {\n                console.log('More menu:', value)\n              }}\n              suffix={\n                <HelpButton title=\"Modal Title\">Modal content</HelpButton>\n              }\n              {...visualTestProps(\n                globalThis.IS_TEST &&\n                  window.location.search.includes('action_menu-custom')\n              )}\n            />\n          )\n        }}\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport const DropdownSizes = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"dropdown-sizes\" scope={{ data }}>\n      <FormRow direction=\"vertical\">\n        <Dropdown label=\"Label:\" size=\"default\" bottom data={() => data} />\n        <Dropdown label=\"Label:\" size=\"medium\" bottom data={() => data} />\n        <Dropdown label=\"Label:\" size=\"large\" bottom data={() => data} />\n      </FormRow>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownCustomWidth = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }}>\n      {() => {\n        const CustomWidthOne = styled(Dropdown)`\n          .dnb-dropdown__shell {\n            width: 10rem;\n          }\n        `\n        const CustomWidthTwo = styled(Dropdown)`\n          &.dnb-dropdown--is-popup .dnb-drawer-list__root {\n            width: 12rem;\n          }\n        `\n        const CustomWidthThree = styled(Dropdown)`\n          /** Change the \"__shell\" width */\n          .dnb-dropdown__shell {\n            width: 10rem;\n          }\n\n          /** Change the \"__list\" width */\n          .dnb-drawer-list__root {\n            width: 20rem;\n          }\n        `\n        const CustomWidthFour = styled(Dropdown)`\n          width: 60%;\n          min-width: 224px; /** 14rem (please use pixels on min-width!) */\n          max-width: 25rem;\n\n          /** In case we have a label */\n          .dnb-form-label + .dnb-dropdown__inner {\n            width: 100%;\n          }\n        `\n\n        return (\n          <FormRow direction=\"vertical\">\n            <CustomWidthOne\n              label=\"Label:\"\n              size=\"default\"\n              icon_position=\"left\"\n              bottom\n              data={data}\n            />\n            <CustomWidthTwo\n              label=\"Label:\"\n              size=\"small\"\n              more_menu\n              bottom\n              data={data}\n            />\n            <CustomWidthThree\n              label=\"Label:\"\n              size=\"large\"\n              align_dropdown=\"right\"\n              bottom\n              data={data}\n            />\n            <CustomWidthFour\n              title=\"Min and max width\"\n              stretch={true}\n              bottom\n              data={data}\n            />\n          </FormRow>\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownStatusVertical = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"dropdown-status-error\"\n      scope={{ data }}\n    >\n      <Dropdown\n        data={data}\n        label=\"Label:\"\n        label_direction=\"vertical\"\n        status=\"Message to the user\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DropdownListOpened = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"dropdown-list\"\n      scope={{ data }}\n      hideCode\n    >\n      <span className=\"dnb-drawer-list__list\">\n        <ul className=\"dnb-drawer-list__options\">\n          <li className=\"dnb-drawer-list__option first-of-type\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              Brukskonto - Kari Nordmann\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option dnb-drawer-list__option--selected\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat always_selectall key=\"n-1\" ban>\n                  12345678902\n                </NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Sparekonto - Ole Nordmann\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat always_selectall key=\"n-2\" ban>\n                  11345678962\n                </NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Feriekonto - Kari Nordmann med et kjempelangt etternavnsen\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option last-of-type\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat always_selectall key=\"n-3\" ban>\n                  15349648901\n                </NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Oppussing - Ole Nordmann\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__triangle\" />\n        </ul>\n      </span>\n    </ComponentBox>\n  </Wrapper>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {DropdownFind, DropdownNoValue, DropdownDirections, DropdownIconLeft, DropdownActionMenu, DropdownTertiary, DropdownMoreMenu, DropdownDisabled, DropdownCustomEvent, DropdownSizes, DropdownCustomWidth, DropdownStatusVertical, DropdownListOpened, DropdownDisabledTertiary, DropdownEllipsisOverflow} from 'Docs/uilib/components/dropdown/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default dropdown\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"No \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" is defined, but a \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" is given.\"]\n    }), \"\\n\", _jsx(DropdownNoValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown with different item content directions\"\n    }), \"\\n\", _jsx(DropdownDirections, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Icon on left side\"\n    }), \"\\n\", _jsx(DropdownIconLeft, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"ActionMenu\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The ActionMenu will change its characteristics in mobile view. It will hide the title, and the DrawerList will be placed on the bottom of the page.\"\n    }), \"\\n\", _jsx(DropdownActionMenu, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"MoreMenu\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"No lasting selection will be made.\"\n    }), \"\\n\", _jsx(DropdownMoreMenu, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown as tertiary variant\"\n    }), \"\\n\", _jsx(DropdownTertiary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom item events\"\n    }), \"\\n\", _jsx(DropdownCustomEvent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown in different sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Four sizes are available: \", _jsx(_components.code, {\n        children: \"small\"\n      }), \", \", _jsx(_components.code, {\n        children: \"default\"\n      }), \", \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      })]\n    }), \"\\n\", _jsx(DropdownSizes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom width\"\n    }), \"\\n\", _jsx(DropdownCustomWidth, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown with status\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And vertical label layout.\"\n    }), \"\\n\", _jsx(DropdownStatusVertical, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Findable list\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With long list to make it scrollable and searchable\"\n    }), \"\\n\", _jsx(DropdownFind, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled dropdown\"\n    }), \"\\n\", _jsx(DropdownDisabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled tertiary dropdown\"\n    }), \"\\n\", _jsx(DropdownDisabledTertiary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"DrawerList opened\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Only to visualize and used for visual testing\"\n    }), \"\\n\", _jsx(DropdownListOpened, {}), \"\\n\", _jsx(DropdownEllipsisOverflow, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Wrapper","data","selected_key","selected_value","content","DropdownFind","DropdownNoValue","DropdownEllipsisOverflow","globalThis","DropdownDirections","enabled","opened","prevent_close","direction","DropdownIconLeft","DropdownActionMenu","DropdownTertiary","DropdownMoreMenu","independent_width","DropdownDisabled","DropdownDisabledTertiary","DropdownCustomEvent","skip_portal","DropdownSizes","DropdownCustomWidth","DropdownStatusVertical","DropdownListOpened","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}