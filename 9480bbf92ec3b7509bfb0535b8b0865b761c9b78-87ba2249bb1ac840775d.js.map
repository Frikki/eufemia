{"version":3,"file":"9480bbf92ec3b7509bfb0535b8b0865b761c9b78-87ba2249bb1ac840775d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/demos/layout/Layout.js","webpack://dnb-design-system-portal/./src/docs/uilib/demos/eufemia-demo/form-demo-01.js"],"sourcesContent":["/**\n * LayoutWrapper is include in Layout\n * with this, LayoutWrapper is included in every page\n *\n * Info:\n * Eufemia Styles are imported in \"gatsby-browser.js\"\n * But in here we define \".dnb-core-style\"\n * With this, we could have Legacy CSS somewhere in the header or footer\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst WrapperInner = styled.div`\n  /* for large screens */\n  width: 100%; /* 84vw ~ 60rem */\n  max-width: 60rem;\n  padding: 0 1rem;\n\n  /* for small screens */\n  @media screen and (max-width: 40em) {\n    padding: 0 0.5rem;\n  }\n`\n\nconst LayoutWrapper = ({ children }) => {\n  return (\n    <Wrapper className=\"dnb-core-style\">\n      <WrapperInner>\n        {/* <header className=\"app-header\">header</header> */}\n        <main role=\"main\">{children}</main>\n        {/* <footer className=\"app-footer\">Happy Eufemia {'ðŸ–‹'}</footer> */}\n      </WrapperInner>\n    </Wrapper>\n  )\n}\nLayoutWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default LayoutWrapper\n","/**\n * This is a quick demo of a Eufemia form.\n * This demo is mainly to demonstrate the visual part,\n * but includes also some event handling to showcase error messages.\n *\n * It is divided in three parts:\n *\n * 1. Markup\n * 2. Styles\n * 3. Logic\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\n\n// App layout wrapper\nimport Layout from '../layout/Layout'\n\n// Get Eufemia in\nimport { P } from '@dnb/eufemia/src/elements'\nimport {\n  Heading,\n  FormSet,\n  FormRow,\n  Input,\n  Textarea,\n  Section,\n  StepIndicator,\n  ToggleButton,\n  Icon,\n  Button,\n  Switch,\n  Space,\n  GlobalStatus,\n} from '@dnb/eufemia/src/components'\nimport {\n  save as SaveIcon,\n  trash as TrashIcon,\n  attachment as AttachmentIcon,\n} from '@dnb/eufemia/src/icons'\n\n/** -- 1. Markup -- */\n\n// Our main component\nconst FormDemo = () => (\n  <FormLogic>\n    <Layout>\n      <Header />\n      <MainForm />\n      <Space bottom=\"medium\" />\n    </Layout>\n  </FormLogic>\n)\nexport default FormDemo\n\n// A dummy header\nconst Header = () => (\n  <>\n    <HeaderSection style_type=\"mint-green\">\n      <HeaderTitleWrapper top=\"x-large\">\n        <Heading size=\"x-large\">Card complaint</Heading>\n      </HeaderTitleWrapper>\n\n      <StepIndicator\n        current_step={0}\n        // mode=\"strict\" // The design is not ready for v2\n        data={[\n          {\n            title: 'Information about the complaint',\n          },\n          {\n            title: 'Summary',\n          },\n        ]}\n        on_change={(e) => {\n          console.log('StepIndicator.on_change', e)\n        }}\n      />\n    </HeaderSection>\n    <GlobalStatus />\n  </>\n)\n\nexport const Head = () => {\n  return <title>Eufemia - Form Demo #1</title>\n}\n\n// Main form markup\nconst MainForm = () => {\n  const {\n    currentValues,\n    setValues,\n    currentErrors,\n    resetErrors,\n    submitHandler,\n    cancelHandler,\n  } = React.useContext(FormContext)\n\n  return (\n    <FormSet vertical prevent_submit on_submit={submitHandler}>\n      <WidthLimit>\n        <Section top=\"medium\" spacing=\"x-large\" style_type=\"white\">\n          <Heading>What has happened?</Heading>\n          <Ingress>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n            enim ad minim veniam, quis nostrud exercitation.\n          </Ingress>\n\n          <ToggleButton.Group\n            value={currentValues.toggleButtonOptionsValue}\n            on_change={({ value: toggleButtonOptionsValue }) =>\n              setValues({\n                toggleButtonOptionsValue,\n              })\n            }\n          >\n            <ToggleButton text=\"Unknown transaction\" value=\"first\" />\n            <ToggleButton\n              text=\"I did not receive money from the ATM\"\n              value=\"second\"\n            />\n            <ToggleButton text=\"Goods not received\" value=\"third\" />\n            <ToggleButton text=\"Wrong goods received\" value=\"fourth\" />\n            <ToggleButton text=\"Fake goods received\" value=\"fifth\" />\n            <ToggleButton text=\"Double charged\" value=\"sixth\" />\n            <ToggleButton text=\"Wrong amount charged\" value=\"seventh\" />\n            <ToggleButton text=\"I am after charged\" value=\"eighth\" />\n          </ToggleButton.Group>\n        </Section>\n\n        <Section spacing=\"x-large\">\n          <Heading>Lorem ipsum</Heading>\n          <Ingress>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore.\n          </Ingress>\n\n          <Space top=\"small\">\n            <FormRow label=\"Did you receive some money from the ATM?\">\n              <ToggleButton.Group\n                value={currentValues.yesNoQuestionValue}\n                on_change={({ value: yesNoQuestionValue }) =>\n                  setValues({\n                    yesNoQuestionValue,\n                  })\n                }\n              >\n                <ToggleButton text=\"Yes\" value=\"yes\" />\n                <ToggleButton text=\"No\" value=\"no\" />\n              </ToggleButton.Group>\n            </FormRow>\n          </Space>\n\n          <Space top=\"medium\">\n            <FormRow>\n              <Input\n                label=\"How much money did you withdraw?\"\n                suffix=\"Kr\"\n                value={currentValues.firstInputValue}\n                on_change={({ value: firstInputValue }) =>\n                  setValues({\n                    firstInputValue,\n                  })\n                }\n              />\n            </FormRow>\n          </Space>\n\n          <Space top=\"medium\">\n            <FormRow>\n              <Input\n                label=\"How much money did you receive?\"\n                suffix=\"Kr\"\n                value={currentValues.secondInputValue}\n                on_change={({ value: secondInputValue }) =>\n                  setValues({\n                    secondInputValue,\n                  })\n                }\n              />\n            </FormRow>\n          </Space>\n\n          <Space top=\"medium\">\n            <FormRow>\n              <Textarea\n                rows=\"6\"\n                cols=\"40\"\n                label=\"Do you have additional relevant information about the case?\"\n                value={currentValues.textareaValue}\n                on_change={({ value: textareaValue }) =>\n                  setValues({\n                    textareaValue,\n                  })\n                }\n              />\n            </FormRow>\n          </Space>\n        </Section>\n\n        <Section spacing=\"x-large\" style_type=\"white\">\n          <Heading>Attachment</Heading>\n\n          <Ingress bottom=\"x-small\">\n            If you have a receipt of the ATM transaction showing that money\n            was not dispensed, then please upload the copy as this would\n            strengthen your case.\n          </Ingress>\n\n          <Attachment>\n            <Attachment.FileRow>\n              <Icon icon={AttachmentIcon} aria-hidden />\n              {' filename_01.jpg'}\n            </Attachment.FileRow>\n            <Button\n              text=\"Delete\"\n              variant=\"tertiary\"\n              icon={TrashIcon}\n              icon_position=\"left\"\n            />\n          </Attachment>\n\n          <Attachment.Add>\n            <Button\n              text=\"Upload attachment\"\n              variant=\"tertiary\"\n              icon={AttachmentIcon}\n              icon_position=\"left\"\n            />\n          </Attachment.Add>\n        </Section>\n      </WidthLimit>\n\n      <Section top=\"medium\" spacing=\"medium\">\n        <Switch\n          label=\"I hereby declare that all information given is correct and to the best of my knowledge.\"\n          label_position=\"right\"\n          checked={currentValues.switchIsChecked}\n          on_change={({ checked: switchIsChecked }) =>\n            setValues({\n              switchIsChecked,\n            })\n          }\n          on_change_end={({ checked }) => checked && resetErrors()}\n          status={currentErrors.switchErrorMessage}\n        />\n      </Section>\n\n      <DividerSection spacing=\"small\" style_type=\"divider\">\n        <Button type=\"submit\" text=\"Next\" icon=\"chevron_right\" />\n        <div>\n          <Button\n            text=\"Save\"\n            type=\"submit\" // This button is the required submit\n            variant=\"secondary\"\n            icon={SaveIcon}\n            icon_position=\"left\"\n          />\n          <Button\n            text=\"Cancel\"\n            variant=\"secondary\"\n            icon=\"close\"\n            icon_position=\"left\"\n            on_click={cancelHandler}\n          />\n        </div>\n      </DividerSection>\n    </FormSet>\n  )\n}\n\n/** -- 2. Styles -- */\n\n// Visual helper to limit the width inside of our layout\nconst WidthLimit = styled.div`\n  max-width: 42rem;\n  .dnb-input__input {\n    max-width: 10rem;\n  }\n  @media screen and (max-width: 40em) {\n    textarea {\n      width: 90vw;\n    }\n  }\n`\n\n// set the header height\nconst HeaderSection = styled(Section)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 16rem;\n`\n// center the h1 vertically\nconst HeaderTitleWrapper = styled(Space)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\n// Custom paragraph\nconst IngressRaw = styled(P)`\n  font-weight: var(--font-weight-medium);\n  color: var(--color-emerald-green);\n`\nconst Ingress = (props) => (\n  <IngressRaw top=\"x-small\" bottom=\"small\" {...props} />\n)\n\n// Attachment area\nconst Attachment = styled(Space)`\n  .dnb-button {\n    margin-left: 1rem;\n  }\n`\nAttachment.FileRow = styled.span`\n  margin-right: 0.75rem;\n  .dnb-icon {\n    margin-right: 0.5rem;\n  }\n`\nAttachment.Add = styled(Space)`\n  margin-top: 0.5rem;\n  .dnb-button {\n    margin-left: -0.5rem;\n  }\n`\n\n// The bottom section / divider has some extra CSS\nconst DividerSection = styled(Section)`\n  display: flex;\n  justify-content: space-between;\n  .dnb-button + .dnb-button {\n    margin-left: 1rem;\n  }\n  @media screen and (max-width: 30rem) {\n    display: block;\n    .dnb-button {\n      display: flex;\n      margin-top: 0.5rem;\n      & + .dnb-button {\n        margin-left: 0;\n      }\n    }\n  }\n`\n\n/** -- 3. App logic -- */\n\n// Default local states/values\nconst defaultValues = {\n  toggleButtonOptionsValue: 'second',\n  yesNoQuestionValue: 'yes',\n  firstInputValue: 2000,\n  secondInputValue: 200,\n  textareaValue:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis.',\n  switchIsChecked: false,\n}\nconst defaultErrors = {\n  switchErrorMessage: 'Sorry, this has to be checked.',\n}\n\n// Form Logic and Event handling\nconst FormContext = React.createContext({})\nconst FormLogic = (props) => {\n  const [currentValues, updateValues] = React.useState(defaultValues)\n  const [currentErrors, updateErrors] = React.useState({})\n\n  function submitHandler() {\n    // Handle error before we use the form value\n    if (handleErrors()) {\n      console.log('Show me my values:', currentValues)\n    }\n  }\n\n  function handleErrors() {\n    // simulate error\n    if (!currentValues.switchIsChecked) {\n      updateErrors(defaultErrors)\n      return false\n    } else {\n      // remove errors, in case we had some\n      resetErrors()\n    }\n\n    return true\n  }\n\n  function cancelHandler() {\n    // // remove errors, in case we had some\n    resetErrors()\n\n    // reset the values\n    updateValues(defaultValues)\n  }\n\n  const resetErrors = () => updateErrors({})\n  const setValues = (newProps) =>\n    updateValues({ ...currentValues, ...newProps })\n\n  // Our context we use for state handling\n  const formContext = {\n    currentValues,\n    updateValues,\n    currentErrors,\n    updateErrors,\n    submitHandler,\n    handleErrors,\n    cancelHandler,\n    setValues,\n    resetErrors,\n  }\n\n  return <FormContext.Provider value={formContext} {...props} />\n}\n"],"names":["Wrapper","WrapperInner","children","className","role","FormLogic","Layout","Header","MainForm","Space","bottom","HeaderSection","style_type","HeaderTitleWrapper","top","Heading","size","StepIndicator","current_step","data","title","on_change","e","console","log","GlobalStatus","Head","React","FormContext","currentValues","setValues","currentErrors","resetErrors","submitHandler","cancelHandler","FormSet","vertical","prevent_submit","on_submit","WidthLimit","Section","spacing","Ingress","ToggleButton","value","toggleButtonOptionsValue","text","FormRow","label","yesNoQuestionValue","Input","suffix","firstInputValue","secondInputValue","Textarea","rows","cols","textareaValue","Attachment","FileRow","Icon","icon","AttachmentIcon","Button","variant","TrashIcon","icon_position","Add","Switch","label_position","checked","switchIsChecked","on_change_end","status","switchErrorMessage","DividerSection","type","SaveIcon","on_click","IngressRaw","P","props","defaultValues","defaultErrors","updateValues","updateErrors","handleErrors","formContext","newProps","Provider"],"sourceRoot":""}