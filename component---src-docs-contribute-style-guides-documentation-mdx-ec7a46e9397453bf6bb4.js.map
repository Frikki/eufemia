{"version":3,"file":"component---src-docs-contribute-style-guides-documentation-mdx-ec7a46e9397453bf6bb4.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,kBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,iKACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,GAAI,CAC7BO,SAAU,oBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,qGACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYM,IAAK,CAC9BM,UAAUC,EAAAA,EAAAA,KAAKb,EAAYO,KAAM,CAC/BO,UAAW,cACXF,SAAU,6HAIjB,CAOD,UANA,SAAoBb,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EACzB,C","sources":["webpack://dnb-design-system-portal/./src/docs/contribute/style-guides/documentation.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Documentation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The documentation is written in enhanced Markdown, called MDX. It allows us to import other Markdown files along with React components and JavaScript logic.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Handling themes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you need to show some documentation only for when a certain theme is selected, you can do so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-md\",\n        children: \"<VisibilityByTheme visible=\\\"eiendom\\\">\\n\\n## Eiendom examples\\n\\nText\\n\\n<SpecialExample />\\n\\n</VisibilityByTheme>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","pre","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}