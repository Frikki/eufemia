"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[6124],{48145:function(e,n,t){t.r(n);var i=t(52322),d=t(45392);function s(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,d.ah)(),e.components);return(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Properties"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"variant"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The dialog variant. Can either be ",(0,i.jsx)(n.code,{children:"information"})," or ",(0,i.jsx)(n.code,{children:"confirmation"}),". Defaults to ",(0,i.jsx)(n.code,{children:"information"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"title"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The dialog title. Displays on the very top of the content."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"minWidth"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The minimum Dialog content width, defined by a CSS width value like ",(0,i.jsx)(n.code,{children:"50vw"})," (50% of the viewport). Be careful on using fixed ",(0,i.jsx)(n.code,{children:"minWidth"})," so you don't break responsiveness. Defaults to ",(0,i.jsx)(n.code,{children:"30rem"})," (average width is set to ",(0,i.jsx)(n.code,{children:"60vw"}),")."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"maxWidth"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The maximum Dialog content width, defined by a CSS width value like ",(0,i.jsx)(n.code,{children:"20rem"}),". Defaults to ",(0,i.jsx)(n.code,{children:"60rem"})," (average width is set to ",(0,i.jsx)(n.code,{children:"60vw"}),")."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," Give the Dialog content a class name (maps to ",(0,i.jsx)(n.code,{children:"dnb-dialog"}),")."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"spacing"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," If set to ",(0,i.jsx)(n.code,{children:"false"})," then the dialog content will be shown without any spacing. Defaults to ",(0,i.jsx)(n.code,{children:"true"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"preventCoreStyle"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," By default the dialog content gets added the core style class ",(0,i.jsx)(n.code,{children:"dnb-core-style"}),". Use ",(0,i.jsx)(n.code,{children:"false"})," to disable this behavior."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"navContent"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The content which will appear in the navigation, above the header, and side-by-side the close button."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"headerContent"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The content which will appear in the header of the dialog."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"modalContent"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," The content which will appear when triggering the dialog."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"description"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," A description will be positioned below the title, but before the content. Used for Dialog variant ",(0,i.jsx)(n.code,{children:"confirmation"})," to further describe what the actions will do."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"alignContent"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," Define the inner horizontal alignment of the content. Can be set to ",(0,i.jsx)(n.code,{children:"left"}),", ",(0,i.jsx)(n.code,{children:"center"}),", ",(0,i.jsx)(n.code,{children:"right"})," and ",(0,i.jsx)(n.code,{children:"centered"}),". If ",(0,i.jsx)(n.code,{children:"centered"}),", then the content will also be centered vertically. Defaults to ",(0,i.jsx)(n.code,{children:"left"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"fullscreen"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," If set to ",(0,i.jsx)(n.code,{children:"true"})," then the dialog content will be shown as fullscreen, without showing the original content behind. Can be set to ",(0,i.jsx)(n.code,{children:"false"})," to omit the auto fullscreen. Defaults to ",(0,i.jsx)(n.code,{children:"auto"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"icon"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," An icon to display at the top of the component. Should be of size medium, so make sure you import the ",(0,i.jsx)(n.code,{children:"_medium"})," version of the Eufemia icon."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"confirmType"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," For variant confirmation, the dialog is either an informational (",(0,i.jsx)(n.code,{children:"info"}),") or a warning (",(0,i.jsx)(n.code,{children:"warning"}),") message. Defaults to 'info'."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"declineText"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," For dialog actions, give a custom text for the decline button."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"confirmText"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," For dialog actions, give a custom text for the confirmation button."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hideDecline"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," For variant confirmation, hide the default decline button and only show the confirmation button."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hideConfirm"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," For variant confirmation, hide the default confirm button and only show the decline button."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scrollRef"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," To get the scroll Element, pass in your own React ref."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"contentRef"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(optional)"})," To get the inner content Element, pass in your own React ref."]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-dialog-prop-table-mdx-21fece1223648ba4d017.js.map