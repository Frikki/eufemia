"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[4645],{55980:function(e,t,n){n.r(t);var d=n(52322),s=n(45392);function i(e){const t=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,s.ah)(),e.components);return(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Properties"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"containerPlacement"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," Defines on what side the Drawer should be opened. Can be set to ",(0,d.jsx)(t.code,{children:"left"}),", ",(0,d.jsx)(t.code,{children:"right"}),", ",(0,d.jsx)(t.code,{children:"top"})," and ",(0,d.jsx)(t.code,{children:"bottom"}),". Defaults to ",(0,d.jsx)(t.code,{children:"right"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"title"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The drawer title. Displays on the very top of the content."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"minWidth"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The minimum Drawer content width, defined by a CSS width value like ",(0,d.jsx)(t.code,{children:"50vw"})," (50% of the viewport). Be careful on using fixed ",(0,d.jsx)(t.code,{children:"minWidth"})," so you don't break responsiveness. Defaults to ",(0,d.jsx)(t.code,{children:"30rem"})," (average width is set to ",(0,d.jsx)(t.code,{children:"60vw"}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"maxWidth"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The maximum Drawer content width, defined by a CSS width value like ",(0,d.jsx)(t.code,{children:"20rem"}),". Defaults to ",(0,d.jsx)(t.code,{children:"60rem"})," (average width is set to ",(0,d.jsx)(t.code,{children:"60vw"}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"className"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," Give the Drawer content a class name (maps to ",(0,d.jsx)(t.code,{children:"dnb-drawer"}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spacing"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," If set to ",(0,d.jsx)(t.code,{children:"false"})," then the drawer content will be shown without any spacing. Defaults to ",(0,d.jsx)(t.code,{children:"true"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"preventCoreStyle"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," By default the drawer content gets added the core style class ",(0,d.jsx)(t.code,{children:"dnb-core-style"}),". Use ",(0,d.jsx)(t.code,{children:"false"})," to disable this behavior."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"navContent"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The content which will appear in the navigation, above the header, and side-by-side the close button."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"headerContent"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The content which will appear in the header of the drawer."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"modalContent"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," The content which will appear when triggering the drawer."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"alignContent"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," Define the inner horizontal alignment of the content. Can be set to ",(0,d.jsx)(t.code,{children:"left"}),", ",(0,d.jsx)(t.code,{children:"center"}),", ",(0,d.jsx)(t.code,{children:"right"})," and ",(0,d.jsx)(t.code,{children:"centered"}),". If ",(0,d.jsx)(t.code,{children:"centered"}),", then the content will also be centered vertically. Defaults to ",(0,d.jsx)(t.code,{children:"left"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"fullscreen"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.em,{children:"(optional)"})," If set to ",(0,d.jsx)(t.code,{children:"true"})," then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to ",(0,d.jsx)(t.code,{children:"false"})," to omit the auto fullscreen. Defaults to ",(0,d.jsx)(t.code,{children:"auto"}),"."]})]})]})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,d.jsx)(t,Object.assign({},e,{children:(0,d.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-drawer-prop-table-mdx-d64f1e7721c363a13a08.js.map