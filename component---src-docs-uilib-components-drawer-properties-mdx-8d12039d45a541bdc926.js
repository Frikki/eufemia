"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[8776,4645,6575],{55980:function(e,n,s){s.r(n);var t=s(52322),d=s(45392);function i(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,d.ah)(),e.components);return(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Properties"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"containerPlacement"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Defines on what side the Drawer should be opened. Can be set to ",(0,t.jsx)(n.code,{children:"left"}),", ",(0,t.jsx)(n.code,{children:"right"}),", ",(0,t.jsx)(n.code,{children:"top"})," and ",(0,t.jsx)(n.code,{children:"bottom"}),". Defaults to ",(0,t.jsx)(n.code,{children:"right"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"title"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The drawer title. Displays on the very top of the content."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"minWidth"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The minimum Drawer content width, defined by a CSS width value like ",(0,t.jsx)(n.code,{children:"50vw"})," (50% of the viewport). Be careful on using fixed ",(0,t.jsx)(n.code,{children:"minWidth"})," so you don't break responsiveness. Defaults to ",(0,t.jsx)(n.code,{children:"30rem"})," (average width is set to ",(0,t.jsx)(n.code,{children:"60vw"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"maxWidth"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The maximum Drawer content width, defined by a CSS width value like ",(0,t.jsx)(n.code,{children:"20rem"}),". Defaults to ",(0,t.jsx)(n.code,{children:"60rem"})," (average width is set to ",(0,t.jsx)(n.code,{children:"60vw"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Give the Drawer content a class name (maps to ",(0,t.jsx)(n.code,{children:"dnb-drawer"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"spacing"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," If set to ",(0,t.jsx)(n.code,{children:"false"})," then the drawer content will be shown without any spacing. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"preventCoreStyle"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," By default the drawer content gets added the core style class ",(0,t.jsx)(n.code,{children:"dnb-core-style"}),". Use ",(0,t.jsx)(n.code,{children:"false"})," to disable this behavior."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"navContent"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The content which will appear in the navigation, above the header, and side-by-side the close button."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"headerContent"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The content which will appear in the header of the drawer."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"modalContent"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The content which will appear when triggering the drawer."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"alignContent"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Define the inner horizontal alignment of the content. Can be set to ",(0,t.jsx)(n.code,{children:"left"}),", ",(0,t.jsx)(n.code,{children:"center"}),", ",(0,t.jsx)(n.code,{children:"right"})," and ",(0,t.jsx)(n.code,{children:"centered"}),". If ",(0,t.jsx)(n.code,{children:"centered"}),", then the content will also be centered vertically. Defaults to ",(0,t.jsx)(n.code,{children:"left"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fullscreen"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," If set to ",(0,t.jsx)(n.code,{children:"true"})," then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to ",(0,t.jsx)(n.code,{children:"false"})," to omit the auto fullscreen. Defaults to ",(0,t.jsx)(n.code,{children:"auto"}),"."]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}},42566:function(e,n,s){s.r(n);var t=s(52322),d=s(45392),i=s(55980),c=s(69554);function r(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",pre:"pre",code:"code"},(0,d.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:"Properties"}),"\n",(0,t.jsx)(i.default,{}),"\n",(0,t.jsx)(n.h3,{children:"More props"}),"\n",(0,t.jsxs)(n.p,{children:["The properties of ",(0,t.jsx)(n.a,{href:"/uilib/components/modal",children:"Modal"})," are also provided."]}),"\n",(0,t.jsx)(c.default,{}),"\n",(0,t.jsx)(n.h3,{children:"Drawer sizes"}),"\n",(0,t.jsx)(n.p,{children:"The Drawer is responsive with the following properties:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"--drawer-width: 40vw;\n--drawer-min-width: 25rem;\n--drawer-max-width: 40rem;\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},69554:function(e,n,s){s.r(n);var t=s(52322),d=s(45392);function i(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a"},(0,d.ah)(),e.components);return(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Properties"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"id"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The id used internal for the trigger button and Modal component."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"rootId"})," / ",(0,t.jsx)(n.code,{children:"root_id"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The id used internal in the modal root element. Defaults to ",(0,t.jsx)(n.code,{children:"root"}),", so the element id will be ",(0,t.jsx)(n.code,{children:"dnb-modal-root"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"contentId"})," / ",(0,t.jsx)(n.code,{children:"content_id"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal content."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"labelledBy"})," / ",(0,t.jsx)(n.code,{children:"labelled_by"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The ID of the trigger component, describing the modal content. Defaults to the internal ",(0,t.jsx)(n.code,{children:"trigger"}),", so make sure you define the ",(0,t.jsx)(n.code,{children:"title"})," in ",(0,t.jsx)(n.code,{children:"triggerAttributes"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"children"})," or ",(0,t.jsx)(n.code,{children:"function"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," the content which will appear when triggering open the modal. If a function is given, you get a close method ",(0,t.jsx)(n.code,{children:"() => ({ close })"})," in the arguments."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fullscreen"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," If set to ",(0,t.jsx)(n.code,{children:"true"})," then the modal content will be shown as fullscreen, without showing the original content behind. Can be set to ",(0,t.jsx)(n.code,{children:"false"})," to omit the auto fullscreen. Defaults to ",(0,t.jsx)(n.code,{children:"auto"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"openState"})," / ",(0,t.jsx)(n.code,{children:"open_state"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," use this prop to control the open/close state by setting either: ",(0,t.jsx)(n.code,{children:"opened"})," / ",(0,t.jsx)(n.code,{children:"closed"})," or ",(0,t.jsx)(n.code,{children:"true"})," / ",(0,t.jsx)(n.code,{children:"false"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"openDelay"})," / ",(0,t.jsx)(n.code,{children:"open_delay"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," forces the modal to delay the opening. The delay is given in ",(0,t.jsx)(n.code,{children:"ms"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Will disable the trigger button."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"noAnimation"})," / ",(0,t.jsx)(n.code,{children:"no_animation"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," if set to ",(0,t.jsx)(n.code,{children:"true"}),", no open/close animation will be shown. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"noAnimationOnMobile"})," / ",(0,t.jsx)(n.code,{children:"no_animation_on_mobile"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," same as ",(0,t.jsx)(n.code,{children:"noAnimation"}),", but gets triggered only if the viewport width is less than ",(0,t.jsx)(n.code,{children:"40em"}),". Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"animationDuration"})," / ",(0,t.jsx)(n.code,{children:"animation_duration"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Duration of animation open/close in ms. Defaults to 300ms."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"preventClose"})," / ",(0,t.jsx)(n.code,{children:"prevent_close"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," if set to ",(0,t.jsx)(n.code,{children:"true"})," (boolean or string), then the user can't close the modal."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"preventOverlayClose"})," / ",(0,t.jsx)(n.code,{children:"prevent_overlay_close"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Disable clicking the background overlay to close the modal. PS! Pressing ",(0,t.jsx)(n.code,{children:"esc"})," key will still close the modal."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"openModal"})," / ",(0,t.jsx)(n.code,{children:"open_modal"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," set a function to call the callback function, once the modal should open: ",(0,t.jsx)(n.code,{children:"open_modal={(open) => open()}"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"closeModal"})," / ",(0,t.jsx)(n.code,{children:"close_modal"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," set a function to call the callback function, once the modal should close: ",(0,t.jsx)(n.code,{children:"close_modal={(close) => close()}"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"focusSelector"})," / ",(0,t.jsx)(n.code,{children:"focus_selector"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The Modal handles the first focus – automatically. However, you can define a custom focus selector the will be used instead ",(0,t.jsx)(n.code,{children:'focusSelector=".css-selector"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"overlayClass"})," / ",(0,t.jsx)(n.code,{children:"overlay_class"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," give the page overlay a custom class name (maps to ",(0,t.jsx)(n.code,{children:"dnb-modal__overlay"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"contentClass"})," / ",(0,t.jsx)(n.code,{children:"content_class"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," give the content wrapper a custom class name (maps to ",(0,t.jsx)(n.code,{children:"dnb-modal__content"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"omitTriggerButton"})," / ",(0,t.jsx)(n.code,{children:"omit_trigger_button"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," omits default showing trigger button."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trigger"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," provide a custom trigger component. Like ",(0,t.jsx)(n.code,{children:'trigger={<Anchor href="/" />}'}),". It will set the focus on it when the modal gets closed."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"triggerAttributes"})," / ",(0,t.jsx)(n.code,{children:"trigger_attributes"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," send along with custom HTML attributes or properties to the trigger button."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"dialogTitle"})," / ",(0,t.jsx)(n.code,{children:"dialog_title"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," The aria label of the dialog when no labelled_by and no title is given. Defaults to ",(0,t.jsx)(n.code,{children:"Vindu"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"directDomReturn"})," / ",(0,t.jsx)(n.code,{children:"direct_dom_return"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," If true, the modal will not open in a new DOM but directly in current DOM. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),". Be aware of the side effects of setting this property to ",(0,t.jsx)(n.code,{children:"true"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"bypassInvalidationSelectors"})," / ",(0,t.jsx)(n.code,{children:"bypass_invalidation_selectors"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," Define an array with HTML class selectors (",(0,t.jsx)(n.code,{children:"['.element-selector']"}),") which should not get invalidated when the modal opens/closes. Use this in order to let some parts of your site still be accessible by screen readers."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"scrollRef"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," To get the scroll Element, pass in your own React ref."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"contentRef"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," To get the inner content Element, pass in your own React ref."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/uilib/components/space/properties",children:"Space"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," spacing properties like ",(0,t.jsx)(n.code,{children:"top"})," or ",(0,t.jsx)(n.code,{children:"bottom"})," are supported."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"spacing"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(deprecated/optional)"})," if set to ",(0,t.jsx)(n.code,{children:"false"})," then the modal content will be shown without any spacing. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"closeTitle"})," / ",(0,t.jsx)(n.code,{children:"close_title"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(deprecated/optional)"})," the title of the close button. Defaults to ",(0,t.jsx)(n.em,{children:"Lukk"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"hideCloseButton"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(deprecated/optional)"})," if true, the close button will not be shown."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"class"})," or ",(0,t.jsx)(n.code,{children:"className"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(deprecated/optional)"})," give the inner content wrapper a class name (maps to ",(0,t.jsx)(n.code,{children:"dnb-modal__content__inner"}),")."]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-drawer-properties-mdx-8d12039d45a541bdc926.js.map