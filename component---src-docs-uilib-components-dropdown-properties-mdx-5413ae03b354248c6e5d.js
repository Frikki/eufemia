"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[85535],{51085:function(e,t,n){n.r(t);var s=n(52322),d=n(45392),i=n(58890);function r(e){const t=Object.assign({h2:"h2",p:"p",a:"a",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",pre:"pre"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{children:"Properties"}),"\n",(0,s.jsxs)(t.p,{children:["You may check out the ",(0,s.jsx)(t.a,{href:"#drawerlist-properties",children:"DrawerList Properties"})," down below as well as the ",(0,s.jsx)(t.a,{href:"#data-structure",children:"Data structure examples"}),"."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Properties"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"title"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," give a title to let the users know what they have to do. Defaults to ",(0,s.jsx)(t.code,{children:"Valgmeny"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"variant"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," defines the kind of dropdown. Possible values are ",(0,s.jsx)(t.code,{children:"primary"}),", ",(0,s.jsx)(t.code,{children:"secondary"}),", ",(0,s.jsx)(t.code,{children:"tertiary"})," and ",(0,s.jsx)(t.code,{children:"signal"}),". Defaults to ",(0,s.jsx)(t.code,{children:"secondary"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"icon"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," icon to be included in the dropdown."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"icon_size"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," change the size of the icon pragmatically."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"icon_position"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," position of the icon inside the dropdown. Set to ",(0,s.jsx)(t.code,{children:"left"})," or ",(0,s.jsx)(t.code,{children:"right"}),". Defaults to ",(0,s.jsx)(t.code,{children:"right"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"triangle_position"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," position of arrow / triangle of the drawer. Set to ",(0,s.jsx)(t.code,{children:"left"})," or ",(0,s.jsx)(t.code,{children:"right"}),". Defaults to ",(0,s.jsx)(t.code,{children:"right"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"size"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," define the height of the Dropdown. Can be set to ",(0,s.jsx)(t.code,{children:"small"}),", ",(0,s.jsx)(t.code,{children:"default"}),", ",(0,s.jsx)(t.code,{children:"medium"})," and ",(0,s.jsx)(t.code,{children:"large"}),". Defaults to ",(0,s.jsx)(t.code,{children:"default"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"opened"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", the Dropdown will be rendered initially with a visible and accessible data list / options."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"open_on_focus"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", the Dropdown will be opened when the users enter the trigger button with a focus action."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"prevent_selection"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", no permanent selection will be made. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"action_menu"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," same as ",(0,s.jsx)(t.code,{children:"prevent_selection"}),", but the DrawerList will be opened from the bottom of the page for mobile devices. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"more_menu"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," same as ",(0,s.jsx)(t.code,{children:"prevent_selection"}),', but the "selection area" (given title) will not be visible and the icon ',(0,s.jsx)(t.code,{children:"more"})," (three dots) is used. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"align_dropdown"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," use ",(0,s.jsx)(t.code,{children:"right"})," to change the options alignment direction. Makes only sense to use in combination with ",(0,s.jsx)(t.code,{children:"prevent_selection"})," or ",(0,s.jsx)(t.code,{children:"more_menu"}),". Defaults to ",(0,s.jsx)(t.code,{children:"left"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"independent_width"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," If set to ",(0,s.jsx)(t.code,{children:"true"}),", the Dropdown will handle it's width independent to the content width. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"skip_portal"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," set to ",(0,s.jsx)(t.code,{children:"true"})," to disable the React Portal behavior. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"stretch"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", then the dropdown will be 100% in available ",(0,s.jsx)(t.code,{children:"width"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"status"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," text with a status message. The style defaults to an error message. You can use ",(0,s.jsx)(t.code,{children:"true"})," to only get the status color, without a message."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"status_state"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," defines the state of the status. Currently, there are two statuses ",(0,s.jsx)(t.code,{children:"[error, info]"}),". Defaults to ",(0,s.jsx)(t.code,{children:"error"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"status_props"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," use an object to define additional FormStatus properties."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"globalStatus"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," the ",(0,s.jsx)(t.a,{href:"/uilib/components/global-status/properties/#configuration-object",children:"configuration"})," used for the target ",(0,s.jsx)(t.a,{href:"/uilib/components/global-status",children:"GlobalStatus"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"label"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," prepends the Form Label component. If no ID is provided, a random ID is created."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"label_direction"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," use ",(0,s.jsx)(t.code,{children:'label_direction="vertical"'})," to change the label layout direction. Defaults to ",(0,s.jsx)(t.code,{children:"horizontal"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"label_sr_only"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," use ",(0,s.jsx)(t.code,{children:"true"})," to make the label only readable by screen readers."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"suffix"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," text describing the content of the Dropdown more than the label. You can also send in a React component, so it gets wrapped inside the Dropdown component."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"trigger_element"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," lets you provide a custom React element as the trigger HTML element."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"skeleton"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", an overlaying skeleton with animation will be shown."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/uilib/components/fragments/drawer-list/properties",children:"DrawerList"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," all DrawerList properties."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/uilib/components/space/properties",children:"Space"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," spacing properties like ",(0,s.jsx)(t.code,{children:"top"})," or ",(0,s.jsx)(t.code,{children:"bottom"})," are supported."]})]})]})]}),"\n",(0,s.jsx)(i.default,{}),"\n",(0,s.jsx)(t.h2,{children:"Data structure"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// 1. as array\nconst data = [\n  // Every data item can, beside \"content\" - contain what ever\n  {\n    // (optional) can be what ever\n    selected_key: 'key_0',\n\n    // (optional) is show instead of \"content\", once selected\n    selected_value: 'Item 1 Value',\n    suffix_value: 'Addition 1',\n\n    // Item content as a string or array\n    content: 'Item 1 Content',\n  },\n\n  // more items ...\n  {\n    selected_key: 'key_1',\n    content: ['Item 2 Value', 'Item 2 Content'],\n  },\n  {\n    selected_key: 'key_2',\n    selected_value: 'Item 3 Value',\n    suffix_value: 'Addition 3',\n    content: ['Item 3 Content A', 'Item 3 Content B'],\n  },\n  {\n    selected_key: 'key_3',\n    selected_value: 'Item 4 Value',\n    suffix_value: 'Addition 4',\n    content: ['Item 4 Content A', <>Custom Component</>],\n  },\n]\n\n// 2. as object\nconst data = {\n  a: 'A',\n  b: 'B',\n}\n"})})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-dropdown-properties-mdx-5413ae03b354248c6e5d.js.map