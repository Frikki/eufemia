"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[32503],{24765:function(e,n,s){s.r(n);var o=s(52322),r=s(45392),i=s(48802);function c(e){const n=Object.assign({h2:"h2",p:"p",h3:"h3",code:"code",a:"a",ul:"ul",li:"li",strong:"strong"},(0,r.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"The FormRow component is a helper to more easily achieve often used DNB form layout setups."}),"\n",(0,o.jsx)(n.h3,{children:"Fieldset and Legend"}),"\n",(0,o.jsxs)(n.p,{children:["By default a ",(0,o.jsx)(n.code,{children:"FormRow"})," is using the ",(0,o.jsx)(n.code,{children:"<fieldset>"})," and ",(0,o.jsx)(n.code,{children:"<legend>"})," HTML elements - if a label property is provided."]}),"\n",(0,o.jsx)(n.h2,{children:"Layout direction"}),"\n",(0,o.jsxs)(n.p,{children:["The default direction is ",(0,o.jsx)(n.code,{children:"horizontal"}),".\nYou can combine several FormRow's (example below) and the direction to achieve the wanted UX layout. You can also send the layout properties along from a ",(0,o.jsx)(n.a,{href:"/uilib/components/form-set",children:"FormSet"})," (example below).\nThere are three possible layout properties for the FormRow children:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"label_direction"})," Children's label direction"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"direction"})," Children components direction"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"vertical"})," Forces both to be vertically"]}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{children:["The property: ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"label_direction"})})]}),"\n",(0,o.jsx)(i.lt,{}),"\n",(0,o.jsxs)(n.h3,{children:["The property: ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"direction"})})]}),"\n",(0,o.jsx)(i.cG,{}),"\n",(0,o.jsxs)(n.h3,{children:["The property: ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"vertical"})})]}),"\n",(0,o.jsx)(i.I8,{}),"\n",(0,o.jsx)(n.h3,{children:"Default"}),"\n",(0,o.jsx)(n.p,{children:"This is how it looks if you don't make any definitions."}),"\n",(0,o.jsx)(i.e,{}),"\n",(0,o.jsx)(n.h2,{children:"Spacing"}),"\n",(0,o.jsxs)(n.p,{children:["To give a FormRow space, properties from ",(0,o.jsx)(n.a,{href:"/uilib/components/space/properties",children:"Space"})," are supported:"]}),"\n",(0,o.jsx)(i.QP,{}),"\n",(0,o.jsx)(n.h2,{children:"Provider"}),"\n",(0,o.jsxs)(n.p,{children:["You can send down the ",(0,o.jsx)(n.code,{children:"FormRow"})," as an application-wide property (Context). More info about the ",(0,o.jsx)(n.a,{href:"/uilib/components/form-row/provider",children:"provider usage"}),"."]}),"\n",(0,o.jsx)(n.h2,{children:"Responsiveness"}),"\n",(0,o.jsxs)(n.p,{children:["The FormRow component provides by default responsiveness.\nBut if you also want the form components to be responsive. E.g. the label of the input should be wrapped to be vertical / above the input, then you have to set the ",(0,o.jsx)(n.code,{children:"responsive"})," prop to ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(i.C2,{}),"\n",(0,o.jsxs)(n.p,{children:["Wrapping happens then if the viewport (screen) is less than ",(0,o.jsx)(n.code,{children:"max-width: 40em"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["You can also make use of the ",(0,o.jsx)(n.a,{href:"/uilib/helpers",children:"helper class"}),", e.g. ",(0,o.jsx)(n.code,{children:'<FormRow className="dnb-responsive-component">...</FormRow>'}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-form-row-info-mdx-6e31470505e838ec0a6f.js.map