{"version":3,"file":"component---src-docs-uilib-components-icon-visual-tests-mdx-4cd81c1fab66e7d51f4c.js","mappings":"uLAIA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,GAAe,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,GAAY,CAAC,GAAI,MAAMF,EAAAA,EAAAA,KAAKG,EAAAA,GAAc,CAAC,KAE7F,CAOD,UANA,SAAoBP,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOJ,GAAYL,EAAAA,EAAAA,KAAKK,EAAWC,OAAOC,OAAO,CAAC,EAAGX,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACP,C,kSCIM,MAAMe,EAAc,4DAC3B,KAD2B,IAE3B,WAF2B,cAG3B,6KASaC,EAAa,2DAC1B,KAD0B,IAE1B,WAF0B,cAG1B,2UAiBaC,EAAmB,kEAChC,KADgC,IAEhC,WAFgC,cAGhC,sIASaV,EAAa,IACnBW,WAAL,SAIA,sDACF,KADE,IAEF,WAFE,cAGF,8TANW,KAiBEZ,EAAgB,IACtBY,WAAL,SAIA,yDACF,KADE,IAEF,WAFE,KAGF,YAHE,SAGF,2gBANW,KAuCEC,EAAkB,IACxBD,WAAL,SAIA,2DACF,eADE,IAEF,mBAFE,GAGF,YAHE,SAGF,0VANW,KAiCEE,EAAoB,IAC1BF,WAAL,SAIA,6DACF,eADE,IAEF,qBAFE,GAGF,YAHE,SAGF,sgBANW,KAuCEG,EAAa,KACxB,sDACF,WADE,cAEF,yNAWO,SAASb,IACd,OACE,iCACE,WADF,KAEE,WAHJ,MAMD,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/icon/visual-tests.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/icon/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {IconAlignment, IconMedium, AllIconsTest} from 'Docs/uilib/components/icon/Examples';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(IconAlignment, {}), \"\\n\", _jsx(IconMedium, {}), \"\\n\", _jsx(AllIconsTest, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  bell_medium as BellMedium,\n  bell as Bell,\n} from '@dnb/eufemia/src/icons'\nimport * as PrimaryIconsMedium from '@dnb/eufemia/src/icons/dnb/primary_icons_medium'\nimport * as SecondaryIconsMedium from '@dnb/eufemia/src/icons/dnb/secondary_icons_medium'\nimport { getListOfIcons } from '../../../../shared/parts/icons/ListAllIcons'\n\nimport { Icon, P, H2, IconPrimary, Button } from '@dnb/eufemia/src'\nimport styled from '@emotion/styled'\n\nexport const IconDefault = () => (\n  <ComponentBox\n    data-visual-test=\"icon-default\"\n    scope={{ Bell, BellMedium }}\n  >\n    <Icon icon={Bell} title=\"Give Icons a Title, or ...\" />\n    <Icon icon={BellMedium} aria-hidden />\n    <Bell title=\"I'm not responsive!\" />\n    {/* <- Not responsive! */}\n  </ComponentBox>\n)\n\nexport const IconBorder = () => (\n  <ComponentBox\n    data-visual-test=\"icon-border\"\n    scope={{ Bell, BellMedium }}\n  >\n    <P>\n      <Icon border={true} icon={Bell} right />\n      <Icon border={true} icon={BellMedium} size=\"medium\" right />\n      <IconPrimary border={true} icon={'information'} right />\n      <IconPrimary\n        border={true}\n        icon={'information'}\n        size=\"medium\"\n        right\n      />\n      <Button icon={<IconPrimary icon=\"add\" border />} text=\"Button\" />\n    </P>\n  </ComponentBox>\n)\n\nexport const IconInheritSized = () => (\n  <ComponentBox\n    data-visual-test=\"icon-inherit-sized\"\n    scope={{ Bell, BellMedium }}\n  >\n    <h1 className=\"dnb-h--xx-large\">\n      h1 with auto sized <Icon icon={BellMedium} size=\"auto\" aria-hidden />{' '}\n      icon\n    </h1>\n  </ComponentBox>\n)\n\nexport const IconMedium = () => {\n  if (!globalThis.IS_TEST) {\n    return null\n  }\n\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-medium\"\n      scope={{ Bell, BellMedium }}\n    >\n      <Icon icon={BellMedium} size=\"16\" title=\"force default size\" />\n      <Icon icon={BellMedium} title=\"is medium anyway\" />\n      <Icon icon={Bell} size=\"medium\" title=\"force medium size\" />\n      <Icon icon={Bell} size=\"24\" title=\"custom size: size=24\" />\n      <Icon icon={Bell} width=\"24\" height=\"24\" title=\"not responsive\" />\n    </ComponentBox>\n  )\n}\n\nexport const IconAlignment = () => {\n  if (!globalThis.IS_TEST) {\n    return null\n  }\n\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-alignment\"\n      scope={{ Bell, BellMedium }}\n    >\n      {() => {\n        const ColoredP = styled(P)`\n          display: inline-block;\n          background-color: yellowgreen;\n        `\n        const ColoredH = styled(H2)`\n          display: inline-block;\n          margin: 0 0 0.5rem 0 !important;\n          background-color: yellowgreen;\n        `\n        const ColoredIcon = styled(Icon)`\n          background-color: yellow;\n        `\n        return (\n          <div className=\"dnb-core-style\">\n            <ColoredH>\n              <ColoredIcon icon={Bell} />\n              Text\n            </ColoredH>\n            <br />\n            <ColoredP>\n              <ColoredIcon icon={Bell} />\n              Text\n            </ColoredP>\n          </div>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AllPrimaryIcons = () => {\n  if (!globalThis.IS_TEST) {\n    return null\n  }\n\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-all-primary\"\n      scope={{ getListOfIcons, PrimaryIconsMedium }}\n    >\n      {() => {\n        const Icons = () => (\n          <>\n            {getListOfIcons(PrimaryIconsMedium).map(\n              ({ iconName, Svg }) => {\n                return (\n                  <Icon\n                    title={iconName}\n                    key={iconName}\n                    icon={Svg}\n                    size=\"medium\"\n                    right=\"small\"\n                    bottom=\"small\"\n                  />\n                )\n              }\n            )}\n          </>\n        )\n        return <Icons />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AllSecondaryIcons = () => {\n  if (!globalThis.IS_TEST) {\n    return null\n  }\n\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-all-secondary\"\n      scope={{ getListOfIcons, SecondaryIconsMedium }}\n    >\n      {() => {\n        const uniqueList = {}\n        const Icons = () => (\n          <>\n            {getListOfIcons(SecondaryIconsMedium).map(\n              ({ iconName, Svg }) => {\n                if (uniqueList[iconName]) {\n                  console.warn('The icon is already used:', iconName, Svg)\n                }\n                uniqueList[iconName] = true\n\n                return (\n                  <Icon\n                    title={iconName}\n                    key={iconName}\n                    icon={Svg}\n                    size=\"medium\"\n                    right=\"small\"\n                    bottom=\"small\"\n                  />\n                )\n              }\n            )}\n          </>\n        )\n        return <Icons />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const IconColors = () => {\n  return (\n    <ComponentBox data-visual-test=\"icon-colors\" scope={{ BellMedium }}>\n      <Icon\n        icon={BellMedium}\n        color=\"var(--color-fire-red)\"\n        title=\"CSS variable\"\n      />\n      <Icon icon={BellMedium} color=\"#DC2A2A\" title=\"Hex\" />\n      <Icon icon={BellMedium} color=\"rgb(220,42,42)\" title=\"RGB\" />\n    </ComponentBox>\n  )\n}\n\nexport function AllIconsTest() {\n  return (\n    <>\n      <AllPrimaryIcons />\n      <AllSecondaryIcons />\n    </>\n  )\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","IconAlignment","IconMedium","AllIconsTest","wrapper","MDXLayout","Object","assign","_provideComponents","components","IconDefault","IconBorder","IconInheritSized","globalThis","AllPrimaryIcons","AllSecondaryIcons","IconColors"],"sourceRoot":""}