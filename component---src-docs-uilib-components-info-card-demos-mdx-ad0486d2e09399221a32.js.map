{"version":3,"file":"component---src-docs-uilib-components-info-card-demos-mdx-ad0486d2e09399221a32.js","mappings":"wOAUO,MAAMA,EAAgB,0MAMhBC,EAAgB,gPAShBC,EAAkB,4ZAiBlBC,EAA0B,ibAkB1BC,EAAuB,+UAavBC,EAAsB,0UAatBC,EAAqB,0BAClC,KADkC,KAElC,2CAFkC,SAElC,8LAQaC,EAAmB,sQAUnBC,EAAsB,uUAWtBC,EAA8B,mWCjH3C,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9BO,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAC7BM,SAAU,uBACR,MAAMC,EAAAA,EAAAA,KAAKvB,EAAe,CAAC,GAAI,MAAMuB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAC5DM,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKtB,EAAe,CAAC,GAAI,MAAMsB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAC5DM,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKrB,EAAiB,CAAC,GAAI,MAAMqB,EAAAA,EAAAA,KAAKpB,EAAyB,CAAC,GAAI,MAAMoB,EAAAA,EAAAA,KAAKX,EAAYK,EAAG,CACtGK,SAAU,2CACR,MAAMC,EAAAA,EAAAA,KAAKnB,EAAsB,CAAC,GAAI,MAAMmB,EAAAA,EAAAA,KAAKlB,EAAqB,CAAC,GAAI,MAAMkB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACxGM,SAAU,mCACR,MAAMC,EAAAA,EAAAA,KAAKjB,EAAoB,CAAC,GAAI,MAAMiB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACjEM,SAAU,8BACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAkB,CAAC,GAAI,MAAMgB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAC/DM,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAqB,CAAC,GAAI,MAAMe,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAClEM,SAAU,mCACR,MAAMC,EAAAA,EAAAA,KAAKd,EAA6B,CAAC,KAEhD,CAOD,MANA,SAAoBE,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOM,GAAYF,EAAAA,EAAAA,KAAKE,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAUC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EACzB,C,uCCjBD,IAjBqBA,IACnB,gBACEe,MADF,6BAEEC,MAFF,GAGEC,OAHF,GAIEC,KAJF,OAKEC,QALF,2BAQE,iBACEC,OADF,OAEEC,cAFF,QAGEC,YAHF,IAIEC,EAbN,+G","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/card_medium.tsx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { card_medium as Card } from '@dnb/eufemia/src/icons'\nimport InfoCard from '@dnb/eufemia/src/components/info-card/InfoCard'\n\nexport const InfoCardBasic = () => (\n  <ComponentBox data-visual-test=\"info-card-basic\">\n    <InfoCard text=\"This is a description of some information or a tip that will inform the user of something that will help them.\" />\n  </ComponentBox>\n)\n\nexport const InfoCardTitle = () => (\n  <ComponentBox data-visual-test=\"info-card-title\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtons = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtonsCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons-centered\">\n    <InfoCard\n      centered\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardAcceptButton = () => (\n  <ComponentBox data-visual-test=\"info-card-accept-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCloseButton = () => (\n  <ComponentBox data-visual-test=\"info-card-close-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomIcon = () => (\n  <ComponentBox scope={{ Card }} data-visual-test=\"info-card-custom-icon\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      icon={Card}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      centered={true}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImage = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImageCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      centered={true}\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InfoCardBasic, InfoCardTitle, InfoCardButtons, InfoCardButtonsCentered, InfoCardAcceptButton, InfoCardCloseButton, InfoCardCustomIcon, InfoCardCentered, InfoCardCustomImage, InfoCardCustomImageCentered} from 'Docs/uilib/components/info-card/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard (default)\"\n    }), \"\\n\", _jsx(InfoCardBasic, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with a title\"\n    }), \"\\n\", _jsx(InfoCardTitle, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with Buttons\"\n    }), \"\\n\", _jsx(InfoCardButtons, {}), \"\\n\", _jsx(InfoCardButtonsCentered, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Each button can be used independently.\"\n    }), \"\\n\", _jsx(InfoCardAcceptButton, {}), \"\\n\", _jsx(InfoCardCloseButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard accepts a custom icon\"\n    }), \"\\n\", _jsx(InfoCardCustomIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard centered content\"\n    }), \"\\n\", _jsx(InfoCardCentered, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image\"\n    }), \"\\n\", _jsx(InfoCardCustomImage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image centered\"\n    }), \"\\n\", _jsx(InfoCardCustomImageCentered, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst card_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeWidth={1.5}\n      d=\"M4.5 8h3.75M4.5 16h15M2.75 19.5h18.5a2 2 0 0 0 2-2v-11a2 2 0 0 0-2-2H2.75a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2Z\"\n    />\n  </svg>\n)\nexport default card_medium\n"],"names":["InfoCardBasic","InfoCardTitle","InfoCardButtons","InfoCardButtonsCentered","InfoCardAcceptButton","InfoCardCloseButton","InfoCardCustomIcon","InfoCardCentered","InfoCardCustomImage","InfoCardCustomImageCentered","_createMdxContent","props","_components","Object","assign","h2","h3","p","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeWidth","d"],"sourceRoot":""}