"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[22130],{41649:function(e,t,s){s.r(t);var n=s(52322),d=s(45392);function r(e){const t=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",strong:"strong"},(0,d.ah)(),e.components);return(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Events"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onOpen"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.em,{children:"(optional)"})," This event gets triggered once the modal shows up. Returns the modal id: ",(0,n.jsx)(t.code,{children:"{ id }"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onClose"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.em,{children:"(optional)"})," This event gets triggered once the modal gets closed. Returns the modal id: ",(0,n.jsx)(t.code,{children:"{ id, event, triggeredBy }"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onClosePrevent"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.em,{children:"(optional)"})," This event gets triggered once the user tries to close the modal, but ",(0,n.jsx)(t.code,{children:"preventClose"})," is set to ",(0,n.jsx)(t.strong,{children:"true"}),". Returns a callback ",(0,n.jsx)(t.code,{children:"close"})," you can call to trigger the close mechanism. More details below. Returns the modal id: ",(0,n.jsx)(t.code,{children:"{ id, event, close: Method, triggeredBy }"})]})]})]})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,e)})):r(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-modal-event-table-camel-case-mdx-733aede39e60d9813222.js.map