{"version":3,"file":"component---src-docs-uilib-components-number-format-mdx-aa3446904dd6a1871af8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport NumberInfo from 'Docs/uilib/components/number-format/info';\nimport NumberDemos from 'Docs/uilib/components/number-format/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(NumberInfo, {}), \"\\n\", _jsx(NumberDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport NumberFormat from '@dnb/eufemia/src/components/NumberFormat'\nimport P from '@dnb/eufemia/src/elements/P'\nimport H3 from '@dnb/eufemia/src/elements/H3'\n\nconst Style = styled.div`\n  *:not([data-visual-test='number-format-spacing'])\n    > span.dnb-number-format {\n    display: block;\n  }\n  [data-visual-test='number-locales'] .dnb-p:last-of-type {\n    padding-bottom: 1rem;\n  }\n`\n\nexport const NumberDefault = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-default\">\n      <P>\n        <NumberFormat value=\"12345\" srLabel=\"Total:\" />\n        <NumberFormat>-12345678.9</NumberFormat>\n        <NumberFormat prefix={<b>prefix</b>} suffix=\"suffix\">\n          -12345678.9\n        </NumberFormat>\n        <NumberFormat decimals={1}>-1234.54321</NumberFormat>\n        <NumberFormat decimals={2} copy_selection={false}>\n          -1234\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPercent = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-percent\">\n      <P>\n        <NumberFormat percent value=\"12.34\" />\n        <NumberFormat percent>-12.34</NumberFormat>\n        <NumberFormat percent decimals={1}>\n          -12.34\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCurrency = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-currency\">\n      <P>\n        <NumberFormat currency>12345</NumberFormat>\n        <NumberFormat\n          currency\n          currency_position=\"before\"\n          value={-12345678.9}\n        />\n        <NumberFormat currency value={-12345678.95} decimals={0} />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display=\"code\"\n        />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display={false}\n        />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberProvider = () => (\n  <Style>\n    <ComponentBox scope={{ Provider }}>\n      <Provider\n        value={{\n          NumberFormat: {\n            currency: true,\n            omit_rounding: true,\n            clean_copy_value: true,\n          },\n        }}\n      >\n        <P>\n          <NumberFormat>12345</NumberFormat>\n          <NumberFormat value={-12345.123} decimals={0} />\n          <NumberFormat value={-12345678.955} currency_position=\"before\" />\n        </P>\n      </Provider>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCompact = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-compact\">\n      <P>\n        <NumberFormat compact decimals={1}>\n          1234\n        </NumberFormat>\n        <NumberFormat compact decimals={1} value={123456} />\n        <NumberFormat compact=\"short\" decimals={2} value={-1723967.38} />\n        <NumberFormat compact=\"long\" decimals={3} value={-1234567.9876} />\n        <NumberFormat\n          compact=\"long\"\n          currency\n          value={12345}\n          decimals={1}\n          currency_display=\"name\"\n        />\n        <NumberFormat compact value={123455678912} decimals={3} />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPhone = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-phone\">\n      <P>\n        <NumberFormat value=\"99999999\" phone />\n        <NumberFormat value=\"4799999999\" phone />\n        <NumberFormat value=\"++4799999999\" phone />\n        <NumberFormat value=\"+4780022222\" phone link=\"sms\" />\n        <NumberFormat value=\"+47116000\" phone selectall={false} />\n        <NumberFormat value=\"+4702000\" phone />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberBankAccount = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-ban\">\n      <P>\n        <NumberFormat value=\"20001234567\" ban />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberNationalIdentification = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-nin\">\n      <P>\n        <NumberFormat value=\"18089212345\" nin />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberOrganization = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-org\">\n      <P>\n        <NumberFormat value=\"123456789\" org suffix=\"MVA\" />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberLocales = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-locales\">\n      <H3>Numbers</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"en-GB\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-DE\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-CH\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345678.9\" />\n      </P>\n\n      <H3>Currencies</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"en-GB\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-DE\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-CH\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345.6\" currency />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberSpacing = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-spacing\">\n      <span>text</span> <NumberFormat value=\"1234\" currency left right />\n      <span>text</span> <NumberFormat value=\"5678\" currency left right />\n      <span>text</span>\n    </ComponentBox>\n  </Style>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {NumberDefault, NumberCurrency, NumberCompact, NumberPercent, NumberPhone, NumberBankAccount, NumberNationalIdentification, NumberOrganization, NumberLocales, NumberSpacing, NumberProvider} from 'Docs/uilib/components/number-format/Examples';\nimport ChangeLocale from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeLocale, {\n      label: \"Locale used in the demos:\",\n      label_direction: \"vertical\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default numbers\"\n    }), \"\\n\", _jsx(NumberDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Currency\"\n    }), \"\\n\", _jsx(NumberCurrency, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Compact (shorten) numbers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Shorten numbers should only be used for numbers above 100 000. A small \", _jsx(_components.code, {\n        children: \"k\"\n      }), \" for thousand is not a Norwegian standard, and should not be used in formal contexts.\"]\n    }), \"\\n\", _jsx(NumberCompact, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Percentage\"\n    }), \"\\n\", _jsx(NumberPercent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Phone\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using \", _jsx(_components.code, {\n        children: \"selectall={false}\"\n      }), \" you disable the auto-select all feature.\"]\n    }), \"\\n\", _jsx(NumberPhone, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Bank Account number (Kontonummer)\"\n    }), \"\\n\", _jsx(NumberBankAccount, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"National Identification number (Fødselsnummer)\"\n    }), \"\\n\", _jsx(NumberNationalIdentification, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Organization number (Organisasjonsnummer)\"\n    }), \"\\n\", _jsx(NumberOrganization, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Numbers and currencies in different locales\"\n    }), \"\\n\", _jsx(NumberLocales, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat and spacing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The NumberFormat uses \", _jsx(_components.code, {\n        children: \"display: inline-block;\"\n      }), \" in order to make the \", _jsx(_components.a, {\n        href: \"/uilib/components/space\",\n        children: \"spacing system\"\n      }), \" to work.\"]\n    }), \"\\n\", _jsx(NumberSpacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the Provider with NumberFormat\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example every NumberFormat will receive the Provider defined properties, including \", _jsx(_components.code, {\n        children: \"clean_copy_value\"\n      }), \".\"]\n    }), \"\\n\", _jsx(NumberProvider, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {NumberFormat} from '@dnb/eufemia/src';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    strong: \"strong\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A ready-to-use DNB number formatter. Use it where over you have to display a number, a currency value, phone number, etc.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Good reasons for why we have this is to:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"uniform the formation of numbers for all DNB applications.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"and make numbers accessible to screen readers.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Supported formats\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Numbers in general e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            value: \"12345678.90\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Currency e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            currency: true,\n            value: \"12345678.90\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Percentage e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            percent: true,\n            value: \"12.34\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Phone numbers e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            phone: true,\n            value: \"004799999999\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Bank account number e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            ban: true,\n            value: \"20001234567\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"National identification number e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            nin: true,\n            value: \"18089212345\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Organization number e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            org: true,\n            value: \"123456789\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Compact (shorten) numbers e.g. \", _jsx(\"code\", {\n          className: \"dnb-code\",\n          children: _jsx(NumberFormat, {\n            compact: true,\n            value: \"123456\",\n            decimals: 1\n          })\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Defaults\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses the browser APIs \", _jsx(_components.code, {\n        children: \"number.toLocaleString\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"Intl.NumberFormat.format\"\n      }), \" under the hood. As well as some custom formatter. The locale defaults to:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Locale: \", _jsx(_components.code, {\n          children: \"nb-NO\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Currency: \", _jsx(_components.code, {\n          children: \"NOK\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Decimals\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the amount of wanted \", _jsx(_components.code, {\n        children: \"decimals\"\n      }), \" is set as a property, but the given value contains decimals that exceeds the wanted \", _jsx(_components.code, {\n        children: \"decimals\"\n      }), \", the output value will get rounded up or down. Use \", _jsx(_components.code, {\n        children: \"omit_rounding\"\n      }), \" if you need to hard-cut decimals from the displayed value.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Provider\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can send down the \", _jsx(_components.code, {\n        children: \"locale\"\n      }), \" as an application-wide property (Context). More info about the \", _jsx(_components.a, {\n        href: \"/uilib/components/number-format/provider\",\n        children: \"provider and locale usage\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider locale=\\\"en-GB\\\" NumberFormat={{ currency_display: 'code' }}>\\n    <MyApp>\\n      text <NumberFormat>123</NumberFormat> table etc.\\n    </MyApp>\\n  </Provider>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"NumberFormat Hook\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Heads up:\"\n      }), \" If you do so, keep in mind, you will have to ensure all the accessibility enhancements the component offers. For that you can use the \", _jsx(_components.code, {\n        children: \"aria\"\n      }), \" field:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\nimport useNumberFormat from '@dnb/eufemia/components/number-format/useNumberFormat'\\n\\nfunction Component() {\\n  // By using returnAria you get an object\\n  const { number, aria } = useNumberFormat(12345678.9, {\\n    // Props are inherited from the Eufemia Provider and the NumberFormat object\\n    returnAria: true,\\n  })\\n\\n  return (\\n    <span>\\n      <span aria-hidden>{number}</span>\\n      <span className=\\\"dnb-sr-only\\\">{aria}</span>\\n    </span>\\n  )\\n}\\n\\nrender(\\n  <Provider locale=\\\"en-GB\\\" NumberFormat={{ currency: 'EUR' }}>\\n    <Component />\\n  </Provider>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Formatting only (interceptor)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"format\"\n      }), \" method without using a React Component or React Hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Heads up:\"\n      }), \" If you do so, keep in mind, you will have to ensure all the accessibility enhancements the component offers. For that you can use the \", _jsx(_components.code, {\n        children: \"aria\"\n      }), \" field:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { format } from '@dnb/eufemia/components/number-format/NumberUtils'\\n\\n// By using returnAria you get an object\\nconst { number, aria } = format(12345678.9, {\\n  locale: 'nb-NO', // not inherited\\n  currency: true,\\n  returnAria: true,\\n})\\n\\n// Basic formatting\\nconst number = format(1234)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"format\"\n      }), \" method will accept the same \", _jsx(_components.a, {\n        href: \"/uilib/components/number-format/properties\",\n        children: \"properties\"\n      }), \" as the component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Interceptor helpers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, you may check out the related tests \", _jsx(_components.strong, {\n        children: \"NumberFormat > cleanNumber\"\n      }), \" in the source code to find more examples.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { cleanNumber } from '@dnb/eufemia/components/number-format/NumberUtils'\\n\\nconst string = cleanNumber('prefix -12 345,678 suffix') // returns -12345.678\\nconst string = cleanNumber('prefix -12.345,678 suffix') // returns -12345.678\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Element and style\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The number component is style-independent, so it has no visual styles. By default, a \", _jsx(_components.code, {\n        children: \"<span>\"\n      }), \" is used (with \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/speak-as\",\n        children: \"speak-as: numbers\"\n      }), \", even the support is very low). But you can easily change the element type by providing something else to \", _jsx(_components.code, {\n        children: \"element=\\\"div\\\"\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NVDA\"\n      }), \" has also \", _jsx(_components.a, {\n        href: \"https://github.com/nvaccess/nvda/issues/8874\",\n        children: \"issues\"\n      }), \" on reconciling the \", _jsx(_components.code, {\n        children: \"lang\"\n      }), \" attribute, this makes it hard to have a solid and good solution for reading numbers. VoiceOver on desktop makes a perfect job there.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"VoiceOver\"\n      }), \" on mobile devices (iOS) only supports numbers read out properly to a maximum of \", _jsx(_components.code, {\n        children: \"99,999.00\"\n      }), \". On amounts above this value, VO reads numbers digit by digit.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To enhance the \", _jsx(_components.strong, {\n        children: \"Copy & Paste\"\n      }), \" experience of copying numbers into other applications (Excel), you may use the \", _jsx(_components.code, {\n        children: \"clean_copy_value\"\n      }), \" property – it will then provide a second number, without thousand separators and to have a comma/dot (depending on the locale) as the decimal separator. This number is not visible, but will be used when selecting & copying the whole number on the first click to the system clipboard.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can enable this feature on all your NumberFormat components by using the \", _jsx(_components.code, {\n        children: \"Provider\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Provider } from '@dnb/eufemia/shared'\\n\\nrender(\\n  <Provider value={{ NumberFormat: { clean_copy_value: true } }}>\\n    <YourApp />\\n  </Provider>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"More details\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Screen readers require numbers to be formatted properly in order to be read as numbers. The \", _jsx(_components.strong, {\n          children: \"NumberFormat\"\n        }), \" component will help to achieve this requirement.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"So, numbers are formatted differently for screen readers than the visual number. And numbers also get assigned a \", _jsx(_components.code, {\n        children: \"lang\"\n      }), \" attribute, so the screen reader knows what language (locale) should be used on the particular number, even if the text around does not correspond to the same language.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sources\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Eufemia is basing their number formats on both the \", _jsx(_components.a, {\n        href: \"https://lovdata.no/forskrift/2004-02-16-426/%C2%A716\",\n        children: \"Norwegian authority\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://www.sprakradet.no/sprakhjelp/Skriveregler/Dato\",\n        children: \"Språkradet\"\n      }), \". Wikipedia has more info on world wide \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Decimal_separator\",\n        children: \"decimal separator\"\n      }), \" usage.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For international number formatting, we use the \", _jsx(_components.a, {\n        href: \"https://ec.europa.eu/info/sites/default/files/styleguide_english_dgt_en.pdf\",\n        children: \"EU Style Guide\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Node.js and SSR usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you run the component or \", _jsx(_components.code, {\n        children: \"format\"\n      }), \" function in \", _jsx(_components.a, {\n        href: \"https://nodejs.org\",\n        children: \"Node.js\"\n      }), \" you have to include \", _jsx(_components.a, {\n        href: \"https://nodejs.org/api/intl.html\",\n        children: \"ICU\"\n      }), \" data in order to display other locales than en-GB. You can do this by:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"installing \", _jsx(_components.code, {\n          children: \"npm i full-icu\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"and call node (or jest) with an environment variable pointing to the package: \", _jsx(_components.code, {\n          children: \"NODE_ICU_DATA=./node_modules/full-icu node ...\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"after a Node.js version upgrade you may have to run \", _jsx(_components.code, {\n          children: \"npm rebuild\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Known issues\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Edge Browser on Windows 10 is converting numbers automatically to followable links. This makes the experience on NVDA bad, as it reads also the new, unformatted link number.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/x-ms-format-detection\",\n        children: \"disable this behavior\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<html x-ms-format-detection=\\\"none\\\">\\n  ...\\n</html>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Lighthouse and axe-core\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to enhance the UX while using a screen reader, the NumberFormat component is using a role called \", _jsx(_components.code, {\n        children: \"role=\\\"text\\\"\"\n      }), \". This allows the screen reader to read particular numbers within the context, without interrupting the flow while reading paragraphs.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://developers.google.com/web/tools/lighthouse\",\n        children: \"Lighthouse\"\n      }), \" is using \", _jsx(_components.a, {\n        href: \"https://developers.google.com/web/tools/lighthouse\",\n        children: \"axe-core\"\n      }), \" under the hood. Older versions of \", _jsx(_components.code, {\n        children: \"axe-core\"\n      }), \" is allowing us to use \", _jsx(_components.code, {\n        children: \"role=\\\"text\\\"\"\n      }), \" only within no focusable descendants. But because the NumberFormat component also includes a \", _jsx(_components.strong, {\n        children: \"Copy & Paste\"\n      }), \" feature, it uses \", _jsx(_components.code, {\n        children: \"tabindex=\\\"-1\\\"\"\n      }), \" which allows JavaScript to focus the descendant DOM Element.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","NumberInfo","NumberDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Style","_styled","target","name","styles","NumberDefault","_jsx2","ComponentBox","NumberPercent","NumberCurrency","NumberProvider","scope","Provider","NumberCompact","NumberPhone","NumberBankAccount","NumberNationalIdentification","NumberOrganization","NumberLocales","NumberSpacing","_components","h2","h3","p","code","a","ChangeLocale","label","label_direction","href","ul","li","pre","strong","blockquote","className","NumberFormat","value","currency","percent","phone","ban","nin","org","compact","decimals"],"sourceRoot":""}