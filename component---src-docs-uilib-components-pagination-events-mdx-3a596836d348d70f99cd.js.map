{"version":3,"file":"component---src-docs-uilib-components-pagination-events-mdx-3a596836d348d70f99cd.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/pagination/events.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    strong: \"strong\",\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_change\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called for every page change, regardless if the mode is \", _jsx(_components.code, {\n              children: \"mode=\\\"infinity\\\"\"\n            }), \" or not. Returns an object with number of useful properties and methods. See below for more details.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_startup\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Only on \", _jsx(_components.strong, {\n              children: \"infinity\"\n            }), \" mode. Will be called once the component is ready for interaction. Returns an object with number of useful properties and methods. See below for more details. \", _jsx(_components.strong, {\n              children: \"NB:\"\n            }), \" Will be called again as soon as we reset the content by calling \", _jsx(_components.code, {\n              children: \"resetContent()\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_load\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Only on \", _jsx(_components.strong, {\n              children: \"infinity\"\n            }), \" mode. Will be called on every page interaction, also on the very first interaction. Returns an object with number of useful properties and methods. See below for more details.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_end\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Only on \", _jsx(_components.strong, {\n              children: \"infinity\"\n            }), \" mode. Will be called once \", _jsx(_components.code, {\n              children: \"page_count\"\n            }), \" is reached or \", _jsx(_components.code, {\n              children: \"endInfinity\"\n            }), \" was called.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Returned object\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Events have several useful methods to change / manipulate the content.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Pagination mode\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Pagination\\n  on_change={({ pageNumber, ...methods }) => {\\n    // ...\\n  }}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"pageNumber\"\n        }), \" the current page number\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setContent\"\n        }), \" use it to add update a page including content: \", _jsx(_components.code, {\n          children: \"setContent(pageNumber, ReactComponent)\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Infinity mode\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Pagination\\n  mode=\\\"infinity\\\"\\n  on_change={({ pageNumber, ...methods }) => {\\n    // ...\\n  }}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"pageNumber\"\n        }), \" the current page number\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setContent\"\n        }), \" use it to add update a page including content: \", _jsx(_components.code, {\n          children: \"setContent(pageNumber, ReactComponent, position = 'after')\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"endInfinity\"\n        }), \" use it to tell the infinity pagination to end the infinity scrolling interaction. Use this handler to end the infinity scrolling procedure, in case the page_count is unknown: \", _jsx(_components.code, {\n          children: \"endInfinity(pageNumber)\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resetContent\"\n        }), \" use it to invalidate all internal pages: \", _jsx(_components.code, {\n          children: \"resetContent()\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resetInfinity\"\n        }), \" use it to reset the internal pagination states: \", _jsx(_components.code, {\n          children: \"resetInfinity(pageNumber = startup_page)\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"items\"\n        }), \" internal stored pages\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","strong","p","h3","pre","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}