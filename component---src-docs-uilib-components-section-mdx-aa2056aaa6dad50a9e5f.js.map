{"version":3,"file":"component---src-docs-uilib-components-section-mdx-aa2056aaa6dad50a9e5f.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/section.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SectionInfo from 'Docs/uilib/components/section/info';\nimport SectionDemos from 'Docs/uilib/components/section/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SectionInfo, {}), \"\\n\", _jsx(SectionDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Section, P, Anchor } from '@dnb/eufemia/src'\n\nexport const SectionDemo = () => (\n  <ComponentBox hideCode data-visual-test=\"section-default\">\n    <Section>\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">default</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSpacing = () => (\n  <ComponentBox hideCode data-visual-test=\"section-spacing\">\n    <Section spacing>\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">default with spacing</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoWhite = () => (\n  <ComponentBox hideCode data-visual-test=\"section-white\">\n    <Section spacing=\"large\" style_type=\"white\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">white</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoDivider = () => (\n  <ComponentBox hideCode data-visual-test=\"section-divider\">\n    <Section spacing=\"medium\" style_type=\"divider\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">divider</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoMintGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-mint-green\">\n    <Section spacing=\"small\" style_type=\"mint-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">mint-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSeaGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sea-green\">\n    <Section spacing=\"large\" style_type=\"sea-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">sea-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoEmeraldGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-emerald-green\">\n    <Section spacing=\"medium\" style_type=\"emerald-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">emerald-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoLavender = () => (\n  <ComponentBox data-visual-test=\"section-lavender\">\n    <Section spacing=\"small\" style_type=\"lavender\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">lavender</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoBlack3 = () => (\n  <ComponentBox data-visual-test=\"section-black-3\">\n    <Section spacing style_type=\"black-3\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">black-3</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSandYellow = () => (\n  <ComponentBox data-visual-test=\"section-sand-yellow\">\n    <Section spacing style_type=\"sand-yellow\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">sand-yellow</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoPistachio = () => (\n  <ComponentBox data-visual-test=\"section-pistachio\">\n    <Section spacing style_type=\"pistachio\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">pistachio</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoFireRed = () => (\n  <ComponentBox data-visual-test=\"section-fire-red\">\n    <Section spacing style_type=\"fire-red\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">fire-red</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoFireRed8 = () => (\n  <ComponentBox data-visual-test=\"section-fire-red-8\">\n    <Section spacing style_type=\"fire-red-8\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">fire-red-8</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionZIndex = () =>\n  !globalThis.IS_TEST ? null : (\n    <ComponentBox data-visual-test=\"section-z-index\">\n      <Section spacing style_type=\"mint-green-12\">\n        mint-green-12\n        <div>\n          <Section spacing style_type=\"mint-green\">\n            mint-green\n            <div>\n              <Section spacing style_type=\"sea-green\">\n                sea-green\n                <div>\n                  <Section spacing style_type=\"emerald-green\">\n                    emerald-green\n                    <div>\n                      <Section spacing style_type=\"fire-red\">\n                        fire-red\n                        <div>\n                          <Section spacing style_type=\"sand-yellow\">\n                            sand-yellow\n                            <div>\n                              <Section spacing style_type=\"pistachio\">\n                                pistachio\n                                <div>\n                                  <Section spacing style_type=\"lavender\">\n                                    lavender\n                                    <div>\n                                      <Section\n                                        spacing\n                                        style_type=\"divider\"\n                                      >\n                                        divider\n                                      </Section>\n                                    </div>\n                                  </Section>\n                                </div>\n                              </Section>\n                            </div>\n                          </Section>\n                        </div>\n                      </Section>\n                    </div>\n                  </Section>\n                </div>\n              </Section>\n            </div>\n          </Section>\n        </div>\n      </Section>\n    </ComponentBox>\n  )\n\nexport const SectionDemoInfo = () => (\n  <ComponentBox data-visual-test=\"section-info\">\n    <Section spacing variant=\"info\">\n      <P space={0}>\n        Generic info section: <Anchor href=\"#\">info</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoError = () => (\n  <ComponentBox data-visual-test=\"section-error\">\n    <Section spacing variant=\"error\">\n      <P space={0}>\n        Error section: <Anchor href=\"#\">error</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoWarning = () => (\n  <ComponentBox data-visual-test=\"section-warning\">\n    <Section spacing variant=\"warning\">\n      <P space={0}>\n        Warning section: <Anchor href=\"#\">warning</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSuccess = () => (\n  <ComponentBox data-visual-test=\"section-success\">\n    <Section spacing variant=\"success\">\n      <P space={0}>\n        Success section: <Anchor href=\"#\">success</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SectionDemo, SectionDemoSpacing, SectionDemoWhite, SectionDemoDivider, SectionDemoMintGreen, SectionDemoSeaGreen, SectionDemoEmeraldGreen, SectionDemoLavender, SectionDemoBlack3, SectionDemoSandYellow, SectionDemoPistachio, SectionDemoFireRed, SectionDemoFireRed8, SectionZIndex, SectionDemoInfo, SectionDemoError, SectionDemoWarning, SectionDemoSuccess} from 'Docs/uilib/components/section/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {VisibilityByTheme} = _components;\n  if (!VisibilityByTheme) _missingMdxReference(\"VisibilityByTheme\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section without spacing\"\n    }), \"\\n\", _jsx(SectionDemo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section with large spacing\"\n    }), \"\\n\", _jsx(SectionDemoSpacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"White Section\"\n    }), \"\\n\", _jsx(SectionDemoWhite, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Divider Section\"\n    }), \"\\n\", _jsx(SectionDemoDivider, {}), \"\\n\", _jsxs(VisibilityByTheme, {\n      hidden: \"sbanken\",\n      children: [_jsx(_components.h3, {\n        children: \"Mint-Green Section\"\n      }), _jsx(SectionDemoMintGreen, {}), _jsx(_components.h3, {\n        children: \"Sea-Green Section\"\n      }), _jsx(SectionDemoSeaGreen, {}), _jsx(_components.h3, {\n        children: \"Emerald-Green Section\"\n      }), _jsx(SectionDemoEmeraldGreen, {}), _jsx(_components.h3, {\n        children: \"Lavender Section\"\n      }), _jsx(SectionDemoLavender, {}), _jsx(_components.h3, {\n        children: \"Grey Section\"\n      }), _jsx(SectionDemoBlack3, {}), _jsx(_components.h3, {\n        children: \"Sand-Yellow Section\"\n      }), _jsx(SectionDemoSandYellow, {}), _jsx(_components.h3, {\n        children: \"Pistachio Section\"\n      }), _jsx(SectionDemoPistachio, {}), _jsx(_components.h3, {\n        children: \"Fire-Red Section\"\n      }), _jsx(SectionDemoFireRed, {}), _jsx(_components.h3, {\n        children: \"Fire-Red-8 Section\"\n      }), _jsx(SectionDemoFireRed8, {}), _jsx(SectionZIndex, {})]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Info Section\"\n    }), \"\\n\", _jsx(SectionDemoInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error Section\"\n    }), \"\\n\", _jsx(SectionDemoError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning Section\"\n    }), \"\\n\", _jsx(SectionDemoWarning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Success Section\"\n    }), \"\\n\", _jsx(SectionDemoSuccess, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Section component is a visual helper. It wraps content inside a visual section banner. Under the hood it uses a couple of tricks to get an infinite wide look background. You don't need to do anything more than you else would do regarding your content and the \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \". The background from the Section component will go beyond a \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following example shows form sections with different styling. The helper prop \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" adds spacing to the section if needed.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Customize color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of how to change the background color and by using a custom color. Yes, we use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" property for that.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Define a custom Section color\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Create a custom CSS style declaration\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".dnb-section--custom-section::after {\\n  color: var(--color-ocean-green);\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use that custom CSS class\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Section style_type=\\\"custom-section\\\">...</Section>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom Section color in plain HTML\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Create a custom CSS style declaration\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".custom-section::after {\\n  color: var(--color-ocean-green);\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use that custom CSS class\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<div className=\\\"dnb-section custom-section\\\">...</div>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SectionInfo","SectionDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","SectionDemo","ComponentBox","hideCode","SectionDemoSpacing","SectionDemoWhite","SectionDemoDivider","SectionDemoMintGreen","SectionDemoSeaGreen","SectionDemoEmeraldGreen","SectionDemoLavender","SectionDemoBlack3","SectionDemoSandYellow","SectionDemoPistachio","SectionDemoFireRed","SectionDemoFireRed8","SectionZIndex","globalThis","IS_TEST","SectionDemoInfo","SectionDemoError","SectionDemoWarning","SectionDemoSuccess","_components","h2","h3","VisibilityByTheme","id","component","Error","_missingMdxReference","hidden","p","code","ol","li","pre","className","start"],"sourceRoot":""}