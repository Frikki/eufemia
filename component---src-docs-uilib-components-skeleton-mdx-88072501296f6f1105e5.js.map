{"version":3,"file":"component---src-docs-uilib-components-skeleton-mdx-88072501296f6f1105e5.js","mappings":"kMAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAc,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAe,CAAC,KAElE,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,8ECVA,SAASA,EAAkBC,GACzB,MAAMa,EAAcJ,OAAOC,OAAO,CAChCI,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJN,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BX,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKc,EAAAA,EAAgB,CAAC,GAAI,MAAMd,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7DX,SAAU,wBACR,MAAMC,EAAAA,EAAAA,KAAKe,EAAAA,GAAsB,CAAC,GAAI,MAAMf,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CACnEX,SAAU,2BACR,MAAMC,EAAAA,EAAAA,KAAKgB,EAAAA,GAAuB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CACpEX,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKiB,EAAAA,GAAwB,CAAC,GAAI,MAAMjB,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CACrEX,SAAU,oCACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,qBAAqBC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACrDb,SAAU,iCACR,OACF,MAAMC,EAAAA,EAAAA,KAAKkB,EAAAA,GAAgC,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7EX,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYE,EAAG,CAC5BZ,SAAU,uDACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYI,IAAK,CAC9Bd,UAAUC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/BO,UAAW,eACXpB,SAAU,2EAEV,MAAMC,EAAAA,EAAAA,KAAKoB,EAAAA,GAAwB,CAAC,GAAI,MAAMpB,EAAAA,EAAAA,KAAKqB,EAAAA,EAAqB,CAAC,KAEjF,CAOA,UANA,SAAoBzB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/skeleton.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/skeleton/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SkeletonInfo from 'Docs/uilib/components/skeleton/info';\nimport SkeletonDemos from 'Docs/uilib/components/skeleton/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SkeletonInfo, {}), \"\\n\", _jsx(SkeletonDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SkeletonInputExample, SkeletonToggleExample, SkeletonWrapperExample, SkeletonEufemiaProviderExample, SkeletonFiguresExample, SkeletonVisualTests} from 'Docs/uilib/components/skeleton/Examples';\nimport PortalSkeleton from 'dnb-design-system-portal/src/core/PortalSkeleton';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(PortalSkeleton, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Input with Skeleton\"\n    }), \"\\n\", _jsx(SkeletonInputExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Toggle skeleton on/off\"\n    }), \"\\n\", _jsx(SkeletonToggleExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Skeleton wrapper\"\n    }), \"\\n\", _jsx(SkeletonWrapperExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Skeleton using Eufemia Provider\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use \", _jsx(_components.code, {\n        children: \"FormRow={{ skeleton: true }}\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SkeletonEufemiaProviderExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Skeleton figures\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You may import a given figure, or create your own.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Article } from '@dnb/eufemia/components/skeleton/figures'\\n\"\n      })\n    }), \"\\n\", _jsx(SkeletonFiguresExample, {}), \"\\n\", _jsx(SkeletonVisualTests, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SkeletonInfo","SkeletonDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","code","pre","PortalSkeleton","SkeletonInputExample","SkeletonToggleExample","SkeletonWrapperExample","SkeletonEufemiaProviderExample","className","SkeletonFiguresExample","SkeletonVisualTests"],"sourceRoot":""}