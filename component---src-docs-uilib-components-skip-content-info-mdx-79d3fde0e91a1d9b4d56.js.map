{"version":3,"file":"component---src-docs-uilib-components-skip-content-info-mdx-79d3fde0e91a1d9b4d56.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/skip-content/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/skip-content/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {Button} from '@dnb/eufemia/src';\nimport {SkipContentInfo1, SkipContentInfo2} from 'Docs/uilib/components/skip-content/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"SkipContent\"\n      }), \" gives users – using their keyboard for navigation – the option to skip over content which contains a large amount of interactive elements.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"When is it desired?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Typical when an action button, such as a save button, is placed below the content.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"What are interactive elements?\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Text links/Anchors\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Buttons\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Inputs and other form elements\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Basically every focusable element\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"What is considered as large contents?\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Tables with interactive elements\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Lists with interactive elements\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Articles with interactive elements\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Parts of a form\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"How does it work?\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"An initially hidden button will reveal when \", _jsx(_components.code, {\n          children: \"tab\"\n        }), \" key is used.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The user can then press this button, or continue tabbing when desired.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When the user decides to continue using the \", _jsx(_components.code, {\n          children: \"tab\"\n        }), \" key, the button will disappear again.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"When the button gets pressed, the focus will be set to another defined HTML class selector and the browser will scroll to the element.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Good description\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The revealing button needs a clear message to let the user easily understand the intention.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Placement\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ensure you put a header or a section before the \", _jsx(_components.code, {\n        children: \"SkipContent\"\n      }), \" component. It should describe the content, so the user understands the context.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Example with a section landmark (section) and header + \", _jsx(_components.code, {\n        children: \"SkipContent.Return\"\n      }), \":\"]\n    }), \"\\n\", _jsx(SkipContentInfo1, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Example using a section landmark (section) and table caption:\"\n    }), \"\\n\", _jsx(SkipContentInfo2, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Return button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Optionally, you should consider to include the \", _jsx(_components.code, {\n        children: \"SkipContent.Return\"\n      }), \" utility as well. It lets the user jump back to where they came from (before the large content). This button is only focusable when the enter action by the skip button was done.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Screen readers and landmarks\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"SkipContent\"\n      }), \" helper component is mainly dedicated to keyboard navigation.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to let screen readers skip large parts of content, you need to ensure your HTML has \", _jsx(_components.a, {\n        href: \"/uilib/usage/accessibility/checklist/#landmark--and-semantics-example\",\n        children: \"logical landmarks and regions\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  SkipContent,\n  Button,\n  Table,\n  Td,\n  Tr,\n  Th,\n  Checkbox,\n  Input,\n  Section,\n  H4,\n  Dl,\n  Dd,\n  Dt,\n  H2,\n} from '@dnb/eufemia/src'\n\nexport const SkipContentTable = () => (\n  <ComponentBox hideCode scope={{ LargeTableWithInteractiveElements }}>\n    <section aria-labelledby=\"table-with-caption heading\">\n      <H4 id=\"heading\" space={0}>\n        This table has many focusable elements\n      </H4>\n\n      <SkipContent selector=\"#submit-area\" text=\"Skip table content\" top />\n\n      <LargeTableWithInteractiveElements id=\"table-with-caption\" />\n    </section>\n\n    <Section id=\"submit-area\" spacing=\"small\" style_type=\"divider\" top>\n      <SkipContent.Return selector=\"#submit-area\" bottom>\n        Back to beginning of table\n      </SkipContent.Return>\n\n      <Button>Submit</Button>\n    </Section>\n  </ComponentBox>\n)\n\nconst LargeTableWithInteractiveElements = (props) => {\n  const TdCheckbox = () => {\n    return <Checkbox label=\"Select row\" label_sr_only />\n  }\n  const TdInput = () => {\n    return <Input label=\"Label\" label_sr_only size={4} />\n  }\n\n  const Row = ({ nr }) => {\n    return (\n      <Tr>\n        <Td>\n          <TdCheckbox />\n        </Td>\n        <Td>Row {nr}</Td>\n        <Td spacing=\"horizontal\">\n          <TdInput />\n        </Td>\n        <Td align=\"right\">Row {nr}</Td>\n\n        <Td.AccordionContent>\n          <Section top spacing>\n            <Dl>\n              <Dt>Favorittfarge</Dt>\n              <Dd>Grønn</Dd>\n              <Dt>Favorittmat</Dt>\n              <Dd>Taco</Dd>\n            </Dl>\n          </Section>\n        </Td.AccordionContent>\n      </Tr>\n    )\n  }\n\n  const Rows = []\n  for (let i = 0, l = 10; i < l; i++) {\n    Rows.push(<Row key={i} nr={String(i + 1)} />)\n  }\n\n  return (\n    <Table.ScrollView top>\n      <Table accordion border outline size=\"medium\" {...props}>\n        <caption className=\"dnb-sr-only\">A Table Caption</caption>\n\n        <thead>\n          <Tr>\n            <Th>Column A</Th>\n            <Th>Column B</Th>\n            <Th>Column C</Th>\n            <Th align=\"right\">Column D</Th>\n          </Tr>\n        </thead>\n\n        <tbody>{Rows}</tbody>\n      </Table>\n    </Table.ScrollView>\n  )\n}\n\nexport const SkipContentInfo1 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <section aria-labelledby=\"heading-id\">\n      <H2 id=\"heading-id\">Description of table</H2>\n\n      <SkipContent selector=\"#my-selector\" text=\"Skip table content\" />\n\n      <Table aria-labelledby=\"heading-id\">table content</Table>\n    </section>\n\n    <section id=\"my-selector\" aria-label=\"Submit\">\n      <div id=\"submit-form\" />\n    </section>\n  </ComponentBox>\n)\n\nexport const SkipContentInfo2 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <section aria-labelledby=\"table-id\">\n      <SkipContent selector=\".my-selector\">Skip table content</SkipContent>\n\n      <Table id=\"table-id\">\n        <caption>Description of table</caption>\n      </Table>\n\n      <div className=\"my-selector\">\n        <SkipContent.Return\n          selector=\".my-selector\" // same as SkipContent\n          text=\"Back to beginning of table\"\n        />\n\n        <div id=\"submit-form\" />\n      </div>\n    </section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","strong","ul","li","ol","h3","h4","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","SkipContentInfo1","SkipContentInfo2","href","wrapper","MDXLayout","SkipContentTable","LargeTableWithInteractiveElements","TdCheckbox","label","label_sr_only","TdInput","size","Row","spacing","align","top","Rows","i","l","nr","String","accordion","border","outline","className"],"sourceRoot":""}