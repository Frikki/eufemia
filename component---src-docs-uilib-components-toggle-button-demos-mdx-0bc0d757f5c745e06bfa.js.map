{"version":3,"file":"component---src-docs-uilib-components-toggle-button-demos-mdx-0bc0d757f5c745e06bfa.js","mappings":"6NASO,MAAMA,EAAwB,8HAMxBC,EAAsB,2OAatBC,EAAsB,4YAgBtBC,EAA0B,obAiB1BC,EAAuB,2cAkBvBC,EAAqB,+ZAiBrBC,EAA6B,0hBA0B7BC,EAA4B,2UAc5BC,EAAqB,4bAoBrBC,EAAuB,0PCxJpC,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9BO,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAC7BM,SAAU,2BACR,MAAMC,EAAAA,EAAAA,KAAKvB,EAAuB,CAAC,GAAI,MAAMuB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACpEM,SAAU,yBACR,MAAMC,EAAAA,EAAAA,KAAKtB,EAAqB,CAAC,GAAI,MAAMsB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAClEM,SAAU,+BACR,MAAMC,EAAAA,EAAAA,KAAKrB,EAAqB,CAAC,GAAI,MAAMqB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CAClEM,SAAU,oCACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAyB,CAAC,GAAI,MAAMiB,EAAAA,EAAAA,MAAMR,EAAYI,GAAI,CACvEM,SAAU,CAAC,6CAA6CC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CAC7EK,SAAU,aACR,iBAAiBC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CAC1CK,SAAU,mBAEV,MAAMC,EAAAA,EAAAA,KAAKnB,EAAsB,CAAC,GAAI,MAAMgB,EAAAA,EAAAA,MAAMR,EAAYI,GAAI,CACpEM,SAAU,CAAC,0BAA0BC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CAC1DK,SAAU,gBACR,4BACF,MAAMC,EAAAA,EAAAA,KAAKlB,EAAoB,CAAC,GAAI,MAAMe,EAAAA,EAAAA,MAAMR,EAAYI,GAAI,CAClEM,SAAU,CAAC,6DAA6DC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CAC7FK,SAAU,aAEV,MAAMC,EAAAA,EAAAA,KAAKjB,EAA4B,CAAC,GAAI,MAAMiB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACzEM,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAA2B,CAAC,GAAI,MAAMgB,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACxEM,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAoB,CAAC,GAAI,MAAMe,EAAAA,EAAAA,KAAKX,EAAYI,GAAI,CACjEM,SAAU,kCACR,MAAMC,EAAAA,EAAAA,KAAKd,EAAsB,CAAC,KAEzC,CAOD,MANA,SAAoBE,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOM,GAAYF,EAAAA,EAAAA,KAAKE,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAUC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EACzB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { ToggleButton, HelpButton } from '@dnb/eufemia/src'\n\nexport const ToggleButtonUnchecked = () => (\n  <ComponentBox data-visual-test=\"toggle-button-default\">\n    <ToggleButton label=\"Label:\" text=\"Toggle Me\" />\n  </ComponentBox>\n)\n\nexport const ToggleButtonChecked = () => (\n  <ComponentBox data-visual-test=\"toggle-button-checked\">\n    <ToggleButton\n      label=\"Label:\"\n      text=\"Checked ToggleButton\"\n      checked\n      on_change={({ checked }) => {\n        console.log('on_change', checked)\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const ToggleButtonDefault = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-default\">\n    <ToggleButton.Group\n      label=\"ToggleButton Group:\"\n      value=\"first\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonMultiselect = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-multiselect\">\n    <ToggleButton.Group\n      label=\"Multi-select:\"\n      multiselect={true}\n      values={['first', 'third']}\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonVertical = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-vertical\">\n    <ToggleButton.Group\n      label=\"Vertical Group:\"\n      layout_direction=\"column\"\n      multiselect={true}\n      variant=\"checkbox\"\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonStatus = () => (\n  <ComponentBox>\n    <ToggleButton.Group\n      label=\"ToggleButton Group with status:\"\n      status=\"Error message\"\n      multiselect={true}\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" checked />\n      <ToggleButton text=\"Third\" value=\"third\" checked={true} />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonStatusMessages = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-status\">\n    <ToggleButton.Group\n      label=\"ToggleButtons with status:\"\n      variant=\"radio\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" status=\"error\" />\n      <ToggleButton\n        text=\"Second\"\n        value=\"second\"\n        checked\n        status=\"Error message\"\n      />\n      <ToggleButton\n        text=\"Third\"\n        value=\"third\"\n        status=\"Info message\"\n        status_state=\"info\"\n      />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonDisabledGroup = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-disabled\">\n    <ToggleButton.Group\n      label=\"Disabled Group:\"\n      disabled\n      variant=\"checkbox\"\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonSuffix = () => (\n  <ComponentBox>\n    <ToggleButton.Group\n      label=\"With suffixes:\"\n      suffix={<HelpButton title=\"Group suffix\">Group suffix</HelpButton>}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton\n        text=\"Second\"\n        value=\"second\"\n        status=\"Error message\"\n        suffix={\n          <HelpButton title=\"Button suffix\">Button suffix</HelpButton>\n        }\n      />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonIconOnly = () => (\n  <ComponentBox>\n    <ToggleButton.Group label=\"Icons only:\">\n      <ToggleButton icon=\"bell\" value=\"first\" checked />\n      <ToggleButton icon=\"loupe\" value=\"second\" />\n      <ToggleButton icon=\"calendar\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ToggleButtonUnchecked, ToggleButtonChecked, ToggleButtonDefault, ToggleButtonMultiselect, ToggleButtonVertical, ToggleButtonStatus, ToggleButtonStatusMessages, ToggleButtonDisabledGroup, ToggleButtonSuffix, ToggleButtonIconOnly} from 'Docs/uilib/components/toggle-button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Unchecked ToggleButton\"\n    }), \"\\n\", _jsx(ToggleButtonUnchecked, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Checked ToggleButton\"\n    }), \"\\n\", _jsx(ToggleButtonChecked, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multi-select ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonMultiselect, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Vertical aligned ToggleButton group with \", _jsx(_components.code, {\n        children: \"checkbox\"\n      }), \" variant and \", _jsx(_components.code, {\n        children: \"multiselect\"\n      })]\n    }), \"\\n\", _jsx(ToggleButtonVertical, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"ToggleButton group as \", _jsx(_components.code, {\n        children: \"multiselect\"\n      }), \" with a status message\"]\n    }), \"\\n\", _jsx(ToggleButtonStatus, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"ToggleButton with status messages and a group variant as \", _jsx(_components.code, {\n        children: \"radio\"\n      })]\n    }), \"\\n\", _jsx(ToggleButtonStatusMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonDisabledGroup, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"ToggleButtons with a suffix\"\n    }), \"\\n\", _jsx(ToggleButtonSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"ToggleButtons with icons only\"\n    }), \"\\n\", _jsx(ToggleButtonIconOnly, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["ToggleButtonUnchecked","ToggleButtonChecked","ToggleButtonDefault","ToggleButtonMultiselect","ToggleButtonVertical","ToggleButtonStatus","ToggleButtonStatusMessages","ToggleButtonDisabledGroup","ToggleButtonSuffix","ToggleButtonIconOnly","_createMdxContent","props","_components","Object","assign","h2","h3","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}