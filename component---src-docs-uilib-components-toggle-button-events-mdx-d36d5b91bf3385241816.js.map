{"version":3,"file":"component---src-docs-uilib-components-toggle-button-events-mdx-d36d5b91bf3385241816.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/events.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"ToggleButton\"\n      }), \" events\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_change\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on state changes made by the user. Returns a boolean and string \", _jsx(_components.code, {\n              children: \"{ checked, value, event }\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"ToggleButton.Group\"\n      }), \" events\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_change\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called once a ToggleButton button changes the state. Returns an object \", _jsx(_components.code, {\n              children: \"{ value, values, event }\"\n            }), \". \", _jsx(\"br\", {}), _jsx(\"br\", {}), \" \", _jsx(_components.strong, {\n              children: \"NB\"\n            }), \": \", _jsx(_components.code, {\n              children: \"values\"\n            }), \" is only available if \", _jsx(_components.code, {\n              children: \"multiselect\"\n            }), \" is used / true.\"]\n          })]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","code","table","thead","tr","th","tbody","td","em","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}