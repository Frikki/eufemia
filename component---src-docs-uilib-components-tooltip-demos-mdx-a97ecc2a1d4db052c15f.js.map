{"version":3,"file":"component---src-docs-uilib-components-tooltip-demos-mdx-a97ecc2a1d4db052c15f.js","mappings":"6NASO,MAAMA,EAAwB,+GAMxBC,EAAuB,uGAMvBC,EAAuB,6KASvBC,EAA0B,yXAsB1BC,EAA6B,sFAM7BC,EAAoC,qHCtDjD,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CAC7BO,SAAU,8BACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAuB,CAAC,GAAI,MAAMoB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACpEO,SAAU,+BACR,MAAMC,EAAAA,EAAAA,KAAKnB,EAAsB,CAAC,GAAI,MAAMmB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACnEO,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAA4B,CAAC,GAAI,MAAMa,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CACzEM,SAAU,CAAC,8BAA8BC,EAAAA,EAAAA,KAAKZ,EAAYM,EAAG,CAC3DO,KAAM,kCACNF,SAAU,iBACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAmC,CAAC,GAAI,MAAMe,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CAChFO,SAAU,oCACR,MAAMC,EAAAA,EAAAA,KAAKjB,EAAyB,CAAC,GAAI,MAAMiB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACtEO,SAAU,uCACR,MAAMC,EAAAA,EAAAA,KAAKlB,EAAsB,CAAC,KAEzC,CAOD,MANA,SAAoBK,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EACzB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Button, Tooltip, Span, NumberFormat } from '@dnb/eufemia/src'\n\nexport const TooltipExampleDefault = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover\">\n    <Button tooltip=\"Tooltip\" text=\"Hover\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleActive = () => (\n  <ComponentBox>\n    <Button tooltip={<Tooltip active>Tooltip</Tooltip>} text=\"Active\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleLinked = () => (\n  <ComponentBox>\n    <button className=\"target-1\">Show the Tooltip</button>\n    <Tooltip id=\"unique\" active targetSelector=\".target-1\">\n      Tooltip\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAnimation = () => (\n  <ComponentBox data-visual-test=\"tooltip-large\">\n    <Tooltip\n      animatePosition\n      group=\"animatePosition\"\n      hideDelay={1e3}\n      size=\"large\"\n      targetElement={<Span right>Top</Span>}\n    >\n      Tooltip 1\n    </Tooltip>\n    <Tooltip\n      animatePosition\n      group=\"animatePosition\"\n      position=\"bottom\"\n      targetElement={<Span>Bottom</Span>}\n    >\n      Tooltip 2\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormat = () => (\n  <ComponentBox>\n    <NumberFormat tooltip=\"Tooltip\">1234</NumberFormat>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormatWrapped = () => (\n  <ComponentBox>\n    <Tooltip targetElement={<NumberFormat>1234</NumberFormat>}>\n      Tooltip\n    </Tooltip>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TooltipExampleDefault, TooltipExampleAnimation, TooltipExampleNumberFormat, TooltipExampleNumberFormatWrapped, TooltipExampleLinked, TooltipExampleActive} from 'Docs/uilib/components/tooltip/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with hover Tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with active Tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleActive, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat with a tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleNumberFormat, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"... or wrapped around the \", _jsx(_components.a, {\n        href: \"/uilib/components/number-format\",\n        children: \"NumberFormat\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(TooltipExampleNumberFormatWrapped, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip with position animation\"\n    }), \"\\n\", _jsx(TooltipExampleAnimation, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip linked to a vanilla button\"\n    }), \"\\n\", _jsx(TooltipExampleLinked, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["TooltipExampleDefault","TooltipExampleActive","TooltipExampleLinked","TooltipExampleAnimation","TooltipExampleNumberFormat","TooltipExampleNumberFormatWrapped","_createMdxContent","props","_components","Object","assign","h2","h3","p","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","wrapper","MDXLayout"],"sourceRoot":""}