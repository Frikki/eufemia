{"version":3,"file":"component---src-docs-uilib-components-upload-events-mdx-eb541ff16e266bea217b.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYG,GAAI,CAC9Bc,SAAU,WACR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYI,MAAO,CACjCa,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYK,MAAO,CACjCY,UAAUF,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC9BW,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYO,GAAI,CAC9BU,SAAU,YACRC,EAAAA,EAAAA,KAAKlB,EAAYO,GAAI,CACvBU,SAAU,sBAGZF,EAAAA,EAAAA,MAAMf,EAAYQ,MAAO,CAC3BS,SAAU,EAACF,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC/BW,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYS,GAAI,CAC9BQ,UAAUC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAC/BO,SAAU,gBAEVF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBQ,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYW,GAAI,CAC9BM,SAAU,eACR,uBAAuBC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAChDO,SAAU,UACR,qDAAqDC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAC9EO,SAAU,cACR,wBAAwBC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CACjDO,SAAU,aACR,YAEJF,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBW,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYS,GAAI,CAC9BQ,UAAUC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAC/BO,SAAU,oBAEVF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBQ,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYW,GAAI,CAC9BM,SAAU,eACR,uFAAuFC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAChHO,SAAU,iBACR,gBAIR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYY,EAAG,CAC7BK,SAAU,CAAC,SAASC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CACzCO,SAAU,aACR,oBAAoBC,EAAAA,EAAAA,KAAKlB,EAAYU,KAAM,CAC7CO,SAAU,iBACR,qEAGV,CAOA,UANA,SAAoBlB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOM,GAAYF,EAAAA,EAAAA,KAAKE,EAAWnB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DkB,UAAUC,EAAAA,EAAAA,KAAKpB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/upload/events.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onChange\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on \", _jsx(_components.code, {\n              children: \"files\"\n            }), \" changes made by the user. Access the files with \", _jsx(_components.code, {\n              children: \"{ files }\"\n            }), \" (containing each a \", _jsx(_components.code, {\n              children: \"fileItem\"\n            }), \").\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onFileDelete\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called once a file gets deleted by the user. Access the deleted file with \", _jsx(_components.code, {\n              children: \"{ fileItem }\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each \", _jsx(_components.code, {\n        children: \"fileItem\"\n      }), \" will contain a \", _jsx(_components.code, {\n        children: \"{ file, id }\"\n      }), \" (File Object and an unique ID) along with other information.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","p","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}