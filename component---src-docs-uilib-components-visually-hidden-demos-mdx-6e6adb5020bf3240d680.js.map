{"version":3,"file":"component---src-docs-uilib-components-visually-hidden-demos-mdx-6e6adb5020bf3240d680.js","mappings":"6NASO,MAAMA,EAAwB,2LAUxBC,EAA0B,0LAQ1BC,EAAwB,yKAQxBC,EAAwB,4fC/BrC,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CAC7BO,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKlB,EAAuB,CAAC,GAAI,MAAMkB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACpEO,SAAU,0CACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CAC7BM,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CACxCK,SAAU,mBACR,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CACnCK,SAAU,qBACR,0MACF,MAAMC,EAAAA,EAAAA,KAAKjB,EAAyB,CAAC,GAAI,MAAMiB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACtEO,SAAU,4CACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAuB,CAAC,GAAI,MAAMgB,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CACpEO,SAAU,uCACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAuB,CAAC,KAE1C,CAOD,MANA,SAAoBE,QAAY,IAAZA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOM,GAAYF,EAAAA,EAAAA,KAAKE,EAAWb,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EACzB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/visually-hidden/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/visually-hidden/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { VisuallyHidden, Section, Anchor, P } from '@dnb/eufemia/src'\n\nexport const VisuallyHiddenDefault = () => (\n  <ComponentBox data-visual-test=\"visually-hidden-default\">\n    <P>\n      <span>before|</span>\n      <VisuallyHidden>hidden content</VisuallyHidden>\n      <span>|after</span>\n    </P>\n  </ComponentBox>\n)\n\nexport const VisuallyHiddenFocusable = () => (\n  <ComponentBox data-visual-test=\"visually-hidden-focusable\">\n    <VisuallyHidden focusable>\n      <Anchor href=\"/\">Hidden, but focusable content</Anchor>\n    </VisuallyHidden>\n  </ComponentBox>\n)\n\nexport const VisuallyHiddenUseCase = () => (\n  <ComponentBox data-visual-test=\"visually-hidden-use-case\">\n    <Anchor href=\"/\">\n      Read more <VisuallyHidden>about Eufemia</VisuallyHidden>\n    </Anchor>\n  </ComponentBox>\n)\n\nexport const VisuallyHiddenSection = () => (\n  <ComponentBox data-visual-test=\"visually-hidden-element\">\n    {() => {\n      const Box = styled.div`\n        width: 1rem;\n        height: 1rem;\n      `\n      const BoxBefore = styled(Box)`\n        background-color: var(--color-summer-green);\n      `\n      const BoxAfter = styled(Box)`\n        background-color: var(--color-emerald-green);\n      `\n      return (\n        <>\n          <BoxBefore />\n          <VisuallyHidden aria-label=\"I'm a region\" element={Section}>\n            <P>but, not visible to you!</P>\n          </VisuallyHidden>\n          <BoxAfter />\n        </>\n      )\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {VisuallyHiddenDefault, VisuallyHiddenFocusable, VisuallyHiddenSection, VisuallyHiddenUseCase} from 'Docs/uilib/components/visually-hidden/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"VisuallyHidden\"\n    }), \"\\n\", _jsx(VisuallyHiddenDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"VisuallyHidden with focusable content\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"VisuallyHidden\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"focusable={true}\"\n      }), \" to visually hide an element by default, but to display it when itâ€™s focused (e.g. by a keyboard-only user). The container will be displayed when any child element of the container receives focus.\"]\n    }), \"\\n\", _jsx(VisuallyHiddenFocusable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"VisuallyHidden with example of use case\"\n    }), \"\\n\", _jsx(VisuallyHiddenUseCase, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"VisuallyHidden with custom element\"\n    }), \"\\n\", _jsx(VisuallyHiddenSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["VisuallyHiddenDefault","VisuallyHiddenFocusable","VisuallyHiddenUseCase","VisuallyHiddenSection","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}