{"version":3,"file":"component---src-docs-uilib-elements-paragraph-mdx-58a952c4adf8e08b2026.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport Anchor from '@dnb/eufemia/src/components/Anchor'\nimport P from '@dnb/eufemia/src/elements/P'\n\nconst Case = styled.span`\n  display: block;\n  padding: 0.25rem 0;\n`\n\nexport function ParagraphDefault() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-default\"\n    >\n      <P>\n        <Case>Here is a paragraph text</Case>\n        <Case>\n          <Anchor href=\"/\">Anchor / Text Link</Anchor>\n        </Case>\n        <Case>\n          <b>Bold paragraph (medium weight)</b>\n        </Case>\n        <Case>\n          <strong>Strong paragraph (medium weight)</strong>\n        </Case>\n        {/* <i>Italic paragraph (Currently not supported by DNB UX)</i> */}\n        {/* <u>Underline paragraph (Currently not supported by DNB UX)</u> */}\n        <Case>Numbers 0123456789</Case>\n        <Case>\n          <code className=\"dnb-code\">Code paragraph</code>\n        </Case>\n        <Case>\n          <cite>Cite paragraph</cite>\n        </Case>\n        <Case>\n          Text <sup>1</sup>{' '}\n          <b>\n            Text <sup>1</sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text{' '}\n          <sup>\n            <Anchor href=\"/\">1</Anchor>\n          </sup>{' '}\n          <b>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text <sub>1</sub>{' '}\n          <b>\n            Text <sub>1</sub>\n          </b>{' '}\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphSmall() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-small\"\n    >\n      <div>\n        <P size=\"small\">\n          <Case>Here is a small paragraph text</Case>\n          <Case>\n            <Anchor href=\"/\">Anchor / Text Link</Anchor>\n          </Case>\n          <Case>\n            <b>Bold paragraph (medium weight)</b>\n          </Case>\n          <Case>\n            <strong>Strong paragraph (medium weight)</strong>\n          </Case>\n          {/* <i>Italic paragraph</i> */}\n          {/* <u>Underline paragraph</u> */}\n          <Case>Numbers 0123456789</Case>\n          <Case>\n            <code className=\"dnb-code\">Code paragraph</code>\n          </Case>\n          <Case>\n            <cite>Cite paragraph</cite>\n          </Case>\n          <Case>\n            Text <sup>1</sup>{' '}\n            <b>\n              Text <sup>1</sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>{' '}\n            <b>\n              Text{' '}\n              <sup>\n                <Anchor href=\"/\">1</Anchor>\n              </sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text <sub>1</sub>{' '}\n            <b>\n              Text <sub>1</sub>\n            </b>{' '}\n          </Case>\n        </P>\n        <P size=\"x-small\">\n          <Case>\n            Here is a x-small paragraph text\n            <br />\n            with a new line.\n          </Case>\n        </P>\n      </div>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphAdditional() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-additional\"\n    >\n      <P>\n        <Case>\n          <i>Italic paragraph</i>\n        </Case>\n        <Case>\n          <u>Underline paragraph</u>\n        </Case>\n        <Case>\n          <Anchor title=\"User Experience\">UX</Anchor>\n        </Case>\n        <Case>\n          <del>Deleted paragraph</del>\n        </Case>\n        <Case>\n          <mark>Marked paragraph</mark>\n        </Case>\n        <Case>\n          <ins>Inserted paragraph</ins>\n        </Case>\n        <Case>\n          Text <sup>Superscript</sup>\n        </Case>\n        <Case>\n          Text <sub>Subscript</sub>\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphModifiers() {\n  return (\n    <ComponentBox data-visual-test=\"paragraph-modifiers\">\n      <div>\n        <P>Default paragraph</P>\n        <P modifier=\"medium\">Medium weight paragraph</P>\n        <P size=\"small\">Small paragraph</P>\n        <P modifier=\"small medium\">Small paragraph with medium weight</P>\n        {/* (Bold is currently not supported by DNB UX) */}\n        {/* <P modifier=\"bold\">Bold weight paragraph</P> */}\n        {/* <P modifier=\"small bold\">Small paragraph with bold weight</P> */}\n      </div>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ParagraphDefault, ParagraphSmall, ParagraphAdditional, ParagraphModifiers} from 'Docs/uilib/elements/paragraph/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Paragraph\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Paragraph class modifiers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia comes with several styles you can use on paragraphs and other HTML text elements:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Weights\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \".dnb-p\"\n        }), \" (Body text)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--medium\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Sizes\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--small\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--x-small\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Variants\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--lead\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Paragraphs in React\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Paragraphs using React JSX.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { P, Lead } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(ParagraphModifiers, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Paragraphs \", _jsx(_components.code, {\n        children: \"basis\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphDefault, {}), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Paragraph \", _jsx(_components.code, {\n        children: \"small\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphSmall, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Additional Paragraph formatting (not defined yet)\"\n    }), \"\\n\", _jsx(ParagraphAdditional, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read more \", _jsx(_components.a, {\n        href: \"/quickguide-designer/fonts/\",\n        children: \"about Fonts in the Designer Guides\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Case","ParagraphDefault","ParagraphSmall","ParagraphAdditional","ParagraphModifiers","_createMdxContent","props","_components","Object","assign","h1","h2","p","strong","ul","li","code","h3","pre","h4","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}