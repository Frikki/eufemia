{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-toggle-mdx-3acb5e0f3a83d410ec92.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Toggle/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Toggle/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field } from '@dnb/eufemia/src/extensions/forms'\nimport { FormError } from '@dnb/eufemia/src/extensions/forms/types'\n\nexport const ValueOn = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"checked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValueOff = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"unchecked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NoValue = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Info = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        info=\"Useful information (?)\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Warning = () => {\n  return (\n    <ComponentBox scope={{ Field, FormError }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        warning={new FormError(\"I'm warning you...\")}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Error = () => {\n  return (\n    <ComponentBox scope={{ Field, FormError }}>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new FormError('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\n// Value types\n\nexport const BooleanValueOn = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={true}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const BooleanValueOff = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={false}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOn = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={100}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOff = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={0}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\n// Variants\n\nexport const VariantButton = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"button\"\n        label=\"Toggle button variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantCheckboxButton = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"checkbox-button\"\n        label=\"Toggle checkbox variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtons = () => {\n  return (\n    <ComponentBox scope={{ Field }}>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        label=\"Buttons variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BooleanValueOff) _missingMdxReference(\"Examples.BooleanValueOff\", true);\n  if (!Examples.BooleanValueOn) _missingMdxReference(\"Examples.BooleanValueOn\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Error) _missingMdxReference(\"Examples.Error\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.NoValue) _missingMdxReference(\"Examples.NoValue\", true);\n  if (!Examples.NumberValueOff) _missingMdxReference(\"Examples.NumberValueOff\", true);\n  if (!Examples.NumberValueOn) _missingMdxReference(\"Examples.NumberValueOn\", true);\n  if (!Examples.ValueOff) _missingMdxReference(\"Examples.ValueOff\", true);\n  if (!Examples.ValueOn) _missingMdxReference(\"Examples.ValueOn\", true);\n  if (!Examples.VariantButton) _missingMdxReference(\"Examples.VariantButton\", true);\n  if (!Examples.VariantButtons) _missingMdxReference(\"Examples.VariantButtons\", true);\n  if (!Examples.VariantCheckboxButton) _missingMdxReference(\"Examples.VariantCheckboxButton\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"On state\"\n    }), \"\\n\", _jsx(Examples.ValueOn, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Off state\"\n    }), \"\\n\", _jsx(Examples.ValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"No value\"\n    }), \"\\n\", _jsx(Examples.NoValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.Error, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value types\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - On state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - Off state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOff, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - On state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - Off state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Button\"\n    }), \"\\n\", _jsx(Examples.VariantButton, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsx(Examples.VariantButtons, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox button\"\n    }), \"\\n\", _jsx(Examples.VariantCheckboxButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Toggle\"\n      }), \" is a base component for allowing the user to toggle between two different values in the target data point.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","ValueOn","ComponentBox","scope","Field","ValueOff","NoValue","Disabled","Warning","FormError","Error","BooleanValueOn","BooleanValueOff","NumberValueOn","NumberValueOff","VariantButton","VariantCheckboxButton","VariantButtons","_components","h2","h3","h4","Examples","_missingMdxReference","id","component","p","code"],"sourceRoot":""}