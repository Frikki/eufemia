{"version":3,"file":"component---src-docs-uilib-extensions-forms-data-context-at-demos-mdx-467ce1fa04c26e3defb5.js","mappings":"mVAOO,MAAMA,EAAOA,KAClBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,YAAA,IACAC,MACA,KAAAC,SAAA,+RAiBaC,EAAcA,KACzBN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,YAAA,IACAC,MAAA,IACAG,MACA,KAAAF,SAAA,2fC7BA,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAsBC,EAAqB,wBAAwB,GACnED,GAAeC,EAAqB,iBAAiB,IACnDC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACL,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAML,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BT,SAAU,YACR,MAAML,EAAAA,EAAAA,KAAKiB,EAAe,CAAC,GAAI,MAAMjB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC5DT,SAAU,iBACR,MAAML,EAAAA,EAAAA,KAAKiB,EAAsB,CAAC,KAE1C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYtB,EAAAA,EAAAA,KAAKsB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUL,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,2HC1Be,SAASG,EACtBjB,GAEA,MAAM,KAAEkB,GAASlB,EACXmB,GAAcC,EAAAA,EAAAA,YAAW1B,EAAAA,EAAY2B,SAE3C,GAAIH,GAAiC,MAAzBA,EAAKI,UAAU,EAAG,GAC5B,MAAM,IAAIN,MACR,kFAIJ,MAAMO,GAAQC,EAAAA,EAAAA,UAAQ,KAAO,IAADC,EAC1B,OACa,QADbA,EACEzB,EAAMuB,aAAK,IAAAE,EAAAA,EACVN,EAAYO,WACJC,IAATT,GACAU,IAAAA,IAAYT,EAAYO,KAAMR,GAC1BU,IAAAA,IAAYT,EAAYO,KAAMR,QAC9BS,CAAS,GAEd,CAACT,EAAMlB,EAAMuB,MAAOJ,EAAYO,OAEnC,MAAO,IACF1B,EACHuB,QAEJ,C,eCvBA,SAASM,EAAgB7B,GACvB,MAAM,UACJ8B,EAAS,MACTC,EAAK,YACLC,EAAW,MACXT,EAAK,OACLU,EAAM,UACNC,EAAS,QACTC,EAAWZ,IAAUA,IACnBN,EAASjB,GAEb,OACET,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CACTN,UAAWA,EACXC,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJI,EAAAA,EAAAA,GAAkBrC,GAAMJ,SAE3BuC,EAAQZ,IAGf,CAEAM,EAAgBS,8BAA+B,EAC/C,QCpBO,SAASC,EACdhB,EACAiB,GAEA,MAAM,kBACJC,EAAiB,aACjBC,EAAY,cACZC,EAAa,cACbC,EAAgB,IAAG,UACnBC,EAAS,OACTC,EAAM,OACNC,GACEP,QAAAA,EAAW,CAAC,EAEVQ,OACUrB,IAAdkB,EAA0BtB,EAAQ0B,KAAKC,IAAI,GAAIL,GAAatB,EAExD4B,OACcxB,IAAlBgB,EACIK,EAAcI,QAAQT,GACtBD,GAEEO,KAAKI,MAAML,EAAgBC,KAAKC,IAAI,GAAIR,IACxCO,KAAKC,IAAI,GAAIR,IACbY,WACFN,EAAcM,WAEdC,OACc5B,IAAlBiB,EACIO,EAAaK,QAAQ,IAAKZ,GAC1BO,EAEAM,OACkB9B,IAAtBc,EACIc,EAAkBC,QAChB,wBACAf,GAEFc,EAEAG,OACO/B,IAAXmB,EACIA,EAASW,EACTA,EAKN,YAFa9B,IAAXoB,EAAuBW,EAAaX,EAASW,CAGjD,CC/CA,SAASC,EAAgB3D,GACvB,MAAM,UACJ8B,EAAS,MACTC,EAAK,YACLC,EAAW,MACXT,EAAK,OACLU,EAAM,UACNC,EAAS,kBACTO,EAAiB,cACjBG,EAAa,aACbF,EAAY,OACZI,EAAM,OACNC,GACE9B,EAASjB,GAEb,OACET,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CACTN,UAAWA,EACXC,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJI,EAAAA,EAAAA,GAAkBrC,GAAMJ,cAEjB+B,IAAVJ,EACGgB,EAAahB,EAAO,CAClBkB,mBACwB,IAAtBA,EAA6B,IAAMA,EACrCG,gBACAF,eACAI,SACAC,WAEF,MAGV,CAEAY,EAAgBrB,8BAA+B,EAC/C,Q,WC9CA,SAASsB,EAAiB5D,GACxB,MAAM6D,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,IAC3B,UAAEhC,EAAS,MAAEC,EAAK,YAAEC,EAAW,UAAEE,EAAS,MAAEX,EAAK,OAAEU,GACvDhB,EAASjB,GAEX,OACET,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CACTN,UAAWA,EACXC,MAAOA,EACPG,UAAWA,EACXF,YAAaA,EACbC,OAAQA,MACJI,EAAAA,EAAAA,GAAkBrC,GAAMJ,UAEjB,IAAV2B,IAA4B,IAAVA,GACL,IAAVA,EACEsC,aAAa,EAAbA,EAAeE,YAAYC,MAAMC,WACjCJ,aAAa,EAAbA,EAAeE,YAAYC,MAAME,UACnC,MAGV,CAEAN,EAAiBtB,8BAA+B,EAChD,QC7BA,SAAS6B,EAASnE,GAAe,IAADoE,EAAAC,EAC9B,MAAMC,EAAqB,IACtBtE,EACH+B,MAAO/B,EAAM+B,MACbU,kBAA0C,QAAzB2B,EAAEpE,EAAMyC,yBAAiB,IAAA2B,EAAAA,EAAI,IAC9CrB,OAAoB,QAAdsB,EAAErE,EAAM+C,cAAM,IAAAsB,EAAAA,EAAI,OAE1B,OAAO9E,EAAAA,EAAAA,KAACoE,EAAe,IAAKW,GAC9B,CAEAH,EAAS7B,8BAA+B,EACxC,QCVA,SAASiC,EAAcvE,GAAe,IAADwE,EACnC,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BW,EAAqB,IACtBzE,EACH+B,MAAkB,QAAbyC,EAAExE,EAAM+B,aAAK,IAAAyC,EAAAA,EAAIX,aAAa,EAAbA,EAAeE,YAAYC,MAAMU,WAEzD,OAAOnF,EAAAA,EAAAA,KAACsC,EAAe,IAAK4C,GAC9B,CAEAF,EAAcjC,8BAA+B,EAC7C,QCXA,SAASqC,EAAM3E,GAAe,IAADwE,EAC3B,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BW,EAAqB,IACtBzE,EACH+B,MAAkB,QAAbyC,EAAExE,EAAM+B,aAAK,IAAAyC,EAAAA,EAAIX,aAAa,EAAbA,EAAeE,YAAYC,MAAMY,YAEzD,OAAOrF,EAAAA,EAAAA,KAACsC,EAAe,IAAK4C,GAC9B,CAEAE,EAAMrC,8BAA+B,EACrC,QCXA,SAASuC,EAAU7E,GAAe,IAADwE,EAC/B,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BgB,EAA0B,IAC3B9E,EACH+B,MAAkB,QAAbyC,EAAExE,EAAM+B,aAAK,IAAAyC,EAAAA,EAAIX,aAAa,EAAbA,EAAeE,YAAYC,MAAMe,gBAEzD,OAAOxF,EAAAA,EAAAA,KAACsC,EAAe,IAAKiD,GAC9B,CAEAD,EAAUvC,8BAA+B,EACzC,QCXA,SAAS0C,EAAShF,GAAe,IAADwE,EAC9B,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BgB,EAA0B,IAC3B9E,EACH+B,MAAkB,QAAbyC,EAAExE,EAAM+B,aAAK,IAAAyC,EAAAA,EAAIX,aAAa,EAAbA,EAAeE,YAAYC,MAAMiB,eAEzD,OAAO1F,EAAAA,EAAAA,KAACsC,EAAe,IAAKiD,GAC9B,CAEAE,EAAS1C,8BAA+B,EACxC,Q,WCPA,SAAS4C,EAAuBlF,GAAe,IAADwE,EAC5C,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BgB,EAA0B,IAC3B9E,EACH+B,MACa,QADRyC,EACHxE,EAAM+B,aAAK,IAAAyC,EAAAA,EACVxE,EAAMiC,QAEH4B,aADAlC,EACAkC,EAAeE,YAAYC,MAAMmB,4BACvChD,QAAUZ,IACR6D,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAY9D,GAAQ,CACzB+D,KAAK,IACJhC,YAEP,OAAO/D,EAAAA,EAAAA,KAACsC,EAAe,IAAKiD,GAC9B,CAEAI,EAAuB5C,8BAA+B,EACtD,QCnBA,SAASiD,EAAYvF,GAAe,IAADwE,EACjC,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BgB,EAA0B,IAC3B9E,EACH+B,MACa,QADRyC,EACHxE,EAAM+B,aAAK,IAAAyC,EAAAA,EACVxE,EAAMiC,QAEH4B,aADAlC,EACAkC,EAAeE,YAAYC,MAAMwB,iBACvCrD,QAAUZ,IACR6D,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAY9D,GAAQ,CACzBkE,OAAO,IACNnC,YAEP,OAAO/D,EAAAA,EAAAA,KAACsC,EAAe,IAAKiD,GAC9B,CAEAS,EAAYjD,8BAA+B,EAC3C,QCnBA,SAASoD,EAAkB1F,GAAe,IAADwE,EACvC,MAAMX,GAAgBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAE3BgB,EAA0B,IAC3B9E,EACH+B,MACa,QADRyC,EACHxE,EAAM+B,aAAK,IAAAyC,EAAAA,EACVxE,EAAMiC,QAEH4B,aADAlC,EACAkC,EAAeE,YAAYC,MAAM2B,uBACvCxD,QAAUZ,IACR6D,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAY9D,GAAQ,CACzBqE,KAAK,IACJtC,YAEP,OAAO/D,EAAAA,EAAAA,KAACsC,EAAe,IAAKiD,GAC9B,CAEAY,EAAkBpD,8BAA+B,ECFjD,MAdc,CACZuD,OAAQhE,EACRiE,OAAQnC,EACRoC,QAASnC,EACTO,SAAQ,EACR6B,KAAMzB,EACNI,MAAK,EACLE,UAAS,EACTG,SAAQ,EACRE,uBAAsB,EACtBK,YAAW,EACXG,kBDMF,E,4FEhBA,SAAStD,EAAWpC,GAClB,MAAM,UAAE8B,EAAS,MAAEC,EAAK,OAAEE,EAAM,YAAED,EAAW,UAAEE,EAAS,SAAEtC,GACxDI,EACF,OACGJ,UAA4D,IAAbA,GAC/CsC,GACAF,GAMDtB,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CACHnE,UAAWoE,IACT,kBACAjE,GAAU,gCACVH,OAEEO,EAAAA,EAAAA,GAAkBrC,GAAMJ,SAAA,CAE3BmC,IACCxC,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,CACRrE,UAAU,+BACVsE,gBAAiBnE,EAAS,aAAe,WAAWrC,SAEnDmC,IAGJnC,QAAAA,GACCL,EAAAA,EAAAA,KAAA,QAAMuC,UAAU,qCAAoClC,SACjDoC,OAtBA,IA2BX,CAEAI,EAAWE,8BAA+B,EAC1C,K","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/hooks/useValue.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/FirstName.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/LastName.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  DataContext,\n  Field,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Path = () => {\n  return (\n    <ComponentBox scope={{ DataContext, Field }}>\n      <DataContext.Provider\n        data={{\n          foo: {\n            one: 1,\n            two: 2,\n          },\n          bar: 'Bar',\n        }}\n      >\n        <DataContext.At path=\"/foo\">\n          <Field.Number path=\"/one\" label=\"One\" />\n          <Field.Number path=\"/two\" label=\"Two\" />\n        </DataContext.At>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n\nexport const IteratePath = () => {\n  return (\n    <ComponentBox scope={{ DataContext, Field, Value }}>\n      <DataContext.Provider\n        data={{\n          list: [\n            {\n              title: 'Object 1',\n            },\n            {\n              title: 'Object 2',\n            },\n          ],\n          bar: 'Bar',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n      >\n        <DataContext.At path=\"/list\" iterate>\n          <Value.String path=\"/title\" label=\"Title\" />\n          <Field.String path=\"/title\" label=\"Title\" />\n        </DataContext.At>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.IteratePath) _missingMdxReference(\"Examples.IteratePath\", true);\n  if (!Examples.Path) _missingMdxReference(\"Examples.Path\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"At path\"\n    }), \"\\n\", _jsx(Examples.Path, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Iterate path\"\n    }), \"\\n\", _jsx(Examples.IteratePath, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport DataContext from '../../DataContext'\nimport type { ValueProps } from '../../value-types'\n\nexport default function useValue<Props extends ValueProps<any>>(\n  props: Props\n): Props {\n  const { path } = props\n  const dataContext = useContext(DataContext.Context)\n\n  if (path && path.substring(0, 1) !== '/') {\n    throw new Error(\n      'Invalid path. Input path JSON Pointers  must be from root (starting with a /).'\n    )\n  }\n\n  const value = useMemo(() => {\n    return (\n      props.value ??\n      (dataContext.data &&\n      path !== undefined &&\n      pointer.has(dataContext.data, path)\n        ? pointer.get(dataContext.data, path)\n        : undefined)\n    )\n  }, [path, props.value, dataContext.data])\n\n  return {\n    ...props,\n    value,\n  }\n}\n","import React from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { forwardSpaceProps } from '../utils'\nimport { useValue } from './hooks'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps & ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsEufemiaSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber, forwardSpaceProps } from '../utils'\nimport ValueBlock from '../ValueBlock'\nimport { useValue } from './hooks'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps &\n  ValueProps<number> & {\n    // Formatting\n    thousandSeparator?: string | true\n    decimalSymbol?: string\n    decimalLimit?: number\n    prefix?: string\n    suffix?: string\n  }\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsEufemiaSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useValue } from './hooks'\nimport { forwardSpaceProps } from '../utils'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = ComponentProps & ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...forwardSpaceProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsEufemiaSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from './Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsEufemiaSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsEufemiaSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsEufemiaSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction FirstName(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.firstNameLabel,\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nFirstName._supportsEufemiaSpacingProps = true\nexport default FirstName\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction LastName(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.lastNameLabel,\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nLastName._supportsEufemiaSpacingProps = true\nexport default LastName\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsEufemiaSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsEufemiaSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsEufemiaSpacingProps = true\nexport default BankAccountNumber\n","import StringComponent from './String'\nimport NumberComponent from './Number'\nimport BooleanComponent from './Boolean'\nimport Currency from './Currency'\nimport DateComponent from './Date'\nimport Email from './Email'\nimport FirstName from './FirstName'\nimport LastName from './LastName'\nimport NationalIdentityNumber from './NationalIdentityNumber'\nimport PhoneNumber from './PhoneNumber'\nimport BankAccountNumber from './BankAccountNumber'\n\nconst Value = {\n  String: StringComponent,\n  Number: NumberComponent,\n  Boolean: BooleanComponent,\n  Currency,\n  Date: DateComponent,\n  Email,\n  FirstName,\n  LastName,\n  NationalIdentityNumber,\n  PhoneNumber,\n  BankAccountNumber,\n}\n\nexport default Value\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport { forwardSpaceProps } from '../utils'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../component-types'\nimport type { ValueProps } from '../value-types'\n\nexport type Props = ComponentProps &\n  Omit<ValueProps<unknown>, 'value'> & {\n    children?: React.ReactNode\n  }\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...forwardSpaceProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsEufemiaSpacingProps = true\nexport default ValueBlock\n"],"names":["Path","_jsx","ComponentBox","scope","DataContext","Field","children","IteratePath","Value","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","useValue","path","dataContext","useContext","Context","substring","value","useMemo","_props$value","data","undefined","pointer","StringComponent","className","label","placeholder","inline","showEmpty","prepare","ValueBlock","forwardSpaceProps","_supportsEufemiaSpacingProps","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","sharedContext","SharedContext","translation","Forms","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","FirstName","stringValueProps","firstNameLabel","LastName","lastNameLabel","NationalIdentityNumber","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","String","Number","Boolean","Date","Span","classnames","FormLabel","label_direction"],"sourceRoot":""}