"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[99276,87185,58925,97030,47049,48012],{6426:function(e,n,t){t.r(n);var s=t(52322),r=t(45392);function d(e){const n=Object.assign({h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{children:"Standard data value component props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Outer DOM element class name"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"value"})}),(0,s.jsx)(n.td,{children:e.type}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Source data value for the input"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"layout"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Layout for the label and input. Can be ",(0,s.jsx)(n.code,{children:"horizontal"})," or ",(0,s.jsx)(n.code,{children:"vertical"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"label"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Field label to show above / before the input feature"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"labelDescription"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"}),' A more discreet text displayed beside the label (i.e for "(optional)")']})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"labelSecondary"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Secondary information displayed at the end of the label line (i.e character counter)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"placeholder"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Text showing in place of the value if no value is given"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"path"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," JSON Pointer for where the data for this input is located in the source dataset (when using DataContext)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"info"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Error"})," or ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Info message shown below / after the input"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"warning"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Error"})," or ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Warning message shown below / after the input"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"error"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Error"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Error message shown below / after the input"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"disabled"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Set ",(0,s.jsx)(n.code,{children:"true"})," to show the field but without the possibility of changing the value."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"emptyValue"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"any"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," The value to use (in ",(0,s.jsx)(n.code,{children:"onChange"})," events etc) when emptying the field. Makes it possible for instance to provide ",(0,s.jsx)(n.code,{children:"undefined"})," instead of an empty string when clearing the content of a text input."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"required"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," When set ",(0,s.jsx)(n.code,{children:"true"}),", the input will give an error if the value cannot be empty."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"schema"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Custom JSON Schema for validating the value."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"validateInitially"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Set true to show validation based errors initially (from given value-prop or source data) before the user interacts with the field."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"validateUnchanged"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Set true to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"continuousValidation"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Set true to show validation based errors continuously while writing, not just when blurring the field."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"errorMessages"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Custom error messages for each type of error, overriding default messages."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"validator"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onBlurValidator"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"toInput"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fromInput"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of ",(0,s.jsx)(n.code,{children:"toInput"}),")."]})]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},4125:function(e,n,t){t.r(n);var s=t(52322),r=t(45392);function d(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,r.ah)(),e.components);return(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onChange"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called on value changes made by the user, with the new value as argument."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onFocus"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onBlur"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument."]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},88016:function(e,n,t){t.r(n);var s=t(52322),r=t(45392),d=t(16299),i=t(51227),c=t(49659),l=t(69765);function o(e){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.default,{}),"\n",(0,s.jsx)(i.default,{}),"\n",(0,s.jsx)(c.default,{}),"\n",(0,s.jsx)(l.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o()}},69765:function(e,n,t){t.r(n);var s=t(52322),r=t(45392),d=t(4125);function i(e){const n=Object.assign({h2:"h2"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Events"}),"\n",(0,s.jsx)(d.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}},16299:function(e,n,t){t.r(n);var s=t(52322),r=t(45392);function d(e){const n=Object.assign({h2:"h2",p:"p",code:"code",h3:"h3",h4:"h4",a:"a"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Iterate.Array"})," works in many ways similar to field-components. It has a ",(0,s.jsx)(n.code,{children:"value"}),"-prop that can receive an array or you can give it a ",(0,s.jsx)(n.code,{children:"path"})," if you want it to retrieve an array from a surrounding ",(0,s.jsx)(n.code,{children:"DataContext"}),". All children components of ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," are rendered once per element the array-value consists of."]}),"\n",(0,s.jsx)(n.h3,{children:"Individual values and dynamic paths"}),"\n",(0,s.jsxs)(n.p,{children:["Since ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," renders its children once per element, the field components inside must receive values based on the different elements in the array. This can be done in two ways:"]}),"\n",(0,s.jsx)(n.h4,{children:"1. elementPath"}),"\n",(0,s.jsxs)(n.p,{children:["If field components inside ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," are given an ",(0,s.jsx)(n.code,{children:"elementPath"})," prop, this will look for values based on the array element being the root of the structure, even if the array often comes from a surrounding data set. This means that you do not need to think about which index the field should point to, because it is handled by ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," internally. You can look at the individual element as its own structure."]}),"\n",(0,s.jsx)(n.h4,{children:"2. Render props"}),"\n",(0,s.jsxs)(n.p,{children:["If you want to be able to provide values to the individual field component directly instead of pointing to them with paths, you can give ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," a render prop. It works a bit like an array-map call. The render function receives the value of the element as the first argument, and the index of which element you are on as the second."]}),"\n",(0,s.jsxs)(n.p,{children:["Examples of both the use of ",(0,s.jsx)(n.code,{children:"elementPath"})," and Render Props in ",(0,s.jsx)(n.code,{children:"Iterate.Array"})," can be found on ",(0,s.jsx)(n.a,{href:"/uilib/extensions/forms/Iterate/Array/demos",children:"demos"}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},49659:function(e,n,t){t.r(n);var s=t(52322),r=t(45392),d=t(6426);function i(e){const n=Object.assign({h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Properties"}),"\n",(0,s.jsx)(d.default,{type:"array"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"spacing"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"string"})," or ",(0,s.jsx)(n.code,{children:"false"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," How much space between sub components. Can be ",(0,s.jsx)(n.code,{children:"medium"}),", ",(0,s.jsx)(n.code,{children:"small"})," or ",(0,s.jsx)(n.code,{children:"false"})," for no spacing."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"width"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"string"})," or ",(0,s.jsx)(n.code,{children:"false"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," ",(0,s.jsx)(n.code,{children:"false"})," for no width (use browser default), ",(0,s.jsx)(n.code,{children:"small"}),", ",(0,s.jsx)(n.code,{children:"medium"})," or ",(0,s.jsx)(n.code,{children:"large"})," for predefined standard widths, ",(0,s.jsx)(n.code,{children:"stretch"})," for fill available width."]})]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-iterate-array-mdx-44942ebc9ca32e51cad4.js.map