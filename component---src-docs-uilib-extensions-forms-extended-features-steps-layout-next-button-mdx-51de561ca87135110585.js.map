{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-next-button-mdx-51de561ca87135110585.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/Context.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/ButtonRow.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/types.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/NextButton/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  StepsLayout,\n  StepsContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout, StepsContext }}>\n      <StepsContext.Provider\n        value={{\n          activeIndex: 0,\n          handlePrevious: () => null,\n          handleNext: () => console.log('handleNext'),\n        }}\n      >\n        <StepsLayout.NextButton />\n      </StepsContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"StepsLayout.NextButton\"\n      }), \" connects to the \", _jsx(_components.code, {\n        children: \"StepsContext\"\n      }), \" to move the user to the next step when clicked.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\n\nexport interface ContextState {\n  /** The dataset for the form / form steps */\n  data: any\n  /** Should the form validate data before submitting? */\n  errors?: Record<string, Error>\n  handlePathChange: (path: string, value: any) => void\n  handleSubmit: () => any\n  // Error status\n  showAllErrors: boolean\n  setShowAllErrors: (showAllErrors: boolean) => void\n  // Mounted fields - Components telling the provider what fields is on screen at any time\n  mountedFieldPaths: string[]\n  handleMountField: (path: string) => void\n  handleUnMountField: (path: string) => void\n  setPathWithError: (path: string, hasError: boolean) => void\n  hasErrors: () => boolean\n  _isInsideFormElement?: boolean\n}\n\nexport const defaultContextState: ContextState = {\n  data: undefined,\n  handlePathChange: () => null,\n  handleSubmit: () => null,\n  showAllErrors: false,\n  setShowAllErrors: () => null,\n  mountedFieldPaths: [],\n  handleMountField: () => null,\n  handleUnMountField: () => null,\n  hasErrors: () => false,\n  setPathWithError: () => null,\n  _isInsideFormElement: false,\n}\n\nconst Context = React.createContext<ContextState>(defaultContextState)\n\nexport default Context\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nfunction ButtonRow(props: Props) {\n  const { className, children } = props\n  return (\n    <Div\n      className={classnames('dnb-forms-button-row', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Div>\n  )\n}\n\nButtonRow._supportsEufemiaSpacingProps = true\nexport default ButtonRow\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'flex-start',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction MainHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level={level || 2}\n      size=\"large\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction SubHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level={level || 3}\n      size=\"medium\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from '../Layout/FlexContainer'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps & {\n  index?: number\n  title?: string\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Step(props: Props) {\n  const {\n    className,\n    index,\n    direction = 'column',\n    spacing = 'medium',\n    children,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-step', className)}\n      direction={direction}\n      spacing={spacing}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nStep._supportsEufemiaSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nNextButton._supportsEufemiaSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/button/Button'\nimport SharedContext from '../../../shared/Context'\nimport StepsContext from './StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPreviousButton._supportsEufemiaSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport ButtonRow from '../Layout/ButtonRow'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...pickSpacingProps(props)}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsEufemiaSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Div\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...pickSpacingProps(props)}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Div>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsEufemiaSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n","import { JSONSchema7 } from 'json-schema'\nimport { SpacingProps } from '../../components/space/types'\n\ninterface IFormErrorOptions {\n  validationRule?: string | string[]\n}\n\n/**\n * Standard error object for Eufemia Forms, extending the built-in error with additional information for data handling\n */\nexport class FormError extends Error {\n  /**\n   * What validation rule did the error occur based on? (i.e: minLength, required or maximum)\n   */\n  validationRule?: string | string[]\n\n  constructor(message: string, options?: IFormErrorOptions) {\n    super(message)\n\n    if (options) {\n      this.validationRule = options.validationRule\n    }\n  }\n}\n\n// Spacing\n\nexport const pickSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): SpacingProps => {\n  return {\n    space: props?.space,\n    top: props?.top,\n    bottom: props?.bottom,\n    left: props?.left,\n    right: props?.right,\n  }\n}\n\nexport const omitSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): Omit<Props, keyof SpacingProps> => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { space, top, bottom, left, right, ...restProps } = props\n  return restProps\n}\n\n// Data value\n\ninterface DefaultErrorMessages {\n  required?: string\n}\n\nexport interface DataValueReadProps<Value = unknown> {\n  /** JSON Pointer for where the data for this field is located in the source dataset */\n  path?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  value?: Value\n}\n\nconst dataValueReadProps = ['path', 'elementPath', 'value']\n\nexport function pickDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): DataValueReadProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): Omit<DataValueReadProps, keyof DataValueReadProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport interface DataValueWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> {\n  emptyValue?: EmptyValue\n  onFocus?: (value: Value | EmptyValue) => void\n  onBlur?: (value: Value | EmptyValue) => void\n  onChange?: (value: Value | EmptyValue) => void\n}\n\nconst dataValueWriteProps = ['emptyValue', 'onFocus', 'onBlur', 'onChange']\n\nexport function pickDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): DataValueWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): Omit<DataValueWriteProps, keyof DataValueWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type DataValueReadWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = DataValueReadProps<Value> & DataValueWriteProps<Value, EmptyValue>\n\nexport function pickDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(props: Props): DataValueReadWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        dataValueReadProps.includes(key) ||\n        dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(\n  props: Props\n): Omit<DataValueReadWriteProps, keyof DataValueReadWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        !dataValueReadProps.includes(key) &&\n        !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type ComponentProps = SpacingProps & {\n  className?: string\n}\n\nexport type DataValueReadComponentProps<Value = unknown> = ComponentProps &\n  DataValueReadProps<Value>\n\nexport type DataValueReadWriteComponentProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = ComponentProps &\n  DataValueReadProps<Value> &\n  DataValueWriteProps<Value, EmptyValue>\n\nexport interface FieldProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n  ErrorMessages extends { required?: string } = DefaultErrorMessages,\n> extends DataValueReadWriteComponentProps<Value, EmptyValue> {\n  /** ID added to the actual field component, and linked to the label via for-attribute */\n  id?: string\n  layout?: 'horizontal' | 'vertical'\n  /** Main label text */\n  label?: string\n  /** A more discreet text displayed beside the label (i.e for \"(optional)\") */\n  labelDescription?: string\n  /** Secondary information displayed at the end of the label line (i.e character counter) */\n  labelSecondary?: string\n  /** Text showing in place of the value if no value is given */\n  placeholder?: string\n  info?: Error | FormError | string\n  warning?: Error | FormError | string\n  error?: Error | FormError\n  disabled?: boolean\n  // Validation\n  required?: boolean\n  schema?: JSONSchema7\n  validator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  onBlurValidator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  /**\n   * Should error messages based on validation be shown initially (from given value-prop or source data)\n   * before the user interacts with the field?\n   * @default false\n   * */\n  validateInitially?: boolean\n  /**\n   * Should error messages be shown when touching (like focusing a field and blurring) without having changed\n   * the value? So the user did not introduce a new error, but it was invalid based on validation initially.\n   */\n  validateUnchanged?: boolean\n  /** Should validation be done while writing, not just when blurring the field? */\n  continuousValidation?: boolean\n  errorMessages?: ErrorMessages\n  // Derivatives\n  toInput?: (external: Value | undefined) => any\n  fromInput?: (...args: any[]) => Value | undefined\n}\n\nexport interface FieldHelpProps {\n  help?: {\n    title?: string\n    contents?: string\n  }\n}\n\nexport interface ValueProps<Value>\n  extends DataValueReadComponentProps<Value> {\n  label?: string\n  /** Should the component render if the value is empty? */\n  showEmpty?: boolean\n  /** Text showing in place of the value if no value is given. */\n  placeholder?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  /** For showing the value inline (not as a block element) */\n  inline?: boolean\n  // Derivatives\n  /** Prepare value for display (regardless of source like props or data context) */\n  prepare?: (external: Value | undefined) => string\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","scope","StepsLayout","StepsContext","_components","h2","Examples","_missingMdxReference","id","component","Error","p","code","defaultContextState","data","undefined","handlePathChange","handleSubmit","showAllErrors","setShowAllErrors","mountedFieldPaths","handleMountField","handleUnMountField","hasErrors","setPathWithError","_isInsideFormElement","Context","React","ButtonRow","className","Div","classnames","pickSpacingProps","_supportsEufemiaSpacingProps","isHeadingElement","element","type","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","top","space","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","FlexContainer","direction","wrap","justify","align","divider","spacing","width","cn","childrenArray","toArray","map","child","i","_ref","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","Space","key","level","Heading","size","Step","index","stepsContext","useContext","activeIndex","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","dataContext","DataContext","setActiveIndex","useState","useCallback","_window","window","scrollTo","behavior","_window2","stepIndicatorData","_child$props$title","title","handleChange","current_step","Provider","value","StepIndicator","Sidebar","sidebar_id","no_animation","on_change","FormError","_Error","message","options","_this","call","validationRule","_inheritsLoose","_wrapNativeSuper","left","right","dataValueReadProps","dataValueWriteProps","omitDataValueReadWriteProps","fromEntries","entries","filter","_ref6","includes"],"sourceRoot":""}