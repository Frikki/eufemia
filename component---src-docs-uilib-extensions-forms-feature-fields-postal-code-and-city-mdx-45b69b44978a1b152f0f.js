"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[80951,32545,11036],{3137:function(n,e,o){o.r(e);var l=o(52322),s=o(45392),a=o(83350),r=o(62002);function t(n){return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.default,{}),"\n",(0,l.jsx)(r.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,l.jsx)(e,Object.assign({},n,{children:(0,l.jsx)(t,n)})):t()}},62002:function(n,e,o){o.r(e),o.d(e,{default:function(){return g}});var l={};o.r(l),o.d(l,{Disabled:function(){return p},Empty:function(){return d},Error:function(){return C},Label:function(){return u},LabelAndValue:function(){return h},Placeholder:function(){return c},ValidationRequired:function(){return x}});var s=o(52322),a=o(45392),r=o(58901),t=o(62282),i=o(27439);const d=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    onChange: (value) => console.log('postalCode onChange', value),\n  }}\n  city={{\n    onChange: (value) => console.log('city onChange', value),\n  }}\n/>\n"}),c=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    placeholder: '????',\n    onChange: (value) => console.log('postalCode onChange', value),\n  }}\n  city={{\n    placeholder: 'Your city..',\n    onChange: (value) => console.log('city onChange', value),\n  }}\n/>\n"}),u=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    label: 'PNR',\n    onChange: (value) => console.log('postalCode onChange', value),\n  }}\n  city={{\n    label: 'CTY',\n    onChange: (value) => console.log('city onChange', value),\n  }}\n/>\n"}),h=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    label: 'Pnr.',\n    value: '0788',\n    onChange: (value) => console.log('postalCode onChange', value),\n  }}\n  city={{\n    value: 'Oslo',\n    onChange: (value) => console.log('city onChange', value),\n  }}\n/>\n"}),p=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    value: '1234',\n    disabled: true,\n    onChange: (value) => console.log('postalCode onChange', value),\n  }}\n  city={{\n    value: 'Oslo',\n    disabled: true,\n    onChange: (value) => console.log('city onChange', value),\n  }}\n/>\n"}),C=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z,FormError:i.Xq},children:"<Field.PostalCodeAndCity\n  postalCode={{}}\n  city={{}}\n  error={new FormError('This is what is wrong...')}\n/>\n"}),x=()=>(0,s.jsx)(r.Z,{scope:{Field:t.Z},children:"<Field.PostalCodeAndCity\n  postalCode={{\n    required: true,\n  }}\n  city={{\n    required: true,\n  }}\n/>\n"});function j(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,a.ah)(),n.components);return l||v("Examples",!1),p||v("Examples.Disabled",!0),d||v("Examples.Empty",!0),C||v("Examples.Error",!0),u||v("Examples.Label",!0),h||v("Examples.LabelAndValue",!0),c||v("Examples.Placeholder",!0),x||v("Examples.ValidationRequired",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:"Demos"}),"\n",(0,s.jsx)(e.h3,{children:"Empty"}),"\n",(0,s.jsx)(d,{}),"\n",(0,s.jsx)(e.h3,{children:"Placeholder"}),"\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(e.h3,{children:"Label"}),"\n",(0,s.jsx)(u,{}),"\n",(0,s.jsx)(e.h3,{children:"Label and value"}),"\n",(0,s.jsx)(h,{}),"\n",(0,s.jsx)(e.h3,{children:"Disabled"}),"\n",(0,s.jsx)(p,{}),"\n",(0,s.jsx)(e.h3,{children:"Error"}),"\n",(0,s.jsx)(C,{}),"\n",(0,s.jsx)(e.h3,{children:"Validation - Required"}),"\n",(0,s.jsx)(x,{})]})}var g=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(j,n)})):j(n)};function v(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},83350:function(n,e,o){o.r(e);var l=o(52322),s=o(45392);function a(n){const e=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre"},(0,s.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h2,{children:"Description"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:"Field.PostalCodeAndCity"})," is a wrapper component for input of two separate values with user experience tailored for postal code and city values."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-jsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\nrender(<Field.PostalCodeAndCity />)\n"})})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,l.jsx)(e,Object.assign({},n,{children:(0,l.jsx)(a,n)})):a(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-postal-code-and-city-mdx-45b69b44978a1b152f0f.js.map