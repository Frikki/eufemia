{"version":3,"file":"component---src-docs-uilib-extensions-forms-field-base-selection-components-selection-properties-mdx-d5083bba4c18f36385eb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Field/base-selection-components/Selection/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Field/input-properties.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport StandardProperties from '../../input-properties.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(StandardProperties, {\n      type: \"number | string\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Component-specific props\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"variant\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Choice of UI feature. Can be: \", _jsx(_components.code, {\n              children: \"dropdown\"\n            }), \", \", _jsx(_components.code, {\n              children: \"radio\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"checkbox\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"width\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" for no width (use browser default), \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"large\"\n            }), \" for predefined standard widths, \", _jsx(_components.code, {\n              children: \"stretch\"\n            }), \" for fill available width.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"children\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"React.Node\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For providing Option components\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Standard input component props\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"data-testid\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Test ID\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"className\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Outer DOM element class name\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"value\"\n            })\n          }), _jsx(_components.td, {\n            children: props.type\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Source data value for the input\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"layout\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Layout for the label and input. Can be \", _jsx(_components.code, {\n              children: \"horizontal\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"vertical\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Field label to show above / before the input feature\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"labelDescription\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" A more discreet text displayed beside the label (i.e for \\\"(optional)\\\")\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"labelSecondary\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Secondary information displayed at the end of the label line (i.e character counter)\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"placeholder\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Text showing in place of the value if no value is given\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"path\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" JSON Pointer for where the data for this input is located in the source dataset (when using DataContext)\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"info\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"Error\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"string\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Info message shown below / after the input\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"warning\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"Error\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"string\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Warning message shown below / after the input\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"error\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Error\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Error message shown below / after the input\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"disabled\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to show the field but without the possibility of changing the value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"emptyValue\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"any\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" The value to use (in \", _jsx(_components.code, {\n              children: \"onChange\"\n            }), \" events etc) when emptying the field. Makes it possible for instance to provide \", _jsx(_components.code, {\n              children: \"undefined\"\n            }), \" instead of an empty string when clearing the content of a text input.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"required\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" When set \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the input will give an error if the value cannot be empty.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"schema\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Custom JSON Schema for validating the value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"validateInitially\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set true to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"validateUnchanged\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set true to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"continuousValidation\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set true to show validation based errors continuously while writing, not just when blurring the field.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"errorMessages\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Custom error messages for each type of error, overriding default messages.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"validator\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"function\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onBlurValidator\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"function\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"toInput\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"function\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"fromInput\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"function\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of \", _jsx(_components.code, {\n              children: \"toInput\"\n            }), \").\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","table","thead","tr","th","tbody","td","code","em","_provideComponents","components","_jsxs","_Fragment","children","_jsx","StandardProperties","type","wrapper","MDXLayout"],"sourceRoot":""}