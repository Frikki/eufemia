{"version":3,"file":"component---src-docs-uilib-extensions-forms-info-mdx-1acd3ebb409c4dcec635.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,sKACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,0IACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,8PACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,GAAI,CAC7BO,SAAU,oCACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,gHACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,qUACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,GAAI,CAC7BO,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYM,IAAK,CAC9BM,UAAUC,EAAAA,EAAAA,KAAKb,EAAYO,KAAM,CAC/BO,UAAW,eACXF,SAAU,+KAIlB,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Reusable components for data input, data display and surrounding layout for simplified user interface creation in React, built on top of base Eufemia components.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The goal of the Forms extension is to make it easy to build forms and other data input features in DNB applications built with React.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The components constitute flexible building blocks that can be used individually, or together for a more practical data flow. They must also be easy to combine with components from other sources and local functionality in the individual application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Data driven and loosely coupled\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The components in Forms are data-driven. This means that they are built on the premises of the source data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A form in a web application usually consists of two \\\"steps\\\". Data in, preferably from a database or a default data set to be distributed in fields on the screen, and data out, where what the user has typed or selected in the components must be collected in a corresponding data set before it is stored or sent to an API.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"How to use\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import '@dnb/eufemia/extensions/forms/style'\\nimport {\\n  Field,\\n  Value,\\n  Layout,\\n  DataContext,\\n  StepsLayout,\\n  ...\\n} from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","pre","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}