{"version":3,"file":"component---src-docs-uilib-extensions-forms-layout-column-demos-mdx-058c06cbfdaa9df29a22.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Layout/Column/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Layout/Column/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/ButtonRow.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/types.ts"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Layout } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ Layout }}>\n      <Layout.Column>\n        <Layout.Card>Card contents</Layout.Card>\n        <Layout.Card>Card contents</Layout.Card>\n        <Layout.Card>Card contents</Layout.Card>\n      </Layout.Column>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  children?: React.ReactNode\n}\n\nfunction ButtonRow(props: Props) {\n  const { className, children } = props\n  return (\n    <Div\n      className={classnames('dnb-forms-button-row', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Div>\n  )\n}\n\nButtonRow._supportsEufemiaSpacingProps = true\nexport default ButtonRow\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'flex-start',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction MainHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level={level || 2}\n      size=\"large\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction SubHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level={level || 3}\n      size=\"medium\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexItem(props: Props) {\n  const { className, grow, shrink, width, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    width && `dnb-forms-flex-item--width-${width}`,\n    className\n  )\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {children}\n    </Div>\n  )\n}\n\nFlexItem._supportsEufemiaSpacingProps = true\nexport default FlexItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem\n      className={classnames('dnb-forms-card', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexItem>\n  )\n}\n\nCard._supportsEufemiaSpacingProps = true\nexport default Card\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nSection._supportsEufemiaSpacingProps = true\nexport default Section\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nRow._supportsEufemiaSpacingProps = true\nexport default Row\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nColumn._supportsEufemiaSpacingProps = true\nexport default Column\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n}\n\nexport default Layout\n","import { JSONSchema7 } from 'json-schema'\nimport { SpacingProps } from '../../components/space/types'\n\ninterface IFormErrorOptions {\n  validationRule?: string | string[]\n}\n\n/**\n * Standard error object for Eufemia Forms, extending the built-in error with additional information for data handling\n */\nexport class FormError extends Error {\n  /**\n   * What validation rule did the error occur based on? (i.e: minLength, required or maximum)\n   */\n  validationRule?: string | string[]\n\n  constructor(message: string, options?: IFormErrorOptions) {\n    super(message)\n\n    if (options) {\n      this.validationRule = options.validationRule\n    }\n  }\n}\n\n// Spacing\n\nexport const pickSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): SpacingProps => {\n  return {\n    space: props?.space,\n    top: props?.top,\n    bottom: props?.bottom,\n    left: props?.left,\n    right: props?.right,\n  }\n}\n\nexport const omitSpacingProps = <Props extends SpacingProps>(\n  props: Props\n): Omit<Props, keyof SpacingProps> => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { space, top, bottom, left, right, ...restProps } = props\n  return restProps\n}\n\n// Data value\n\ninterface DefaultErrorMessages {\n  required?: string\n}\n\nexport interface DataValueReadProps<Value = unknown> {\n  /** JSON Pointer for where the data for this field is located in the source dataset */\n  path?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  value?: Value\n}\n\nconst dataValueReadProps = ['path', 'elementPath', 'value']\n\nexport function pickDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): DataValueReadProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadProps<Props extends DataValueReadProps>(\n  props: Props\n): Omit<DataValueReadProps, keyof DataValueReadProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueReadProps.includes(key)\n    )\n  )\n}\n\nexport interface DataValueWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> {\n  emptyValue?: EmptyValue\n  onFocus?: (value: Value | EmptyValue) => void\n  onBlur?: (value: Value | EmptyValue) => void\n  onChange?: (value: Value | EmptyValue) => void\n}\n\nconst dataValueWriteProps = ['emptyValue', 'onFocus', 'onBlur', 'onChange']\n\nexport function pickDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): DataValueWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(([key]) =>\n      dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueWriteProps<Props extends DataValueWriteProps>(\n  props: Props\n): Omit<DataValueWriteProps, keyof DataValueWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) => !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type DataValueReadWriteProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = DataValueReadProps<Value> & DataValueWriteProps<Value, EmptyValue>\n\nexport function pickDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(props: Props): DataValueReadWriteProps {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        dataValueReadProps.includes(key) ||\n        dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport function omitDataValueReadWriteProps<\n  Props extends DataValueReadWriteProps,\n>(\n  props: Props\n): Omit<DataValueReadWriteProps, keyof DataValueReadWriteProps> {\n  return Object.fromEntries(\n    Object.entries(props ?? {}).filter(\n      ([key]) =>\n        !dataValueReadProps.includes(key) &&\n        !dataValueWriteProps.includes(key)\n    )\n  )\n}\n\nexport type ComponentProps = SpacingProps & {\n  className?: string\n}\n\nexport type DataValueReadComponentProps<Value = unknown> = ComponentProps &\n  DataValueReadProps<Value>\n\nexport type DataValueReadWriteComponentProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n> = ComponentProps &\n  DataValueReadProps<Value> &\n  DataValueWriteProps<Value, EmptyValue>\n\nexport interface FieldProps<\n  Value = unknown,\n  EmptyValue = undefined | string | number,\n  ErrorMessages extends { required?: string } = DefaultErrorMessages,\n> extends DataValueReadWriteComponentProps<Value, EmptyValue> {\n  /** ID added to the actual field component, and linked to the label via for-attribute */\n  id?: string\n  layout?: 'horizontal' | 'vertical'\n  /** Main label text */\n  label?: string\n  /** A more discreet text displayed beside the label (i.e for \"(optional)\") */\n  labelDescription?: string\n  /** Secondary information displayed at the end of the label line (i.e character counter) */\n  labelSecondary?: string\n  /** Text showing in place of the value if no value is given */\n  placeholder?: string\n  info?: Error | FormError | string\n  warning?: Error | FormError | string\n  error?: Error | FormError\n  disabled?: boolean\n  // Validation\n  required?: boolean\n  schema?: JSONSchema7\n  validator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  onBlurValidator?: (\n    value: Value | EmptyValue\n  ) => Error | undefined | Promise<Error | undefined>\n  /**\n   * Should error messages based on validation be shown initially (from given value-prop or source data)\n   * before the user interacts with the field?\n   * @default false\n   * */\n  validateInitially?: boolean\n  /**\n   * Should error messages be shown when touching (like focusing a field and blurring) without having changed\n   * the value? So the user did not introduce a new error, but it was invalid based on validation initially.\n   */\n  validateUnchanged?: boolean\n  /** Should validation be done while writing, not just when blurring the field? */\n  continuousValidation?: boolean\n  errorMessages?: ErrorMessages\n  // Derivatives\n  toInput?: (external: Value | undefined) => any\n  fromInput?: (...args: any[]) => Value | undefined\n}\n\nexport interface FieldHelpProps {\n  help?: {\n    title?: string\n    contents?: string\n  }\n}\n\nexport interface ValueProps<Value>\n  extends DataValueReadComponentProps<Value> {\n  label?: string\n  /** Should the component render if the value is empty? */\n  showEmpty?: boolean\n  /** Text showing in place of the value if no value is given. */\n  placeholder?: string\n  /** JSON Pointer for where the data for this field is located in the source iterate loop element */\n  elementPath?: string\n  /** For showing the value inline (not as a block element) */\n  inline?: boolean\n  // Derivatives\n  /** Prepare value for display (regardless of source like props or data context) */\n  prepare?: (external: Value | undefined) => string\n}\n"],"names":["Default","_jsx","ComponentBox","scope","Layout","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","ButtonRow","className","Div","classnames","pickSpacingProps","_supportsEufemiaSpacingProps","isHeadingElement","element","type","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","React","top","space","undefined","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","FlexContainer","direction","wrap","justify","align","divider","spacing","width","cn","childrenArray","toArray","map","child","i","_ref","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","Space","key","level","Heading","size","FlexItem","grow","shrink","Card","stack","Section","Row","Column","FormError","_Error","message","options","_this","call","validationRule","_inheritsLoose","_wrapNativeSuper","left","right","dataValueReadProps","dataValueWriteProps","omitDataValueReadWriteProps","fromEntries","entries","filter","_ref6","includes"],"sourceRoot":""}