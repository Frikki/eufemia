{"version":3,"file":"component---src-docs-uilib-extensions-forms-visibility-mdx-7b8c040dfc5bd40b2d62.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Visibility.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Visibility/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Visibility/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Visibility/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Visibility/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Visibility/Visibility.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Visibility/info';\nimport Demos from 'Docs/uilib/extensions/forms/Visibility/demos';\nimport Properties from 'Docs/uilib/extensions/forms/Visibility/properties';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {}), \"\\n\", _jsx(Properties, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { DataContext, Visibility } from '@dnb/eufemia/src/extensions/forms'\nimport { defaultContextState } from '@dnb/eufemia/src/extensions/forms/DataContext/Context'\n\nexport const BasedOnBooleanTrue = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Visibility,\n      }}\n    >\n      <Visibility visible={true}>This is visible</Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnBooleanFalse = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Visibility,\n      }}\n    >\n      <Visibility visible={{ foo: 'foo' }.foo === 'bar'}>\n        This is not visible\n      </Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnContext = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Visibility,\n        defaultContextState,\n      }}\n    >\n      <DataContext.Context.Provider\n        value={{\n          ...defaultContextState,\n          data: { toBe: true, notToBe: false },\n        }}\n      >\n        <Visibility pathTrue=\"/toBe\">\n          <p>This will show, as long as `toBe` is true.</p>\n        </Visibility>\n        <Visibility pathTrue=\"/notToBe\">\n          <p>This will not show until `notToBe` is true.</p>\n        </Visibility>\n      </DataContext.Context.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasedOnBooleanFalse) _missingMdxReference(\"Examples.BasedOnBooleanFalse\", true);\n  if (!Examples.BasedOnBooleanTrue) _missingMdxReference(\"Examples.BasedOnBooleanTrue\", true);\n  if (!Examples.BasedOnContext) _missingMdxReference(\"Examples.BasedOnContext\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Direct properties\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanTrue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"False (not visible)\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanFalse, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Based on DataContext\"\n    }), \"\\n\", _jsx(Examples.BasedOnContext, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Visibility\"\n      }), \" component makes it possible to show or hide components on the screen based on the state of data. It can either be fed with the values directly via props, or it can read data from a surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/DataContext/Provider\",\n        children: \"DataContext.Provider\"\n      }), \" and show or hide components based on the data it points to.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"visible\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Control visibility directly by boolean value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathDefined\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be defined to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathUndefined\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be undefined to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathTruthy\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be truthy to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathFalsy\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be falsy to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathTrue\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be true to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pathFalse\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Given data context path must be false to show children.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"inferData\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"function\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Will be called to decide by external logic, and show/hide contents based on the return value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"children\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"React.Node\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(required)\"\n            }), \" Contents.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useContext } from 'react'\nimport pointer from 'json-pointer'\nimport DataContext from '../DataContext'\n\nexport type Props = {\n  visible?: boolean\n  /** Given data context path must be defined to show children */\n  pathDefined?: string\n  /** Given data context path must be undefined to show children */\n  pathUndefined?: string\n  /** Given data context path must be truthy to show children */\n  pathTruthy?: string\n  /** Given data context path must be falsy to show children */\n  pathFalsy?: string\n  /** Given data context path must be true to show children */\n  pathTrue?: string\n  /** Given data context path must be false to show children */\n  pathFalse?: string\n  /** Infer visibility calling given derivative function with the whole data set. Should return true/false for visibility.   */\n  inferData?: (data: unknown) => boolean\n  children: React.ReactNode\n}\n\nexport default function Visibility({\n  visible,\n  pathDefined,\n  pathUndefined,\n  pathTruthy,\n  pathFalsy,\n  pathTrue,\n  pathFalse,\n  inferData,\n  children,\n}: Props) {\n  const dataContext = useContext(DataContext.Context)\n\n  if (visible === false) {\n    return null\n  }\n\n  if (pathDefined && !pointer.has(dataContext.data, pathDefined)) {\n    return null\n  }\n  if (pathUndefined && pointer.has(dataContext.data, pathUndefined)) {\n    return null\n  }\n\n  if (\n    pathTruthy &&\n    (!pointer.has(dataContext.data, pathTruthy) ||\n      !pointer.get(dataContext.data, pathTruthy))\n  ) {\n    return null\n  }\n  if (\n    pathFalsy &&\n    pointer.has(dataContext.data, pathFalsy) &&\n    Boolean(pointer.get(dataContext.data, pathFalsy))\n  ) {\n    return null\n  }\n\n  if (\n    pathTrue &&\n    (!pointer.has(dataContext.data, pathTrue) ||\n      pointer.get(dataContext.data, pathTrue) !== true)\n  ) {\n    return null\n  }\n  if (\n    pathFalse &&\n    (!pointer.has(dataContext.data, pathFalse) ||\n      pointer.get(dataContext.data, pathFalse) !== false)\n  ) {\n    return null\n  }\n\n  if (inferData && !inferData(dataContext.data)) {\n    return null\n  }\n\n  return <>{children}</>\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","Properties","wrapper","MDXLayout","Object","assign","_provideComponents","components","BasedOnBooleanTrue","ComponentBox","scope","Visibility","BasedOnBooleanFalse","BasedOnContext","DataContext","defaultContextState","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","href","table","thead","tr","th","tbody","td","em","_ref","visible","pathDefined","pathUndefined","pathTruthy","pathFalsy","pathTrue","pathFalse","inferData","dataContext","useContext","Context","pointer","data","Boolean"],"sourceRoot":""}