{"version":3,"file":"component---src-docs-uilib-helpers-classes-visual-tests-js-35bae0b0ac3d24172055.js","mappings":"0TAUA,MAAMA,GAAO,6EAIN,SAASC,IACd,OACE,YAASC,UAAT,wfAsBJ,CAAO,SAASC,IACd,OACE,YAASD,UAAT,8VAcJ,CAAO,SAASE,IACd,OACE,YAASF,UAAT,0SAeJ,CAAO,SAASG,IACd,OACE,YAASH,UAAT,uTAeJ,CAAO,SAASI,IACd,OACE,YAASJ,UAAT,uPASH,C,oHCzFc,SAASK,IAqBtB,OAlBAC,EAAAA,WAAgB,KACdC,OAAOC,uBAAsB,KAC3B,IACE,MAAMC,EAAQ,IAAIC,MACZC,EAAWC,SAASC,cACxB,2CACAC,WAAW,GACbL,EAAMM,SAASJ,EAAU,GACzBF,EAAMO,OAAOL,EAAUM,KAAKC,MAAMP,EAASQ,OAAS,IAGpDP,SAASQ,eAAeC,SAASZ,EAClC,CAAC,MAAOa,IACPC,EAAAA,EAAAA,IAAKD,EACN,IAbH,GAeC,KAGD,iCACE,SAAC,KAAD,KACA,SAAC,IAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,MAGL,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/helpers/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/helpers/classes/visual-tests.js"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../shared/tags/ComponentBox'\n\n// have a limit because this page is used for screenshot tests\nconst Wrapper = styled.div`\n  max-width: 40rem;\n`\n\nexport function CoreStyleExample() {\n  return (\n    <Wrapper className=\"dnb-spacing\">\n      <ComponentBox hideCode data-visual-test=\"helper-core-style\">\n        <div className=\"dnb-core-style\">\n          <h3 className=\"dnb-h--medium\">\n            Wrapper with the DNB Body Style (CSS reset)\n          </h3>\n          <p className=\"dnb-p\">\n            Read more about{' '}\n            <code className=\"dnb-code\">.dnb-core-style</code> and{' '}\n            <a\n              href=\"/uilib/usage/customisation/styling#core-style\"\n              className=\"dnb-anchor\"\n            >\n              Use Eufemia Styles elsewhere\n            </a>\n          </p>\n        </div>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport function TabFocusExample() {\n  return (\n    <Wrapper className=\"dnb-spacing\">\n      <ComponentBox hideCode data-visual-test=\"helper-tap-focus\">\n        <details>\n          <summary className=\"dnb-tab-focus\">\n            Try to focus me with the Tab key\n          </summary>\n          My main focus state has been removed and replaced by the helping\n          class <code className=\"dnb-code\">.dnb-tab-focus</code>\n        </details>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport function UnstyledListExample() {\n  return (\n    <Wrapper className=\"dnb-spacing\">\n      <ComponentBox hideCode data-visual-test=\"helper-unstyled-list\">\n        <ul className=\"dnb-unstyled-list\">\n          <li>I'm an unstyled list item</li>\n          <li>Me too!</li>\n        </ul>\n        <hr className=\"dnb-hr\" />\n        <ul className=\"dnb-ul\">\n          <li>But I'm not.</li>\n        </ul>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport function ScreenReaderOnlyExample() {\n  return (\n    <Wrapper className=\"dnb-spacing\">\n      <ComponentBox hideCode data-visual-test=\"helper-sr-only\">\n        <p className=\"dnb-p\">\n          Hidden text\n          <span className=\"dnb-sr-only\">\n            I am only visible to screen readers, so you probably can't see\n            me. Unless you're using a screen reader.\n          </span>\n          !\n        </p>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport function SelectionExample() {\n  return (\n    <Wrapper className=\"dnb-spacing\">\n      <ComponentBox hideCode data-visual-test=\"helper-selection\">\n        <p className=\"dnb-selection dnb-p__size--basis\">\n          If you select a part of this text, you will see the selection\n          highlight is green.\n        </p>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport {\n  CoreStyleExample,\n  TabFocusExample,\n  UnstyledListExample,\n  ScreenReaderOnlyExample,\n  SelectionExample,\n} from '../Examples'\nimport { warn } from '@dnb/eufemia/src/shared/component-helper'\n\nexport default function VisualTests() {\n  // Selects/marks some of the text in SelectionExample on second render tick\n  // For comparing screenshots\n  React.useEffect(() => {\n    window.requestAnimationFrame(() => {\n      try {\n        const range = new Range()\n        const textNode = document.querySelector(\n          '[data-visual-test=\"helper-selection\"] p'\n        ).childNodes[0]\n        range.setStart(textNode, 0)\n        range.setEnd(textNode, Math.floor(textNode.length / 2))\n\n        // apply this range for document selection\n        document.getSelection().addRange(range)\n      } catch (e) {\n        warn(e)\n      }\n    })\n  }, [])\n\n  return (\n    <>\n      <CoreStyleExample />\n      <TabFocusExample />\n      <UnstyledListExample />\n      <ScreenReaderOnlyExample />\n      <SelectionExample />\n    </>\n  )\n}\n"],"names":["Wrapper","CoreStyleExample","className","TabFocusExample","UnstyledListExample","ScreenReaderOnlyExample","SelectionExample","VisualTests","React","window","requestAnimationFrame","range","Range","textNode","document","querySelector","childNodes","setStart","setEnd","Math","floor","length","getSelection","addRange","e","warn"],"sourceRoot":""}