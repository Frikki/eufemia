{"version":3,"file":"component---src-docs-uilib-usage-customisation-theming-theme-mdx-82f30ea5f3dc88b1da37.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/theming/theme.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/theming/theme/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/theming/theme/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/theming/theme/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ThemeInfo from 'Docs/uilib/usage/customisation/theming/theme/info';\nimport ThemeDemos from 'Docs/uilib/usage/customisation/theming/theme/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(ThemeInfo, {}), \"\\n\", _jsx(ThemeDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { P, Logo } from '@dnb/eufemia/src'\nimport { Theme } from '@dnb/eufemia/src/shared'\n\nexport const ThemeBasis = () => (\n  <ComponentBox scope={{ Theme }} data-visual-test=\"theme-basis\">\n    {() => {\n      return (\n        <Theme name=\"sbanken\">\n          <Logo size={40} />\n        </Theme>\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const ThemeMapping = () => (\n  <ComponentBox\n    scope={{ P, Theme }}\n    // data-visual-test=\"theme-basis\"\n  >\n    {() => {\n      const MyMapping = styled.div`\n        .eufemia-theme__sbanken.eufemia-theme__prop-mapping--my-mapping {\n          --color-sea-green: var(--sb-color-purple-alternative);\n        }\n      `\n      const CustomComponent = styled(P)`\n        color: var(--color-sea-green);\n      `\n      return (\n        <MyMapping>\n          <Theme name=\"sbanken\">\n            <Theme propMapping=\"my-mapping\">\n              <CustomComponent>Text with custom color</CustomComponent>\n            </Theme>\n          </Theme>\n        </MyMapping>\n      )\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ThemeBasis, ThemeMapping} from 'Docs/uilib/usage/customisation/theming/theme/Examples';\nimport ChangeStyleTheme from '../../../../../../core/ChangeStyleTheme';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeStyleTheme, {\n      label: \"Change the brand:\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basis example\"\n    }), \"\\n\", _jsx(ThemeBasis, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Basis example \", _jsx(_components.code, {\n        children: \"propMapping\"\n      })]\n    }), \"\\n\", _jsx(ThemeMapping, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    ol: \"ol\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Theme component is a helper component that lets you create nested theming solutions.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"<Theme>\"\n      }), \" Will by default create a \", _jsx(_components.code, {\n        children: \"div\"\n      }), \" wrapper, when no custom element is defined (e.g. \", _jsx(_components.code, {\n        children: \"element=\\\"span\\\"\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Theme, useTheme } from '@dnb/eufemia/shared'\\n\\nconst Component = () => {\\n  const { name, propMapping } = useTheme()\\n  return 'My Component'\\n}\\n\\nrender(\\n  <Theme name=\\\"theme-name\\\">\\n    <App>\\n      <Theme propMapping=\\\"my-class\\\">\\n        <MyComponent />\\n      </Theme>\\n    </App>\\n  </Theme>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Will create the following HTML/CSS classes:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Outer Theme\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"eufemia-theme__theme-name\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Nested Theme\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"eufemia-theme__theme-name\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"eufemia-theme__prop-mapping--my-class\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With that, you can create your own styles that contains the wanted style mapping.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Mapping of properties with \", _jsx(_components.code, {\n        children: \"propMapping\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"WIP:\"\n      }), \" This API may change in future, as it is currently under development. Please get in touch with us before you use it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to change or map CSS properties, you can make use of the \", _jsx(_components.code, {\n        children: \"propMapping\"\n      }), \" solution.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The main motivation of this feature is to provide a set of maps you can use in your app. But it lets you create your own sets as well. To do so;\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Define an area in your app – it could be your component – and give it a declarative name:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Theme } from '@dnb/eufemia/shared'\\n\\nrender(\\n  <Theme propMapping=\\\"my-maps\\\">\\n    <MyComponent />\\n  </Theme>\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Define the needed CSS properties:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".eufemia-theme__theme-name.eufemia-theme__prop-mapping--my-maps {\\n  --color-sea-green: var(--sb-color-purple-alternative);\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Use your component as the wrapper element\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can provide your component as the wrapper. This way no additional HTML Element will be created.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Theme } from '@dnb/eufemia/shared'\\n\\nconst Component = ({ classNamem ...props }) => {\\n  return <div className={classNamem+' more-classes'}></div>\\n}\\n\\nrender(\\n  <Theme name=\\\"theme-name\\\">\\n    <App>\\n      <Theme propMapping=\\\"my-maps\\\" element={Component}>\\n        ...\\n      </Theme>\\n    </App>\\n  </Theme>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Hide or show parts of your component (filter)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With this helper function you show or hide content based on inherited theme properties.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Theme, VisibilityByTheme } from '@dnb/eufemia/shared'\\n\\nrender(\\n  <Theme name=\\\"...\\\">\\n    <VisibilityByTheme visible=\\\"sbanken\\\">\\n      Only shown in Sbanken theme\\n    </VisibilityByTheme>\\n\\n    <VisibilityByTheme hidden=\\\"eiendom\\\">\\n      Only hidden in Eiendom theme\\n    </VisibilityByTheme>\\n\\n    <VisibilityByTheme visible={['sbanken', 'eiendom']}>\\n      Only shown in Sbanken or Eiendom theme\\n    </VisibilityByTheme>\\n\\n    <VisibilityByTheme\\n      visible={[{ name: 'sbanken' }, { name: 'eiendom' }]}\\n    >\\n      Only shown in Sbanken or Eiendom theme\\n    </VisibilityByTheme>\\n\\n    <VisibilityByTheme\\n      visible={[{ name: 'sbanken' }, { name: 'eiendom', variant: 'blue' }]}\\n    >\\n      Only shown in Sbanken then or Eiendom theme – that also includes the\\n      fictive variant=\\\"blue\\\".\\n    </VisibilityByTheme>\\n  </Theme>\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","ThemeInfo","ThemeDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","ThemeBasis","ThemeMapping","_components","h2","h3","code","ChangeStyleTheme","label","p","pre","strong","ul","li","ol","h4","className","start"],"sourceRoot":""}