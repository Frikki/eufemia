{"version":3,"sources":["webpack://dnb-design-system-portal/../node_modules/gatsby-plugin-mdx/index.js","webpack://dnb-design-system-portal/../node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://dnb-design-system-portal/./src/templates/mdx.js"],"names":["MDXRenderer","require","module","React","props","mdxScope","useMDXScope","End","fullScope","keys","Object","values","key","Function","children","fn","Tabbar","tags","ContentWrapper","MdxTemplate","render","location","data","mdx","body","frontmatter","title","description","fullscreen","showTabs","tableOfContents","site","siteMetadata","mainTitle","mainDescription","this","href","includes","global","IS_TEST","window","child","pageTitle","pageDescription","Array","isArray","items","name","content","Boolean","pageContext","usePath","fields","slug","MDXProvider","components","propTypes","PropTypes","isRequired"],"mappings":"6HAMA,MAAMA,EAAcC,EAApB,OAEAC,UAAiB,CACfF,YADFE,I,ikCCRA,MAAMC,EAAQF,EAAd,OACM,IAAC,GAASA,EAAhB,QACM,YAAC,GAAiBA,EAAxB,OAEAC,EAAA,QAAiB,SAAqB,GAIlC,IAJkC,MAAC,EAAD,YAInC,EADEE,EACF,0BACD,MAAMC,EAAWC,EAAjB,GAGMC,EAAMJ,WAAc,KACxB,MACE,OAAO,KAGT,MAAMK,EAAS,kBAAf,GAQMC,EAAOC,YAAb,GACMC,EAASF,OAASG,GAAOJ,EAA/B,KAGA,OAFW,IAAIK,SAAS,SAAb,EAA8B,GAAEC,IAEpCC,CAAG,MAAV,KACC,CAACD,EAlBJ,IAoBA,OAAOX,uBAAP,M,mYCjBF,MAAMa,EAASC,WACTC,EAAiBF,EAAOE,eAEf,MAAMC,UAAoBhB,gBACvCiB,SAAU,IAAD,IACP,MAAM,SACJC,EACAC,MACEC,KAAK,KACHC,EACAC,aAAa,MAAEC,EAAF,YAASC,EAAT,WAAsBC,EAAtB,SAAkCC,GAF5C,gBAGHC,EAHG,SAIHhB,GAEFiB,MACEC,cAAgBN,MAAOO,EAAWN,YAAaO,MAGjDC,KAAK/B,MAELiB,EAASe,MAAQf,EAASe,KAAKC,SAAS,sBAC1CC,IAAOC,SAAU,EACK,oBAAXC,SACTA,OAAOD,SAAU,IAIrB,MAAME,EAAQ3B,EAAS,IAAM,KAC7B,IAAI4B,EAAYhB,EACZiB,EACFhB,IAAec,SAAJ,UAAIA,EAAOhB,mBAAX,aAAI,EAAoBE,cAAeO,EAIG,IAAD,IAE7C,EAHJQ,IAEDA,EADED,GAASG,MAAMC,QAAQf,aAAd,EAAcA,EAAiBgB,OAC7B,GAAEL,SAAH,UAAGA,EAAOhB,mBAAV,aAAG,EAAoBC,WAAvB,UAAkCI,EAAgBgB,MAAM,UAAxD,aAAkC,EAA0BpB,SAE5De,SAAA,UAAAA,EAAOhB,mBAAP,eAAoBC,QAASO,GAI7C,OACE,yBACE,QAAC,IAAD,MACE,qBAAQS,IACR,gBAAMK,KAAK,cAAcC,QAASL,MAGpC,QAAC,IAAD,CACE/B,IAAI,SACJS,SAAUA,EACVO,WACEqB,QAAQrB,IAAeO,KAAK/B,MAAM8C,YAAYtB,YAG/CC,IACC,QAACb,EAAD,GACEJ,IAAI,SACJS,SAAUA,IACLoB,aAAA,EAAAA,EAAOhB,cAAe,GAH7B,CAIE0B,QAAS,MAAOV,SAAA,UAAAA,EAAOW,cAAP,eAAeC,OAAQ,QAI3C,QAACnC,EAAD,MACE,QAAC,EAAAoC,YAAD,CAAaC,WAAYtC,MACvB,QAAC,EAAAjB,YAAD,KAAcwB,QAS5BL,EAAYqC,UAAY,CACtBnC,SAAUoC,sBACVP,YAAaO,UAAgB,CAC3B7B,WAAY6B,WACXC,WACHpC,KAAMmC,UAAgB,CACpBlC,IAAKkC,UAAgB,CACnBjC,KAAMiC,sBACNhC,YAAagC,sBACb3B,gBAAiB2B,sBACjB3C,SAAU2C,uBACTC,WACH3B,KAAM0B,UAAgB,CACpBzB,aAAcyB,wBACbC,aACFA","file":"component---src-templates-mdx-js-13ed25a00c73189ac0a9.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/**\n * MDX Template\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { MDXProvider } from '@mdx-js/react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../shared/parts/Layout'\nimport { Helmet as Head } from 'react-helmet'\nimport tags from '../shared/tags'\n\nconst Tabbar = tags.Tabbar\nconst ContentWrapper = Tabbar.ContentWrapper\n\nexport default class MdxTemplate extends React.PureComponent {\n  render() {\n    const {\n      location,\n      data: {\n        mdx: {\n          body,\n          frontmatter: { title, description, fullscreen, showTabs },\n          tableOfContents,\n          children\n        },\n        site: {\n          siteMetadata: { title: mainTitle, description: mainDescription }\n        }\n      }\n    } = this.props\n\n    if (location.href && location.href.includes('data-visual-test')) {\n      global.IS_TEST = true\n      if (typeof window !== 'undefined') {\n        window.IS_TEST = true\n      }\n    }\n\n    const child = children[1] || null\n    let pageTitle = title\n    let pageDescription =\n      description || child?.frontmatter?.description || mainDescription\n\n    // Extend the title with a sub tab title\n    if (!pageTitle) {\n      if (child && Array.isArray(tableOfContents?.items)) {\n        pageTitle = `${child?.frontmatter?.title} â€“ ${tableOfContents.items[0]?.title}`\n      } else {\n        pageTitle = child?.frontmatter?.title || mainTitle\n      }\n    }\n\n    return (\n      <>\n        <Head>\n          <title>{pageTitle}</title>\n          <meta name=\"description\" content={pageDescription} />\n        </Head>\n\n        <Layout\n          key=\"layout\"\n          location={location}\n          fullscreen={\n            Boolean(fullscreen) || this.props.pageContext.fullscreen\n          }\n        >\n          {showTabs && (\n            <Tabbar\n              key=\"tabbar\"\n              location={location}\n              {...(child?.frontmatter || {})}\n              usePath={'/' + (child?.fields?.slug || '')}\n            />\n          )}\n\n          <ContentWrapper>\n            <MDXProvider components={tags}>\n              <MDXRenderer>{body}</MDXRenderer>\n            </MDXProvider>\n          </ContentWrapper>\n        </Layout>\n      </>\n    )\n  }\n}\n\nMdxTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    fullscreen: PropTypes.bool\n  }).isRequired,\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      body: PropTypes.string.isRequired,\n      frontmatter: PropTypes.object.isRequired,\n      tableOfContents: PropTypes.object.isRequired,\n      children: PropTypes.array.isRequired\n    }).isRequired,\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired\n}\n\nexport const pageQuery = graphql`\n  query MDXQuery($id: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        description\n        fullscreen\n        showTabs\n      }\n      tableOfContents\n      body\n      children {\n        ... on Mdx {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            menuTitle\n            showTabs\n            tabs {\n              title\n              key\n            }\n            hideTabs {\n              title\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}