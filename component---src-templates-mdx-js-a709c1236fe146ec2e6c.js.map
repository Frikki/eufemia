{"version":3,"file":"component---src-templates-mdx-js-a709c1236fe146ec2e6c.js","mappings":"yHAeAA,EAAOC,QAfP,SAAyBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,GAITF,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQS,YAAa,G,sBCVxE,IAAMC,EAAcC,EAApB,OAEAZ,EAAAA,QAAiB,CACfW,YADFX,I,soBCRA,IAAMa,EAAQD,EAAd,OACQE,EAAQF,EAAhB,WACQG,EAAgBH,EAAxB,mBAEAZ,EAAA,QAAiB,SAAqB,GACpCgB,IAAAA,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,OACKC,EAAWJ,EAAjB,GAGMK,EAAMP,EAAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,IAJa,GAAf,GAQMQ,EAAOjB,OAAAA,KAAb,GACMkB,EAASD,EAAAA,KAAS,SAAAnB,GAAG,OAAIkB,EAAJ,MAG3B,OAFW,IAAIG,SAAS,SAAb,KAAX,EAEOC,CAAG,MAAV,KACC,CAACR,EAlBJ,IAoBA,OAAOJ,EAAAA,cAAAA,EAAAA,EAAAA,GAAP,M,mLCjBIa,EAASC,EAAAA,EAAAA,OACTC,EAAiBF,EAAOE,eAETC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA8DlB,OA9DkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WAAU,IAAD,IAuB+C,IAE7C,EAxBT,EAaIC,KAAKb,MAZPc,EADF,EACEA,SADF,IAEEC,KAFF,IAGInB,IACEoB,EAJN,EAIMA,KAJN,IAKMC,YAAeC,EALrB,EAKqBA,MAAOC,EAL5B,EAK4BA,YAAaC,EALzC,EAKyCA,WAAYC,EALrD,EAKqDA,SAC/CC,EANN,EAMMA,gBACAvB,EAPN,EAOMA,SAPN,IASIwB,KACEC,aAAuBC,EAV7B,EAUsBP,MAA+BQ,EAVrD,EAUwCP,YAKlCQ,EAAQ5B,EAAS,IAAM,KACzB6B,EAAYV,EACZW,EACFV,IAAeQ,MAAAA,GAAJ,UAAIA,EAAOV,mBAAX,aAAI,EAAoBE,cAAeO,EAG/CE,IAEDA,EADED,GAASG,MAAMC,QAAQT,MAAAA,OAAd,EAAcA,EAAiBU,QAC3BL,MAAAA,GAAN,UAAMA,EAAOV,mBAAb,aAAM,EAAoBC,OAA1B,iBAAqCI,EAAgBU,MAAM,UAA3D,aAAqC,EAA0Bd,QAE5DS,MAAAA,GAAA,UAAAA,EAAOV,mBAAP,eAAoBC,QAASO,GAI7C,OACE,yBACE,QAAC,IAAD,MACE,qBAAQG,IACR,gBAAMK,KAAK,cAAcC,QAASL,MAGpC,QAAC,IAAD,CACE5C,IAAI,SACJ6B,SAAUA,EACVM,WACEe,QAAQf,IAAeP,KAAKb,MAAMoC,YAAYhB,YAG/CC,IACC,QAACb,GAAD,QACEvB,IAAI,SACJ6B,SAAUA,IACLa,MAAAA,OAAA,EAAAA,EAAOV,cAAe,GAH7B,CAIEoB,QAAS,MAAOV,MAAAA,GAAA,UAAAA,EAAOW,cAAP,eAAeC,OAAQ,QAI3C,QAAC7B,EAAD,MACE,QAAC,EAAA8B,YAAD,CAAaC,WAAYhC,EAAAA,IACvB,QAAC,EAAAhB,YAAD,KAAcuB,QAMzB,EA9DkBL,CAAoBhB,EAAAA","sources":["webpack://dnb-design-system-portal/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://dnb-design-system-portal/./node_modules/gatsby-plugin-mdx/index.js","webpack://dnb-design-system-portal/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://dnb-design-system-portal/./src/templates/mdx.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/**\n * MDX Template\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { MDXProvider } from '@mdx-js/react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../shared/parts/Layout'\nimport { Helmet as Head } from 'react-helmet'\nimport tags from '../shared/tags'\n\nconst Tabbar = tags.Tabbar\nconst ContentWrapper = Tabbar.ContentWrapper\n\nexport default class MdxTemplate extends React.PureComponent {\n  render() {\n    const {\n      location,\n      data: {\n        mdx: {\n          body,\n          frontmatter: { title, description, fullscreen, showTabs },\n          tableOfContents,\n          children,\n        },\n        site: {\n          siteMetadata: { title: mainTitle, description: mainDescription },\n        },\n      },\n    } = this.props\n\n    const child = children[1] || null\n    let pageTitle = title\n    let pageDescription =\n      description || child?.frontmatter?.description || mainDescription\n\n    // Extend the title with a sub tab title\n    if (!pageTitle) {\n      if (child && Array.isArray(tableOfContents?.items)) {\n        pageTitle = `${child?.frontmatter?.title} â€“ ${tableOfContents.items[0]?.title}`\n      } else {\n        pageTitle = child?.frontmatter?.title || mainTitle\n      }\n    }\n\n    return (\n      <>\n        <Head>\n          <title>{pageTitle}</title>\n          <meta name=\"description\" content={pageDescription} />\n        </Head>\n\n        <Layout\n          key=\"layout\"\n          location={location}\n          fullscreen={\n            Boolean(fullscreen) || this.props.pageContext.fullscreen\n          }\n        >\n          {showTabs && (\n            <Tabbar\n              key=\"tabbar\"\n              location={location}\n              {...(child?.frontmatter || {})}\n              usePath={'/' + (child?.fields?.slug || '')}\n            />\n          )}\n\n          <ContentWrapper>\n            <MDXProvider components={tags}>\n              <MDXRenderer>{body}</MDXRenderer>\n            </MDXProvider>\n          </ContentWrapper>\n        </Layout>\n      </>\n    )\n  }\n}\n\nMdxTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    fullscreen: PropTypes.bool,\n  }).isRequired,\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      body: PropTypes.string.isRequired,\n      frontmatter: PropTypes.object.isRequired,\n      tableOfContents: PropTypes.object.isRequired,\n      children: PropTypes.array.isRequired,\n    }).isRequired,\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.object.isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport const pageQuery = graphql`\n  query MDXQuery($id: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        description\n        fullscreen\n        showTabs\n      }\n      tableOfContents\n      body\n      children {\n        ... on Mdx {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            menuTitle\n            showTabs\n            tabs {\n              title\n              key\n            }\n            hideTabs {\n              title\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","Function","fn","Tabbar","tags","ContentWrapper","MdxTemplate","render","this","location","data","body","frontmatter","title","description","fullscreen","showTabs","tableOfContents","site","siteMetadata","mainTitle","mainDescription","child","pageTitle","pageDescription","Array","isArray","items","name","content","Boolean","pageContext","usePath","fields","slug","MDXProvider","components"],"sourceRoot":""}