{"version":3,"file":"e7e3d5f06801e24f10b7c327dd285d769590907e-21b5091d56ebcc147a66.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/SubmitButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/FormElement.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/FormHandler.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/Array.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayPushButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayRemoveElementButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexContainer.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/MainHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/SubHeading.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/FlexItem.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Card.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Section.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Row.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/Column.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Layout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  Iterate,\n  Layout,\n  Field,\n  Value,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { trash as TrashIcon } from '@dnb/eufemia/src/icons'\n\nexport const PrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Field }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['Iron Man', 'Captain America', 'The Hulk']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Field.String elementPath=\"/\" />\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Layout, Field, Value }}>\n      <Iterate.Array\n        label=\"Accounts\"\n        value={[\n          {\n            accountName: 'Brukskonto',\n            accountNumber: '90901134567',\n          },\n          {\n            accountName: 'Sparekonto',\n            accountNumber: '90901156789',\n          },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <h3>\n          <Value.String elementPath=\"/nickname\" />\n        </h3>\n        <Layout.Row>\n          <Field.BankAccountNumber elementPath=\"/accountNumber\" />\n          <Field.String label=\"Account name\" elementPath=\"/accountName\" />\n        </Layout.Row>\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsPrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Field }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['foo', 'bar', 'baz']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {(elementValue) => <Field.String value={elementValue} />}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Layout, Field }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={[\n          { num: 1, txt: 'One' },\n          { num: 2, txt: 'Two' },\n          { num: 3, txt: 'Three' },\n          { num: 4, txt: 'Four' },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {({ num, txt }) => (\n          <Layout.Row width=\"large\">\n            <Field.Number value={num} width=\"small\" />\n            <Field.String value={txt} width={false} />\n          </Layout.Row>\n        )}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ArrayFromFormHandler = () => {\n  return (\n    <ComponentBox\n      scope={{ Iterate, Layout, Field, Value, Form, TrashIcon }}\n    >\n      <Form.Handler\n        data={{\n          avengers: [\n            {\n              nickname: 'Iron Man',\n              firstName: 'Tony',\n              lastName: 'Stark',\n              bornYear: 1970,\n            },\n            {\n              nickname: 'Captain America',\n              firstName: 'Steve',\n              lastName: 'Rogers',\n              bornYear: 1918,\n            },\n          ],\n          alwaysThere: 'Nick Fury',\n        }}\n        onChange={(data) => console.log('Source onChange', data)}\n      >\n        <Layout.MainHeading>Avengers</Layout.MainHeading>\n\n        <Iterate.Array\n          path=\"/avengers\"\n          onChange={(value) => console.log('Iterate onChange', value)}\n        >\n          <Layout.SubHeading>\n            <Value.String elementPath=\"/nickname\" />\n          </Layout.SubHeading>\n\n          <Layout.Row align=\"center\">\n            <Field.String\n              elementPath=\"/firstName\"\n              width=\"medium\"\n              label=\"First name\"\n            />\n            <Field.String\n              elementPath=\"/lastName\"\n              width=\"medium\"\n              label=\"Last name\"\n            />\n            <Field.Number\n              elementPath=\"/bornYear\"\n              label=\"Year of birth\"\n              width=\"small\"\n            />\n            <Iterate.ArrayRemoveElementButton icon={TrashIcon} />\n          </Layout.Row>\n\n          <Field.String path=\"/alwaysThere\" top=\"x-small\" />\n        </Iterate.Array>\n\n        <Iterate.ArrayPushButton\n          top=\"small\"\n          text=\"Add another avenger\"\n          path=\"/avengers\"\n          pushValue={{}}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ArrayFromFormHandler) _missingMdxReference(\"Examples.ArrayFromFormHandler\", true);\n  if (!Examples.ObjectElements) _missingMdxReference(\"Examples.ObjectElements\", true);\n  if (!Examples.PrimitiveElements) _missingMdxReference(\"Examples.PrimitiveElements\", true);\n  if (!Examples.RenderPropsObjectElements) _missingMdxReference(\"Examples.RenderPropsObjectElements\", true);\n  if (!Examples.RenderPropsPrimitiveElements) _missingMdxReference(\"Examples.RenderPropsPrimitiveElements\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primitive elements\"\n    }), \"\\n\", _jsx(Examples.PrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Object elements\"\n    }), \"\\n\", _jsx(Examples.ObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with primitive elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsPrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with object elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With DataContext and add/remove buttons\"\n    }), \"\\n\", _jsx(\"em\", {\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"elementPath\"\n        }), \" points to the root of each iterated element, while \", _jsx(_components.code, {\n          children: \"path\"\n        }), \"\\npoints to the root of the data source.\"]\n      })\n    }), \"\\n\", _jsx(Examples.ArrayFromFormHandler, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../types'\nimport { Button } from '../../../components'\nimport SharedContext from '../../../shared/Context'\nimport Context from '../DataContext/Context'\n\nexport type Props = ComponentProps &\n  Partial<React.HTMLAttributes<HTMLButtonElement | HTMLAnchorElement>>\n\nfunction SubmitButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    children = sharedContext?.translation.Forms.contextSubmit,\n    ...rest\n  } = props\n  const dataContext = useContext(Context)\n\n  return (\n    <Button\n      className={classnames('dnb-forms__submit-button', className)}\n      onClick={\n        dataContext._isInsideFormElement ? null : dataContext.handleSubmit\n      }\n      type=\"submit\"\n      {...rest}\n    >\n      {children}\n    </Button>\n  )\n}\n\nSubmitButton._supportsEufemiaSpacingProps = true\nexport default SubmitButton\n","import React from 'react'\nimport Context from '../DataContext/Context'\nimport Space from '../../../components/space/Space'\nimport classnames from 'classnames'\nimport type { SpacingProps } from '../../../shared/types'\n\nexport type Props = React.HTMLAttributes<HTMLFormElement> & SpacingProps\n\nexport default function FormElement({\n  children,\n  className = null,\n  onSubmit = null,\n  ...rest\n}: Props) {\n  const dataContext = React.useContext(Context)\n\n  /**\n   * Set to true,\n   * this way we prevent \"handleSubmit\" to be called twice when the SubmitButton is pressed.\n   */\n  dataContext._isInsideFormElement = true\n\n  return (\n    <Space\n      element=\"form\"\n      className={classnames('dnb-forms__form', className)}\n      onSubmit={onSubmitHandler}\n      {...rest}\n    >\n      {children}\n    </Space>\n  )\n\n  function onSubmitHandler(event: React.SyntheticEvent<HTMLFormElement>) {\n    event?.preventDefault()\n\n    dataContext?.handleSubmit?.()\n\n    if (typeof onSubmit === 'function') {\n      onSubmit(event)\n    }\n  }\n}\n","import SubmitButton from './SubmitButton'\nimport Element from './FormElement'\nimport Handler from './FormHandler'\n\nconst FormExport = {\n  Handler,\n  Element,\n  SubmitButton,\n}\n\nexport default FormExport\n","import React from 'react'\nimport { JsonObject } from 'json-pointer'\nimport Provider, { Props as ProviderProps } from '../DataContext/Provider'\nimport FormElement from './FormElement'\nimport type { SpacingProps } from '../../../shared/types'\n\nexport type Props = React.HTMLAttributes<HTMLFormElement> & SpacingProps\n\nexport default function FormHandler<Data extends JsonObject>({\n  children,\n  data,\n  schema,\n  onChange,\n  onPathChange,\n  onSubmit,\n  onSubmitRequest,\n  scrollTopOnSubmit,\n  ...rest\n}: ProviderProps<Data> & Props) {\n  const ProviderProps = {\n    data,\n    schema,\n    onChange,\n    onPathChange,\n    onSubmit: (data: Data) => {\n      if (typeof onSubmit === 'function') {\n        onSubmit(data)\n      }\n    },\n    onSubmitRequest,\n    scrollTopOnSubmit,\n  }\n\n  return (\n    <Provider {...ProviderProps}>\n      <FormElement {...rest}>{children}</FormElement>\n    </Provider>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from '../Layout/FlexContainer'\nimport classnames from 'classnames'\nimport pointer from 'json-pointer'\nimport IterateElementContext from './IterateElementContext'\nimport FieldBlock from '../FieldBlock'\nimport { useDataValue } from '../hooks'\nimport { FieldProps, FieldHelpProps, pickSpacingProps } from '../types'\n\ninterface ErrorMessages {\n  required?: string\n  schema?: string\n}\n\nexport type Props = FieldHelpProps &\n  FieldProps<unknown[], undefined, ErrorMessages> & {\n    width?: false | 'small' | 'medium' | 'large' | 'stretch'\n    spacing?: FlexContainerProps['spacing']\n    children:\n      | React.ReactNode\n      | ((value: any, index: number) => React.ReactNode)\n      | Array<\n          | React.ReactNode\n          | ((value: any, index: number) => React.ReactNode)\n        >\n  }\n\nfunction ArrayComponent(props: Props) {\n  const {\n    className,\n    layout = 'vertical',\n    placeholder,\n    label,\n    labelDescription,\n    labelSecondary,\n    path,\n    value: arrayValue,\n    info,\n    warning,\n    error,\n    emptyValue,\n    width,\n    spacing = 'small',\n    handleChange,\n    children,\n  } = useDataValue(props)\n\n  const elementData: {\n    elementValue: unknown\n    handleElementChange: (path: string, value: unknown) => void\n    handleRemoveElement: () => void\n  }[] = useMemo(() => {\n    return (arrayValue ?? []).map((elementValue, elementIndex) => ({\n      elementValue,\n      handleElementChange: (path, value) => {\n        const newArrayValue = structuredClone(arrayValue)\n        pointer.set(newArrayValue, path, value)\n        handleChange?.(newArrayValue)\n      },\n      handleRemoveElement: () => {\n        const newArrayValue = structuredClone(arrayValue)\n        newArrayValue.splice(elementIndex, 1)\n        handleChange?.(newArrayValue)\n      },\n    }))\n  }, [arrayValue, handleChange])\n\n  const handlePush = useCallback(\n    (element: unknown) => {\n      handleChange([...(arrayValue ?? []), element])\n    },\n    [arrayValue, handleChange]\n  )\n\n  return (\n    <FieldBlock\n      className={classnames('dnb-forms-field-number', className)}\n      layout={layout}\n      label={label}\n      labelDescription={labelDescription}\n      labelSecondary={labelSecondary}\n      info={info}\n      warning={warning}\n      error={error}\n      contentsWidth={width !== false ? width : undefined}\n      {...pickSpacingProps(props)}\n    >\n      <FlexContainer\n        direction={layout === 'horizontal' ? 'row' : 'column'}\n        spacing={spacing}\n      >\n        {arrayValue === emptyValue ? (\n          <em>{placeholder}</em>\n        ) : (\n          elementData.map(\n            (\n              { elementValue, handleElementChange, handleRemoveElement },\n              elementIndex\n            ) => {\n              return (\n                <IterateElementContext.Provider\n                  key={`element-${elementIndex}`}\n                  value={{\n                    index: elementIndex,\n                    value: elementValue,\n                    path,\n                    handleChange: handleElementChange,\n                    handleRemove: handleRemoveElement,\n                    handlePush,\n                  }}\n                >\n                  {Array.isArray(children)\n                    ? children.map((childElement) =>\n                        typeof childElement === 'function'\n                          ? childElement(elementValue, elementIndex)\n                          : childElement\n                      )\n                    : typeof children === 'function'\n                    ? children(elementValue, elementIndex)\n                    : children}\n                </IterateElementContext.Provider>\n              )\n            }\n          )\n        )}\n      </FlexContainer>\n    </FieldBlock>\n  )\n}\n\nArrayComponent._supportsEufemiaSpacingProps = true\nexport default ArrayComponent\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/Button'\nimport IterateElementContext from './IterateElementContext'\nimport { useDataValue } from '../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]> & {\n    pushValue: unknown\n  }\n\nfunction ArrayPushButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handlePush } = iterateElementContext ?? {}\n\n  const { pushValue, ...restProps } = props\n  const buttonProps = omitDataValueReadWriteProps(restProps)\n  const { value, handleChange, children } = useDataValue(restProps)\n\n  if (value !== undefined && !Array.isArray(value)) {\n    throw new Error('ArrayPushButton received a non-array value.')\n  }\n\n  const handleClick = useCallback(() => {\n    if (handlePush) {\n      // Inside an Iterate element - make the change through the Iterate component\n      handlePush(pushValue)\n      return\n    }\n\n    // If not inside an iterate, it could still manipulate a source data set through useDataValue\n    handleChange([...(value ?? []), pushValue])\n  }, [value, pushValue, handlePush, handleChange])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-push-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayPushButton._supportsEufemiaSpacingProps = true\nexport default ArrayPushButton\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../components'\nimport { ButtonProps } from '../../../components/Button'\nimport IterateElementContext from './IterateElementContext'\nimport { useDataValue } from '../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]>\n\nfunction ArrayRemoveElementButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handleRemove } = iterateElementContext ?? {}\n\n  if (!iterateElementContext) {\n    throw new Error(\n      'ArrayRemoveElementButton must be inside an Iterate.Array component.'\n    )\n  }\n\n  const buttonProps = omitDataValueReadWriteProps(props)\n\n  const { children } = useDataValue(props)\n\n  const handleClick = useCallback(() => {\n    handleRemove()\n  }, [handleRemove])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-remove-element-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayRemoveElementButton._supportsEufemiaSpacingProps = true\nexport default ArrayRemoveElementButton\n","import ArrayComponent from './Array'\nimport ArrayPushButton from './ArrayPushButton'\nimport ArrayRemoveElementButton from './ArrayRemoveElementButton'\nimport IterateElementContext from './IterateElementContext'\n\nconst Iterate = {\n  Array: ArrayComponent,\n  ArrayPushButton,\n  ArrayRemoveElementButton,\n}\n\nexport default Iterate\n\nexport { IterateElementContext }\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../components'\nimport { Div } from '../../../elements'\nimport * as EufemiaElements from '../../../elements'\nimport { SpaceType } from '../../../components/space/types'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\n\nexport function isHeadingElement(element): boolean {\n  return element.type === MainHeading || element.type === SubHeading\n}\n\nconst getSpaceTop = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.top ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.top\n      : undefined)\n  )\n}\n\nconst getSpaceBottom = (\n  element: React.ReactChild | React.ReactFragment | React.ReactPortal\n): SpaceType | undefined => {\n  if (!React.isValidElement(element)) {\n    return\n  }\n  return (\n    element.props?.bottom ??\n    (typeof element.props?.space === 'object'\n      ? element.props.space.bottom\n      : undefined)\n  )\n}\n\nexport const isEufemiaElement = (element): boolean => {\n  return Object.values(EufemiaElements).some(\n    (eufemiaElement) => element?.type === eufemiaElement\n  )\n}\n\n/**\n * Is the requested element a component that can receive Eufemia space props (space, top, bottom, left and right)?\n */\nexport const isSpacePropsComponent = (\n  element: React.ReactNode\n): boolean => {\n  return (\n    (React.isValidElement(element) &&\n      element?.type?.['_supportsEufemiaSpacingProps'] === true) ||\n    isEufemiaElement(element)\n  )\n}\n\nconst renderWithSpacing = (element: React.ReactNode, props) => {\n  const takesSpaceProps = isSpacePropsComponent(element)\n\n  return takesSpaceProps ? (\n    React.cloneElement(element as React.ReactElement<unknown>, props)\n  ) : (\n    <Div {...props}>{element}</Div>\n  )\n}\n\nexport type Props = ComponentProps & {\n  direction?: 'row' | 'column'\n  wrap?: boolean\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline'\n  divider?: 'space' | 'line'\n  /** Spacing between items inside */\n  spacing?:\n    | false\n    | 'xx-small'\n    | 'x-small'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'x-large'\n    | 'xx-large'\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexContainer(props: Props) {\n  const {\n    className,\n    children,\n    direction = 'column',\n    wrap = false,\n    justify = 'flex-start',\n    align = 'flex-start',\n    divider = 'space',\n    spacing = 'small',\n    width,\n  } = props\n\n  const cn = classnames(\n    'dnb-forms-flex-container',\n    direction && `dnb-forms-flex-container--direction-${direction}`,\n    justify && `dnb-forms-flex-container--justify-${justify}`,\n    align && `dnb-forms-flex-container--align-${align}`,\n    wrap && `dnb-forms-flex-container--wrap`,\n    divider && `dnb-forms-flex-container--divider-${divider}`,\n    spacing && `dnb-forms-flex-container--spacing-${spacing}`,\n    width && `dnb-forms-flex-container--width-${width}`,\n    className\n  )\n  const childrenArray = React.Children.toArray(children)\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {direction === 'column'\n        ? childrenArray.map((child, i) => {\n            // Set spacing on child components by props (instead of CSS) to be able to dynamically override by props on each child. The default\n            // is the spacing-props that controls space between children. Then override with props sent to the children, including both top\n            // and bottom when th\n            const isFirst = i === 0\n            const previousChild = childrenArray?.[i - 1]\n            const currentIsHeading = isHeadingElement(child)\n            const previousWasHeading =\n              i > 0 && isHeadingElement(previousChild)\n\n            // Always set spacing between elements in the column layout on the top props, and 0 on bottom, to avoid\n            // having to divide spacing between both with smaller values.\n            const bottom = 0\n\n            if (\n              divider === 'line' &&\n              // No line above first element\n              !isFirst &&\n              // No line above/below headings\n              !previousWasHeading &&\n              !currentIsHeading\n            ) {\n              const spaceAboveLine =\n                getSpaceBottom(previousChild) ?? spacing\n              const top = getSpaceTop(child) ?? spacing\n\n              return (\n                <React.Fragment key={`element-${i}`}>\n                  <Space top={spaceAboveLine} />\n                  <hr className=\"dnb-forms-flex-container__hr\" />\n                  {renderWithSpacing(child, {\n                    space: { top, bottom },\n                    top,\n                    bottom,\n                  })}\n                </React.Fragment>\n              )\n            }\n\n            const top =\n              // No space above first element.\n              isFirst\n                ? 0\n                : // Since top space of current and bottom space of previous component is the same\n                  getSpaceTop(child) ??\n                  getSpaceBottom(previousChild) ??\n                  spacing\n\n            return renderWithSpacing(child, {\n              key: `element-${i}`,\n              space: { top, bottom },\n              top,\n              bottom,\n            })\n          })\n        : // TODO: Consider doing the same with spacing between horizontal items (direction = row) as vertical\n          children}\n    </Div>\n  )\n}\n\nFlexContainer._supportsEufemiaSpacingProps = true\nexport default FlexContainer\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction MainHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-main-heading', className)}\n      level={level || 2}\n      size=\"large\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nMainHeading._supportsEufemiaSpacingProps = true\nexport default MainHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Heading } from '../../../components'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport type { HeadingLevel } from '../../../components/Heading'\n\nexport type Props = ComponentProps & {\n  level?: HeadingLevel\n  children?: React.ReactNode\n}\n\nfunction SubHeading({ level, ...props }: Props) {\n  const { className, children } = props\n  return (\n    <Heading\n      className={classnames('dnb-forms-sub-heading', className)}\n      level={level || 3}\n      size=\"medium\"\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </Heading>\n  )\n}\n\nSubHeading._supportsEufemiaSpacingProps = true\nexport default SubHeading\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Div } from '../../../elements'\nimport { ComponentProps, pickSpacingProps } from '../types'\n\nexport type Props = ComponentProps & {\n  grow?: boolean\n  shrink?: boolean\n  width?: 'small' | 'medium' | 'large'\n  children: React.ReactNode\n}\n\nfunction FlexItem(props: Props) {\n  const { className, grow, shrink, width, children } = props\n  const cn = classnames(\n    'dnb-forms-flex-item',\n    grow && 'dnb-forms-flex-item--grow',\n    shrink && 'dnb-forms-flex-item--shrink',\n    width && `dnb-forms-flex-item--width-${width}`,\n    className\n  )\n\n  return (\n    <Div className={cn} {...pickSpacingProps(props)}>\n      {children}\n    </Div>\n  )\n}\n\nFlexItem._supportsEufemiaSpacingProps = true\nexport default FlexItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\nimport FlexItem from './FlexItem'\n\nexport type Props = ComponentProps & {\n  stack?: boolean\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Card(props: Props) {\n  const { className, stack, direction, spacing, children } = props\n\n  if (stack) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction=\"column\"\n        divider=\"line\"\n        spacing={spacing ?? 'medium'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  if (direction || spacing) {\n    return (\n      <FlexContainer\n        className={classnames('dnb-forms-card', className)}\n        direction={direction ?? 'column'}\n        divider=\"space\"\n        spacing={spacing ?? 'small'}\n        {...pickSpacingProps(props)}\n      >\n        {children}\n      </FlexContainer>\n    )\n  }\n\n  return (\n    <FlexItem\n      className={classnames('dnb-forms-card', className)}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexItem>\n  )\n}\n\nCard._supportsEufemiaSpacingProps = true\nexport default Card\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps, pickSpacingProps } from '../types'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = ComponentProps & {\n  direction?: FlexContainerProps['direction']\n  spacing?: FlexContainerProps['spacing']\n  children: React.ReactNode\n}\n\nfunction Section(props: Props) {\n  const { className, direction, spacing, children } = props\n  return (\n    <FlexContainer\n      className={classnames('dnb-forms-section', className)}\n      direction={direction ?? 'column'}\n      spacing={spacing ?? 'small'}\n      {...pickSpacingProps(props)}\n    >\n      {children}\n    </FlexContainer>\n  )\n}\n\nSection._supportsEufemiaSpacingProps = true\nexport default Section\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Row({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"row\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nRow._supportsEufemiaSpacingProps = true\nexport default Row\n","import React from 'react'\nimport FlexContainer, {\n  Props as FlexContainerProps,\n} from './FlexContainer'\n\nexport type Props = Omit<FlexContainerProps, 'direction'>\n\nfunction Column({ children, ...props }: Props) {\n  return (\n    <FlexContainer direction=\"column\" {...props}>\n      {children}\n    </FlexContainer>\n  )\n}\n\nColumn._supportsEufemiaSpacingProps = true\nexport default Column\n","import ButtonRow from './ButtonRow'\nimport Card from './Card'\nimport FlexContainer from './FlexContainer'\nimport FlexItem from './FlexItem'\nimport Section from './Section'\nimport MainHeading from './MainHeading'\nimport SubHeading from './SubHeading'\nimport Row from './Row'\nimport Column from './Column'\n\nconst Layout = {\n  ButtonRow,\n  Card,\n  FlexContainer,\n  FlexItem,\n  Section,\n  MainHeading,\n  SubHeading,\n  Row,\n  Column,\n}\n\nexport default Layout\n","import React from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsEufemiaSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../utils'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsEufemiaSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../ValueBlock'\nimport { useDataValue } from '../hooks'\nimport { ValueProps, pickSpacingProps } from '../types'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsEufemiaSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from './Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsEufemiaSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsEufemiaSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsEufemiaSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsEufemiaSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport SharedContext from '../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsEufemiaSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from './String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsEufemiaSpacingProps = true\nexport default BankAccountNumber\n","import StringComponent from './String'\nimport NumberComponent from './Number'\nimport BooleanComponent from './Boolean'\nimport Currency from './Currency'\nimport DateComponent from './Date'\nimport Email from './Email'\nimport NationalIdentityNumber from './NationalIdentityNumber'\nimport PhoneNumber from './PhoneNumber'\nimport BankAccountNumber from './BankAccountNumber'\n\nconst Value = {\n  String: StringComponent,\n  Number: NumberComponent,\n  Boolean: BooleanComponent,\n  Currency,\n  Date: DateComponent,\n  Email,\n  NationalIdentityNumber,\n  PhoneNumber,\n  BankAccountNumber,\n}\n\nexport default Value\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps, pickSpacingProps } from '../types'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsEufemiaSpacingProps = true\nexport default ValueBlock\n"],"names":["PrimitiveElements","_jsx","ComponentBox","scope","Iterate","Field","children","ObjectElements","Layout","Value","RenderPropsPrimitiveElements","RenderPropsObjectElements","ArrayFromFormHandler","Form","TrashIcon","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","SubmitButton","sharedContext","useContext","SharedContext","className","translation","Forms","contextSubmit","rest","dataContext","Context","Button","classnames","onClick","_isInsideFormElement","handleSubmit","type","_supportsEufemiaSpacingProps","FormElement","_ref","onSubmit","React","Space","element","event","_dataContext$handleSu","preventDefault","call","Handler","data","schema","onChange","onPathChange","onSubmitRequest","scrollTopOnSubmit","ProviderProps","Provider","Element","ArrayComponent","layout","placeholder","label","labelDescription","labelSecondary","path","value","arrayValue","info","warning","error","emptyValue","width","spacing","handleChange","useDataValue","elementData","useMemo","map","elementValue","elementIndex","handleElementChange","newArrayValue","structuredClone","pointer","handleRemoveElement","splice","handlePush","useCallback","concat","_toConsumableArray","FieldBlock","contentsWidth","undefined","pickSpacingProps","FlexContainer","direction","IterateElementContext","index","handleRemove","Array","isArray","childElement","ArrayPushButton","iterateElementContext","pushValue","restProps","buttonProps","omitDataValueReadWriteProps","handleClick","on_click","ArrayRemoveElementButton","isHeadingElement","MainHeading","SubHeading","getSpaceTop","_element$props$top","_element$props","_element$props2","top","space","getSpaceBottom","_element$props$bottom","_element$props3","_element$props4","bottom","isSpacePropsComponent","_element$type","values","EufemiaElements","some","eufemiaElement","isEufemiaElement","renderWithSpacing","Div","wrap","justify","align","divider","cn","childrenArray","toArray","child","i","_getSpaceTop2","isFirst","previousChild","currentIsHeading","previousWasHeading","_getSpaceBottom","_getSpaceTop","spaceAboveLine","key","level","Heading","size","FlexItem","grow","shrink","Card","stack","Section","Row","Column","ButtonRow","StringComponent","inline","showEmpty","prepare","ValueBlock","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","NationalIdentityNumber","stringValueProps","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","String","Number","Boolean","Date","Span","FormLabel","label_direction"],"sourceRoot":""}