{"version":3,"file":"f26c969c7a0481db923aebcf52132f9bf3fd090f-77833acc7af440db8445.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\n\nimport Input from '@dnb/eufemia/src/components/input/Input'\nimport styled from '@emotion/styled'\nimport {\n  useLocation,\n  Router as ReachRouter,\n  navigate,\n} from '@reach/router'\nimport { Tabs, Section, H2, P, ToggleButton } from '@dnb/eufemia/src'\n\nconst Router = ReachRouter as any\n\nexport const TabsExampleContentOutside = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Tabs\n        id=\"unique-linked-id\"\n        data={[\n          {\n            title: 'One',\n            key: 'one',\n          },\n          {\n            title: 'Two',\n            key: 'two',\n          },\n        ]}\n      />\n\n      <Tabs.Content id=\"unique-linked-id\">\n        {({ key }) => {\n          return <H2>{key}</H2>\n        }}\n      </Tabs.Content>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleContentObject = () => (\n  <Wrapper>\n    <ComponentBox\n      scope={{ exampleContent }}\n      data-visual-test=\"tabs-tablist\"\n    >\n      <Tabs\n        data={[\n          { title: 'First', key: 'first' },\n          { title: 'Second', key: 'second' },\n          { title: 'Third', key: 'third', disabled: true },\n          { title: 'Fourth', key: 'fourth' },\n        ]}\n      >\n        {exampleContent /* See Example Content below */}\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExamplePrerender = () => (\n  <Wrapper>\n    <ComponentBox>\n      <>\n        <Tabs prerender content_style=\"black-3\">\n          <Tabs.Content title=\"Tab 1\">\n            <H2>Content 1</H2>\n          </Tabs.Content>\n          <Tabs.Content title=\"Tab 2\">\n            <div\n              style={{\n                height: '10rem',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <H2>Content 2</H2>\n            </div>\n          </Tabs.Content>\n          <Tabs.Content title=\"Tab 3\">\n            <div\n              style={{\n                height: '20rem',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <H2>Content 3</H2>\n            </div>\n          </Tabs.Content>\n        </Tabs>\n        <P top>Smile at me ðŸ“¸</P>\n      </>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleUsingData = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"tabs-clickhandler\"\n      scope={{ exampleContent }}\n    >\n      <Tabs\n        data={{\n          first: {\n            title: 'First',\n            // See Example Content below\n            content: exampleContent.first,\n          },\n          second: {\n            title: 'Second',\n            // See Example Content below\n            content: exampleContent.second,\n          },\n        }}\n        // Only use \"on_click\" if you really have to\n        on_click={({ selected_key }) => {\n          console.log('on_click', selected_key)\n        }}\n        // Preferred way to listen on changes\n        on_change={({ selected_key }) => {\n          console.log('on_change', selected_key)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleScrollable = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"tabs-tablist-scrollable\"\n      scope={{ manyTabs, manyTabsContent }}\n    >\n      <Tabs data={manyTabs}>{manyTabsContent}</Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleLeftAligned = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-section-styles\">\n      <Tabs tabs_style=\"mint-green\" content_style=\"black-3\">\n        <Tabs.Content title=\"First\">\n          <Section spacing top bottom style_type=\"white\">\n            <H2 top={0} bottom>\n              First\n            </H2>\n          </Section>\n        </Tabs.Content>\n        <Tabs.Content title=\"Second\">\n          <Section spacing top bottom style_type=\"white\">\n            <H2 top={0} bottom>\n              Second\n            </H2>\n          </Section>\n        </Tabs.Content>\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleHorizontalAligned = () => (\n  <ComponentBox\n    data-visual-test=\"tabs-horizontal-aligned\"\n    scope={{ manyTabs }}\n  >\n    {() => {\n      const FlexWrapper = styled.div`\n        display: flex;\n        flex-direction: row;\n      `\n\n      const LeftArea = styled.div`\n        /* Ensure no-wrap */\n        flex-shrink: 0;\n      `\n      const RightArea = styled.div`\n        /* Ensure the tabbar is hidden outside this area */\n        overflow: hidden;\n\n        /* Ensure the focus ring is visible! (because of overflow: hidden) */\n        margin: -2px;\n        padding: 2px;\n      `\n\n      function TabsHorizontalAligned() {\n        return (\n          <FlexWrapper>\n            <LeftArea>\n              <ToggleButton.Group value=\"first\">\n                <ToggleButton text=\"first\" value=\"first\" />\n                <ToggleButton text=\"second\" value=\"second\" />\n              </ToggleButton.Group>\n            </LeftArea>\n\n            <RightArea>\n              <Tabs\n                left\n                no_border\n                selected_key=\"first\"\n                id=\"unique-tabs-row\"\n                data={manyTabs}\n              />\n            </RightArea>\n          </FlexWrapper>\n        )\n      }\n\n      return <TabsHorizontalAligned />\n    }}\n  </ComponentBox>\n)\n\nexport const TabsExampleMaxWidth = () => (\n  <ComponentBox data-visual-test=\"tabs-max-width\" scope={{ manyTabs }}>\n    {() => {\n      const MaxWidthWrapper = styled.div`\n        max-width: 30rem;\n        background: var(--color-mint-green-12);\n      `\n\n      function TabsMaxWidth() {\n        return (\n          <MaxWidthWrapper>\n            <Tabs\n              top\n              no_border\n              selected_key=\"fifth\"\n              id=\"unique-tabs-max-width\"\n              data={manyTabs}\n            />\n          </MaxWidthWrapper>\n        )\n      }\n\n      return <TabsMaxWidth />\n    }}\n  </ComponentBox>\n)\n\nexport const TabsExampleReachRouterNavigation = () =>\n  typeof window === 'undefined' ? null : (\n    <Wrapper>\n      <ComponentBox scope={{ useLocation, Router, navigate }}>\n        {() => {\n          const Home = ({ path, default: d }) => <H2>Home</H2>\n          const About = ({ path }) => <H2>About</H2>\n          const Topics = ({ path }) => <H2>Topics</H2>\n\n          const Component = () => {\n            const { pathname } = useLocation()\n\n            return (\n              <Tabs\n                data={[\n                  { title: 'Home', key: '/' },\n                  { title: 'About', key: '/about' },\n                  { title: 'Topics', key: '/topics' },\n                ]}\n                selected_key={pathname}\n                on_change={({ key }) => navigate(key)}\n                tabs_style=\"mint-green\"\n              >\n                <React.Suspense fallback={<em>Loading ...</em>}>\n                  <Router>\n                    <Home path=\"/\" default />\n                    <About path=\"/about\" />\n                    <Topics path=\"/topics\" />\n                  </Router>\n                </React.Suspense>\n              </Tabs>\n            )\n          }\n\n          return <Component />\n        }}\n      </ComponentBox>\n    </Wrapper>\n  )\n\nconst exampleContent = {\n  first: () => <h2 className=\"dnb-h--large\">First</h2>,\n  second: () => <Input label=\"Label:\">Focus me with next Tab key</Input>,\n  third: () => (\n    <>\n      <p>Paragraph 1</p>\n      <p>Paragraph 2</p>\n    </>\n  ),\n  fourth: 'Fourth as a string only',\n}\n\nconst manyTabs = [\n  { title: 'First', key: 'first' },\n  { title: 'Second', key: 'second' },\n  { title: 'Third', key: 'third', disabled: true },\n  { title: 'Fourth', key: 'fourth', selected: true },\n  { title: 'Fifth', key: 'fifth' },\n  { title: 'Sixth', key: 'sixth' },\n  { title: 'Seventh', key: 'seventh' },\n  { title: 'Eighth', key: 'eighth' },\n  { title: 'Ninth', key: 'ninth' },\n  { title: 'Tenth', key: 'tenth' },\n]\nconst manyTabsContent = manyTabs.reduce((acc, { title, key }) => {\n  acc[key] = title\n  return acc\n}, {})\n\nconst Wrapper = styled.div`\n  .dnb-tabs {\n    margin-top: 3rem;\n  }\n`\n\nexport const TabsNoBorder = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-no-border\">\n      <Tabs no_border={true}>\n        <Tabs.Content title=\"First\">\n          <H2 top={0} bottom>\n            First\n          </H2>\n        </Tabs.Content>\n        <Tabs.Content title=\"Second\">\n          <H2 top={0} bottom>\n            Second\n          </H2>\n        </Tabs.Content>\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TabsExampleContentOutside, TabsExampleContentObject, TabsExampleScrollable, TabsExampleLeftAligned, TabsExampleUsingData, TabsExampleHorizontalAligned, TabsExampleMaxWidth, TabsExampleReachRouterNavigation, TabsNoBorder, TabsExamplePrerender} from 'Docs/uilib/components/tabs/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs where content is provided from outside\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As this may be a more common use case, we still have to ensure our tabs content is linked together with the tabs â€“ because of accessibility.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You have to provide an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" to both of the components.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" You don't need to use a function inside \", _jsx(_components.code, {\n        children: \"Tabs.Content\"\n      }), \" â€“ it can contain any element you need, as long as it is a React Node.\"]\n    }), \"\\n\", _jsx(TabsExampleContentOutside, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using 'data' property and content object\"\n    }), \"\\n\", _jsx(TabsExampleContentObject, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using 'data' property only\"\n    }), \"\\n\", _jsx(TabsExampleUsingData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using React Components only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, this is an example of how to define a different content background color, by providing \", _jsx(_components.code, {\n        children: \"content_style\"\n      }), \".\"]\n    }), \"\\n\", _jsx(TabsExampleLeftAligned, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs without bottom border\"\n    }), \"\\n\", _jsx(TabsNoBorder, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Tabs and \", _jsx(_components.code, {\n        children: \"prerender\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using \", _jsx(_components.code, {\n        children: \"prerender={true}\"\n      }), \" the content is kept inside the DOM.\"]\n    }), \"\\n\", _jsx(TabsExamplePrerender, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs optimized for narrow screens\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Navigation buttons will be shown and the tabs-list will be scrollable.\"\n    }), \"\\n\", _jsx(TabsExampleScrollable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal aligned tabs\"\n    }), \"\\n\", _jsx(TabsExampleHorizontalAligned, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"max-width usage\"\n    }), \"\\n\", _jsx(TabsExampleMaxWidth, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Router integration\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This demo uses \", _jsx(_components.code, {\n        children: \"@reach/router\"\n      }), \". More \", _jsx(_components.a, {\n        href: \"https://codesandbox.io/embed/8z8xov7xyj\",\n        children: \"examples on CodeSandbox\"\n      }), \".\"]\n    }), \"\\n\", _jsx(TabsExampleReachRouterNavigation, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Example Content\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const exampleContent = {\\n  first: () => <H2>First</H2>,\\n  second: () => <Input label=\\\"Label:\\\">Focus me with next Tab key</Input>,\\n  third: () => (\\n    <>\\n      <p>Paragraph 1</p>\\n      <p>Paragraph 2</p>\\n    </>\\n  ),\\n  fourth: 'Fourth as a string only',\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Router","TabsExampleContentOutside","TabsExampleContentObject","TabsExamplePrerender","TabsExampleUsingData","TabsExampleScrollable","TabsExampleLeftAligned","TabsExampleHorizontalAligned","TabsExampleMaxWidth","TabsExampleReachRouterNavigation","window","exampleContent","first","className","second","label","third","fourth","manyTabs","title","key","disabled","selected","manyTabsContent","acc","Wrapper","TabsNoBorder","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","strong","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","wrapper","MDXLayout"],"sourceRoot":""}