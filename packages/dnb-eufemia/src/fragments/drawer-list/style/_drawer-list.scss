/*
* DrawerList component
*
*/

:root {
  --drawer-list-width: 16rem;
  --drawer-list-height: 2rem;
  --drawer-list-padding-horizontal: 1rem;
  --drawer-list-focus-border-width: 0.125rem;
  --drawer-list-text-padding: 0.5rem;
  --drawer-list-height--small: 1.5rem;
  --drawer-list-height--medium: 2.5rem;
  --drawer-list-height--large: 3rem;
}

@mixin openDrawerList($type: 'slide') {
  z-index: 100; // make sure we are over e.g. switch
  display: flex;
  flex-direction: column;

  @if $type == 'scale' {
    animation: drawer-list-scale-in 200ms ease-out 1 forwards;
  } @else if $type == 'up' {
    animation: drawer-list-slide-bottom-up 200ms ease-out 1 forwards;
  } @else {
    &:not(#{&}--no-animation) {
      animation: drawer-list-slide-top-down 200ms ease-out 1 forwards;
    }
    html[data-visual-test] &,
    &--no-animation {
      animation: drawer-list-slide-top-down 1ms ease-out 1 forwards;
    }
  }
}
@mixin closDrawerList($type: 'slide') {
  @if $type == 'scale' {
    animation: drawer-list-scale-out 150ms ease-out 1 forwards;
  } @else if $type == 'up' {
    animation: drawer-list-slide-bottom-down 200ms ease-out 1 forwards;
  } @else {
    &:not(#{&}--no-animation) {
      animation: drawer-list-slide-top-up 150ms ease-out 1 forwards;
    }
    html[data-visual-test] &,
    &--no-animation {
      animation: drawer-list-slide-top-up 1ms ease-out 1 forwards;
    }
  }
}
@mixin drawer-listClosed() {
  display: none;
}

.dnb-drawer-list {
  position: relative;
  display: block; // has to be block element so we can se the content

  width: inherit;
  min-width: inherit;

  // reset font for correct sizing
  font-size: var(--font-size-small);

  // do noting about this
  // &__portal {
  // }

  &__portal__style {
    position: absolute;

    // higher than modal --modal-z-index:
    z-index: 3010;

    &--fixed {
      position: fixed;
    }
  }

  &__root {
    width: inherit;
    min-width: inherit;

    // this is our relative starting point on absolute positioning
    &--portal {
      position: absolute;
      top: 0;
      left: 0;
    }
  }

  &__content {
    width: 100%;
    padding: 0;
  }

  &__list {
    position: absolute;
    top: 0;
    right: 0;
    bottom: auto;
    left: 0;
    z-index: 3;

    width: inherit;
    min-width: inherit;

    margin: 0;
    padding: 0;

    font-size: var(--font-size-basis);
    line-height: var(--line-height-basis);
    background-color: transparent;

    transform: translateY(0);
    transition: transform 200ms, opacity 160ms ease-out;
  }

  // ul element
  &__options {
    @at-root .dnb-spacing & li.dnb-drawer-list__option {
      margin: 0;
    }

    display: flex;
    flex-direction: column;

    width: 100%;
    max-height: 90vh;
    margin: 0;
    padding: 0;

    list-style: none;
    background-color: transparent;
  }

  &--scroll &__options {
    min-height: 2rem;
    max-height: 70vh;

    @include scrollY(auto);
  }
  &--opened &__options {
    scroll-behavior: smooth;
  }
  &--no-scroll-animation &__options {
    scroll-behavior: auto;
  }

  // li element
  &__option {
    position: relative;

    margin: 0;
    padding: 0;
    color: inherit;

    background-color: var(--color-white);

    outline: none;

    cursor: pointer;

    &__inner {
      position: relative;
      z-index: 1; // only to go over &__triangle

      display: flex;
      flex-direction: column;
      justify-content: center;

      margin: 0;
      padding: 1rem;

      color: inherit;
      background-color: var(--color-white);

      outline: none;

      // So e.g. an anchor gets aligned to left
      > * {
        align-self: self-start;
      }
    }

    &__item {
      display: block;
      // If we use overflow and have an anchor, we cut the focus outline
      // So it has to be handled by project case
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &--ignore {
      cursor: default;
      pointer-events: none;
    }
  }

  // arrow
  &__triangle {
    position: absolute;
    top: calc(
      var(--drawer-list-focus-border-width) - var(--drawer-list-height) / 2
    );
    right: 0;
    left: auto;

    width: calc(var(--drawer-list-height) / 2);
    height: calc(var(--drawer-list-height) / 2);

    margin: 0 var(--drawer-list-padding-horizontal);

    overflow: hidden;

    pointer-events: none;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;

      width: calc(var(--drawer-list-height) / 2);
      height: calc(var(--drawer-list-height) / 2);
      background-color: var(--color-white);

      border: 1px solid var(--color-black-border);
      transform: translateY(60%) rotate(45deg);
    }
  }
  &--triangle-position-left &__triangle {
    right: auto;
    left: 0;
  }
  &--top &__triangle {
    top: auto;
    bottom: calc(
      var(--drawer-list-focus-border-width) - var(--drawer-list-height) / 2 -
        2px
    );
    transform: rotate(180deg);
    &::before {
      transform: translateY(65%) rotate(45deg);
    }
  }

  &--is-popup#{&}--right {
    position: absolute;
    right: 0;
    left: auto;
  }

  // size--default button left aligned
  &--is-popup#{&}--left &__list {
    left: -0.5rem;
  }

  // size--default button right aligned
  &--is-popup#{&}--right &__list {
    right: -0.5rem;
  }

  &--opened &__list {
    @include openDrawerList();
  }
  @media screen and (max-width: 40em), screen and (max-height: 40em) {
    &__portal &--mobile-view#{&}--opened &__list {
      @include openDrawerList('scale');
    }
  }
  &--hidden &__list {
    @include drawer-listClosed();
  }

  // size--default
  &--bottom &__list {
    top: 0;
    bottom: auto;
  }
  &--top &__list {
    top: auto;
    bottom: var(--drawer-list-height);
  }
  &__portal &--bottom &__list {
    top: var(--drawer-list-height);
    bottom: auto;
  }

  // size--small
  &__portal &--small &__list {
    top: var(--drawer-list-height--small);
  }
  &--small#{&}--top &__list {
    bottom: var(--drawer-list-height--small);
  }
  &--small#{&}--is-popup#{&}--left &__list {
    left: -0.75rem;
  }
  &--small#{&}--is-popup#{&}--right &__list {
    right: -0.75rem;
  }

  // size--medium
  &__portal &--medium &__list {
    top: var(--drawer-list-height--medium);
  }
  &--medium#{&}--top &__list {
    bottom: var(--drawer-list-height--medium);
  }
  &--medium#{&}--is-popup#{&}--left &__list {
    left: -0.25rem;
  }
  &--medium#{&}--is-popup#{&}--right &__list {
    right: -0.25rem;
  }

  // size--large
  &__portal &--large &__list {
    top: var(--drawer-list-height--large);
  }
  &--large#{&}--top &__list {
    bottom: var(--drawer-list-height--large);
  }
  &--large &__triangle {
    margin: 0 1.25rem;
  }
  &--large#{&}--is-popup#{&}--left &__list {
    left: -0.25rem;
  }
  &--large#{&}--is-popup#{&}--right &__list {
    right: -0.25rem;
  }

  /* stylelint-disable-next-line  */
  &--is-popup#{&}--right &__list {
    left: auto;
  }

  .dnb-drawer-list__root > &--right {
    position: absolute;
    right: 0;
    left: auto;
  }
  &__portal &--right {
    right: 100%;
  }

  // fix top in portal mode in one style declaration
  &__portal &--top &__list {
    top: auto;
    bottom: 0;
  }

  @media screen and (max-width: 40em), screen and (max-height: 40em) {
    &__portal &--mobile-view,
    &__portal__style--mobile-view {
      top: 0 !important;
      right: 0 !important;
      left: auto !important;
    }
    &__portal__style--mobile-view {
      position: fixed;
    }

    &__portal &--mobile-view &__list,
    &__portal &--mobile-view &__options {
      top: 0 !important;
      height: 100vh;
      max-height: 100vh !important;
      border-radius: 0;
    }
  }

  &:not(.dnb-drawer-list--opened) &__list {
    @include closDrawerList();
  }
  @media screen and (max-width: 40em), screen and (max-height: 40em) {
    &__portal &--mobile-view#{&}:not(.dnb-drawer-list--opened) &__list {
      @include closDrawerList('scale');
    }
  }

  // action-menu
  &--action-menu &__option {
    &__inner {
      flex-direction: row;
      align-items: center;
      justify-content: flex-start;
    }
  }
  @media screen and (min-width: 40em) {
    &--action-menu#{&}--is-popup#{&}--left &__list {
      left: 0;
    }
    &--action-menu#{&}--is-popup#{&}--right &__list {
      right: 0;
    }
  }
  @media screen and (max-width: 40em), screen and (max-height: 40em) {
    &__portal &--mobile-view#{&}--action-menu &__list {
      @include openDrawerList('up');
    }
    &__portal
      &--mobile-view#{&}--action-menu#{&}:not(.dnb-drawer-list--opened)
      &__list {
      @include closDrawerList('up');
    }
    &__portal &--mobile-view#{&}--action-menu &__list,
    &__portal &--mobile-view#{&}--action-menu &__options {
      position: fixed;
      top: auto !important;
      right: 0 !important;
      bottom: 0 !important;
      left: 0 !important;
      width: 100vw !important;
      height: auto !important;

      box-shadow: 0 -4px 4px rgba(0, 0, 0, 0.16);
    }
  }

  @include IS_IE {
    flex: none;
    vertical-align: baseline;

    &__shell {
      top: 0;
    }
    &__options {
      // IE has bug where the height can't be calculated property
      display: block;
    }
  }
}

@keyframes drawer-list-scale-in {
  from {
    transform: scale(0.8) translateX(calc(1px - var(--drawer-list-width)));
    opacity: 0;
  }
  to {
    transform: scale(1) translateX(0);
    opacity: 1;
  }
}
@keyframes drawer-list-scale-out {
  from {
    transform: scale(1) translateX(0);
    opacity: 1;
  }
  to {
    transform: scale(0.8) translateX(calc(1px - var(--drawer-list-width)));
    opacity: 0;
  }
}

@keyframes drawer-list-slide-top-down {
  from {
    transform: translateY(calc(1px - var(--drawer-list-height)));
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes drawer-list-slide-top-up {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(calc(1px - var(--drawer-list-height)));
    opacity: 0;
  }
}

@keyframes drawer-list-slide-bottom-down {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(calc(1px + var(--drawer-list-height)));
    opacity: 0;
  }
}

@keyframes drawer-list-slide-bottom-up {
  from {
    transform: translateY(calc(1px + var(--drawer-list-height)));
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
