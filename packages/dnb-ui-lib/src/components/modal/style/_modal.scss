/*
 * Modal component
 *
 */

@import './modal-mixins';

:root {
  --modal-z-index: 3000;
  --modal-spacing: 2rem; // should reflect --spacing-large

  // we do this because SCSS fails by using min(100vw, 50rem) = "Incompatible units: 'rem' and 'vw'"
  --modal-min-width: 20rem; // under 40em, because of spacing and later mobile fullscreen
  --modal-avg-width: 60vw; // content defines the size
  --modal-max-width: 60rem; // because of our default width --layout-large
  --modal-height-offset: 0.0001rem;
  --modal-content-top: 7rem;

  // Drawer mode
  --modal-drawer-width: 40vw;
  --modal-drawer-min-width: 25rem;
  --modal-drawer-max-width: 40rem;
  --modal-drawer-content-top: 10rem;

  // Overlay
  --modal-overlay-bg: rgba(0, 0, 0, 0.32);
}

[data-dnb-modal-active='true'] {
  user-select: none;
  -webkit-user-select: none; // Safari / Touch fix
}

#dnb-modal-root {
  position: absolute;
  top: 0;
  left: 0;
}

.dnb-modal {
  display: inline-flex;

  &__content {
    position: fixed;
    top: 0;
    left: 0;
    z-index: calc(var(--modal-z-index) + 1);

    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: 100%;

    max-width: 100vw;

    user-select: none;
    -webkit-user-select: none; // Safari / Touch fix

    &__inner {
      position: relative;

      padding: var(--modal-content-top) var(--modal-spacing) 0;

      @include allBelow(small) {
        padding: var(--modal-content-top) calc(var(--modal-spacing) * 0.75)
          0;
        @include modalFullscreen();
      }

      @include allAbove(small) {
        @include defaultDropShadow();
        border-radius: 0.5rem;
      }

      // width: auto;
      width: var(--modal-avg-width);
      min-width: var(--modal-min-width);
      max-width: var(--modal-max-width);

      height: auto;
      max-height: calc(
        100vh - var(--modal-spacing) * 2
      ); // minus vertical padding

      user-select: text;
      -webkit-user-select: text; // Safari / Touch fix
      border: none;

      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    &__align--center &__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    &__align--right &__inner {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }
    &__align--centered &__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    // Drawer mode
    &--drawer {
      align-items: flex-start;
      justify-content: flex-start;
    }
    &--drawer &__inner {
      @include modalFullscreen('drawer');

      width: var(--modal-drawer-width);
      min-width: var(--modal-drawer-min-width);
      max-width: var(--modal-drawer-max-width);

      padding: var(--modal-drawer-content-top)
        calc(var(--modal-spacing) * 1.75) 0;

      // @include allBelow(small) {
      //   padding: calc(var(--modal-spacing) / 2) var(--modal-spacing) 0;
      // }

      border-radius: 0;

      @media screen and (max-width: 40em) {
        width: 100vw;
        min-width: auto;
        max-width: auto;
      }
    }

    &--drawer#{&}--top &__inner,
    &--drawer#{&}--bottom &__inner {
      max-width: 100%; // fixes overflow issue on some browsers
      max-height: 100%;
      width: 100vw;
      height: 40vh;

      @media screen and (max-height: 40em) {
        height: 100vw;
        min-height: auto;
        max-height: auto;
      }
    }
    &--drawer#{&}--right {
      justify-content: flex-end;
    }
    &--drawer#{&}--bottom {
      align-items: flex-end;
    }

    &--fullscreen {
      align-items: flex-start;
      justify-content: flex-start;
    }
    // Not sure why we need to check for "data-dnb-test" here
    // But it helps to get fullscreen on "drawer top" placement
    // Else we have to use !important in order to overwrite height: 40vh;
    html:not([data-dnb-test]) &--fullscreen &__inner {
      @include modalFullscreen();
      border-radius: 0;
    }

    // Drawer animation
    html:not([data-dnb-test]) &--drawer#{&}--left &__inner {
      transform: translate3d(-20rem, 0, 0);
    }
    html:not([data-dnb-test]) &--drawer#{&}--right &__inner {
      transform: translate3d(20rem, 0, 0);
    }
    html:not([data-dnb-test]) &--drawer#{&}--top &__inner {
      transform: translate3d(0, -20rem, 0);
    }
    html:not([data-dnb-test]) &--drawer#{&}--bottom &__inner {
      transform: translate3d(0, 20rem, 0);
    }
    html:not([data-dnb-test]) &--drawer &__inner {
      opacity: 0.1;
      animation: show-drawer 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--left &__inner {
      animation: hide-drawer-left 300ms ease-in-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--right &__inner {
      animation: hide-drawer-right 300ms ease-in-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--top &__inner {
      animation: hide-drawer-top 300ms ease-in-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--bottom &__inner {
      animation: hide-drawer-bottom 300ms ease-in-out forwards;
    }

    // Modal mode
    html:not([data-dnb-test]) &--modal &__inner {
      animation: show-modal 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--modal#{&}--hide &__inner {
      animation: hide-modal 220ms ease-in-out forwards;
    }

    /* stylelint-disable-next-line */
    &--no-animation &__inner {
      animation-duration: 0ms !important;
    }
    @media screen and (max-width: 40em) {
      &--no-animation-on-mobile &__inner {
        animation-duration: 0ms !important;
      }
    }
  }

  &__title {
    &.dnb-h--large,
    .dnb-core-style &.dnb-h--large:not([class*='dnb-space']) {
      margin: 0;
      padding: 0;
    }
  }
  &__wrapper {
    position: relative;
    z-index: 1;

    padding-top: calc(var(--modal-spacing) / 2);
    padding-bottom: calc(var(--modal-spacing) * 1.75);

    @include allBelow(small) {
      padding-bottom: calc(var(--modal-spacing) * 1.25);
    }

    // For testing large scrollable content
    // height: 200vh;
    // background: blue;
  }
  &__content--drawer &__wrapper {
    padding-top: calc(var(--modal-spacing) * 0.75);
    padding-bottom: calc(var(--modal-spacing) * 2);
  }

  &__wrapper__inner {
    padding-bottom: calc(var(--modal-spacing) * 2);
    margin-bottom: calc(1px - 1px - calc(var(--modal-spacing) * 1.75));

    @include allBelow(small) {
      &.dnb-section::after {
        min-height: calc(
          100vh - var(--modal-content-top) - var(--modal-spacing) * 1.5 -
            var(--modal-height-offset, 0.0001rem)
        );
      }
    }
  }
  &__content--drawer &__wrapper__inner {
    margin-bottom: calc(1px - 1px - calc(var(--modal-spacing) * 2));

    &.dnb-section::after {
      min-height: calc(
        100vh - var(--modal-drawer-content-top) - var(--modal-spacing) * 2 -
          var(--modal-height-offset, 0.0001rem)
      );
    }
  }

  &__close-button {
    position: absolute;
    top: calc(var(--modal-spacing) * 0.75);
    right: var(--modal-spacing);

    // set a hight z-index because when font-size is 200%+
    // then it is possible that something else will come in front
    z-index: 1; // below #dropdown and #date-picker

    @include allBelow(small) {
      right: calc(var(--modal-spacing) / 2);
    }

    &--cross {
      top: var(--modal-spacing);

      @include allBelow(small) {
        top: calc(var(--modal-spacing) / 2);
      }
    }
  }
  &__content--drawer &__close-button {
    top: calc(var(--modal-spacing) * 1.75);
    right: calc(var(--modal-spacing) * 1.75);
  }

  &__overlay {
    position: fixed;
    z-index: var(--modal-z-index);
    left: 0;
    top: 0;

    width: 100%;
    height: 100%;

    background: var(--modal-overlay-bg);
    box-shadow: 0 100vh 0 0 var(--modal-overlay-bg);

    html:not([data-dnb-test]) &--modal {
      animation: show-modal-overlay 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--modal#{&}--hide {
      animation: hide-modal-overlay 300ms ease-in-out forwards;
    }

    // Drawer mode
    html:not([data-dnb-test]) &--drawer {
      animation: show-drawer-overlay 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide {
      animation: hide-drawer-overlay 300ms ease-in-out forwards;
    }

    /* stylelint-disable-next-line */
    &--no-animation {
      animation-duration: 0ms !important;
    }
    @media screen and (max-width: 40em) {
      &--no-animation-on-mobile {
        animation-duration: 0ms !important;
      }
    }
  }
}
