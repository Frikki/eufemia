/*
 * Skeleton component
 *
 * Skeleton
 *
 */

.dnb-skeleton {
  pointer-events: none;

  &:not(.dnb-skeleton--font) {
    filter: grayscale(100%);
  }

  &--shape {
    position: relative;
    overflow-x: hidden;
    color: transparent; // make text invisible
    background: transparent; // make backgrounds invisible
    box-shadow: none !important; // accordion border needed that
    // cursor: progress;// does not show if pointer-events is set to none
  }

  &--shape#{&}::before,
  &--shape#{&}::after {
    content: '' !important; // because of list markers, we use important here as well

    position: absolute !important;
    z-index: 100 !important;
    left: 0 !important;
    top: 0 !important;
    bottom: 0 !important;
    right: 0 !important;

    width: 100% !important; // lists needs that overwrite
    height: auto !important;

    margin: 0 !important;
    padding: 0 !important;

    border-radius: inherit;
    background: none !important;
    box-shadow: none !important;
  }

  &--block {
    display: block;
  }

  &[data-skeleton-chars] {
    &::before,
    &::after {
      // Since the ch unit is using the size of the 0,
      // it is not that good to also change the size afterwards
      max-width: var(--skeleton-chars);
    }
  }

  &--no-animation &::after,
  html[data-dnb-test] &::after {
    animation: none !important;
  }

  &--font,
  &--font & {
    --font-family-book: 'DNBSkeleton' !important; // Deprecated
    --font-family-demi: 'DNBSkeleton' !important; // Deprecated
    --font-family-default: 'DNBSkeleton' !important;
    font-family: var(--font-family-default) !important;

    background-image: repeating-linear-gradient(
      -45deg,
      white 0 1px,
      transparent 0 6px
    );

    // background-image: linear-gradient(
    //   90deg,
    //   transparent 10%,
    //   rgba(0, 0, 0, 0.2) 60%,
    //   transparent 85%
    // );

    --border-color: var(--skeleton-color);
    background-color: var(--skeleton-color);

    background-position-y: 50%;
    background-repeat: no-repeat;
    background-size: 30rem 100%;

    -moz-text-fill-color: transparent;
    -webkit-text-fill-color: transparent;

    background-clip: text;
    -webkit-background-clip: text;

    animation: skeletonFontAnimation 2s linear infinite;
  }

  &--font#{&}::before,
  &--font#{&}::after {
    content: none !important;
  }

  pre,
  pre *,
  code,
  code * {
    --font-family-monospace: 'DNBMonoSkeleton' !important;
    font-family: var(--font-family-monospace) !important;
  }

  // because of the underline, we hide anchors
  &.dnb-anchor,
  > .dnb-anchor {
    box-shadow: none;
  }
  > .dnb-anchor::after {
    // filter: brightness(0%) contrast(0%) opacity(0.3);
    filter: grayscale(100%) opacity(0.3);
  }
  > .dnb-code {
    // background-color: inherit;
    background-color: transparent;
  }

  &:not(.dnb-input__shell):not(.dnb-button):not(.dnb-checkbox__button):not(.dnb-textarea__inner) {
    &::before,
    &::after {
      border-radius: 0.25rem;
    }
  }
  &.dnb-button,
  &.dnb-slider {
    overflow: hidden;
  }

  &.dnb-li.is-nested {
    &::before,
    &::after {
      max-height: var(--line-height-basis);
    }
  }

  // &.dnb-checkbox__button {
  //   &::before,
  //   &::after {
  //     border-radius: 0;
  //   }
  // }

  // &.dnb-textarea__inner {
  //   margin: 0;

  //   &::before,
  //   &::after {
  //     border-radius: 1rem;
  //   }

  //   .dnb-textarea__shell {
  //     margin-bottom: calc(var(--textarea-padding-width) * 2);
  //     margin-right: calc(var(--textarea-padding-width) * 2);
  //   }
  // }

  &__figure {
    position: relative;
    border-radius: 0.25rem;

    &--circle {
      width: 4rem;
      height: 4rem;
      border-radius: 50%;
    }

    &--product {
      display: flex;
      align-items: center;
    }
    &--product &--circle + div {
      width: 50%;
      margin-left: 1rem;
    }
  }
}

$fonts-path: '../../assets/fonts' !default;

// Skeleton-Regular
@font-face {
  font-family: DNBSkeleton;
  src: url('#{$fonts-path}/skeleton/DNB-Skeleton-Regular.woff2')
      format('woff2'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Regular.woff') format('woff'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Regular.ttf')
      format('truetype');
  font-weight: normal;
  font-style: normal;
  font-display: fallback;
}

// Skeleton-Medium
@font-face {
  font-family: DNBSkeleton;
  src: url('#{$fonts-path}/skeleton/DNB-Skeleton-Medium.woff2')
      format('woff2'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Medium.woff') format('woff'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Medium.ttf')
      format('truetype');
  font-weight: 500;
  font-style: normal;
  font-display: fallback;
}

// Skeleton-Bold
@font-face {
  font-family: DNBSkeleton;
  src: url('#{$fonts-path}/skeleton/DNB-Skeleton-Bold.woff2')
      format('woff2'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Bold.woff') format('woff'),
    url('#{$fonts-path}/skeleton/DNB-Skeleton-Bold.ttf') format('truetype');
  // font-weight: normal;
  font-weight: 600;
  font-style: normal;
  font-display: fallback;
}

// Mono-Skeleton
@font-face {
  font-family: DNBMonoSkeleton;
  src: url('#{$fonts-path}/skeleton/DNBMono-Skeleton-Regular.woff2')
      format('woff2'),
    url('#{$fonts-path}/skeleton/DNBMono-Skeleton-Regular.woff')
      format('woff'),
    url('#{$fonts-path}/skeleton/DNBMono-Skeleton-Regular.ttf')
      format('truetype');
  font-weight: normal;
  font-style: normal;
  font-display: fallback;
}
