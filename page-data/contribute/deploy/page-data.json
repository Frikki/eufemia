{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/contribute/deploy",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"contribute/deploy","frontmatter":{"title":"Deployment","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#deployment","title":"Deployment","items":[{"url":"#continuous-integration-ci","title":"Continuous Integration (CI)","items":[{"url":"#release-gitflow","title":"Release GitFlow"},{"url":"#the-release-branch","title":"The Release Branch"},{"url":"#how-to-release-alphabeta-versions","title":"How to release alpha/beta versions","items":[{"url":"#how-to-release-the-first-beta","title":"How to release the first beta?"},{"url":"#how-to-release-more-alphabeta-versions","title":"How to release more alpha/beta versions?"}]}]},{"url":"#how-to-create-a-local-package","title":"How to create a local package"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deployment\",\n  \"order\": 4,\n  \"icon\": \"getting_started\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Deployment\"), mdx(\"p\", null, \"Publishing new versions to the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") is handled by a Deploy Server.\"), mdx(\"h2\", null, \"Continuous Integration (CI)\"), mdx(\"p\", null, \"The Portal (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-design-system-portal\"), \"), all the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eufemia.dnb.no/icons/\"\n  }, \"icons\"), \" and the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") are build, deployed and released by a Continuous Integration (CI) server.\"), mdx(\"h3\", null, \"Release GitFlow\"), mdx(\"p\", null, \"The steps, from code changes to production builds, are:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pull Request\"), \" to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"origin/main\"), \" branch.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check the results of the CI tests and builds.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"After the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pull Request\"), \" got approved by one of the authored \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/graphs/contributors\"\n  }, \"maintainers\"), \",\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You can merge your \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pull Request\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A maintainer will create a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pull Request\"), \" into one of the release branches (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"release\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"alpha\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"beta\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"After a release \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pull Request\"), \" got merged, CI Server will deploy the Portal and release a new version to NPM.\")), mdx(\"h3\", null, \"The Release Branch\"), mdx(\"p\", null, \"Make sure you only make \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Pull Request\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/main\"), \" into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/release\"), \".\\nThe release branch (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/release\"), \") is more like a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"secondary branch\"), \". It contains the state of the latest version as well as all the git tags \\u2013 each containing a new version number.\"), mdx(\"h3\", null, \"How to release alpha/beta versions\"), mdx(\"p\", null, \"In order to deal with rebasing and merging of several branches, it may be preferable to do it locally. You would then need git \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"push to remove\"), \" access (GitHub).\"), mdx(\"h4\", null, \"How to release the first beta?\"), mdx(\"p\", null, \"First, we need to ensure our beta branch contains the latest git tag :\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git fetch\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git switch origin/beta\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git reset --hard origin/release\"))), mdx(\"p\", null, \"Now, you may either merge locally or via a pull request on remote (GitHub):\"), mdx(\"p\", null, \"We continue locally:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git merge {your-feature-branch}\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git push --force-with-lease\"))), mdx(\"p\", null, \"Our beta version will now get released.\"), mdx(\"h4\", null, \"How to release more alpha/beta versions?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git switch {your-feature-branch}\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git checkout -b {your-feature-branch}-beta\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git rebase origin/beta\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git switch beta\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git merge {your-feature-branch}-beta\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git push --force-with-lease\"))), mdx(\"p\", null, \"Our beta version will now get released.\"), mdx(\"h2\", null, \"How to create a local package\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn workspace @dnb/eufemia build:pack\"), \" and you should get this file: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/build/dnb-eufemia-v0.0.0-development\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"contribute","frontmatter":{"menuTitle":null,"title":"Contribution Guide","description":"Project overview, development guides, conventions etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"58322ed2-f5a8-5b7e-a936-248835cf0930","slug":"contribute/deploy","prev":{"id":"8c85141b-c608-5fcb-a39d-6756b78c540f","slug":"contribute/contact"},"next":{"id":"0f28b292-7cbb-5ebe-ad2e-8176f9160baf","slug":"contribute/faq"}}},
    "staticQueryHashes": ["2315317908","3001307379","3001504130","573224243"]}