{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/contribute/deploy",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"contribute/deploy","frontmatter":{"title":"Deployment","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#deployment","title":"Deployment","items":[{"url":"#how-to-create-a-local-package","title":"How to create a local package"},{"url":"#ci-structure","title":"CI Structure","items":[{"url":"#the-release-branch","title":"The Release Branch"},{"url":"#steps-to-follow","title":"Steps to follow"},{"url":"#npm-library","title":"NPM Library","items":[{"url":"#important-aspects","title":"Important aspects"}]}]}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deployment\",\n  \"order\": 4,\n  \"icon\": \"getting_started\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Deployment\"), mdx(\"p\", null, \"Publishing new versions to the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") is handled by a Deploy Server.\"), mdx(\"h2\", null, \"How to create a local package\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build:pack\"), \" inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/dnb-eufemia\"), \" and you get this file: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/build/dnb-eufemia-v0.0.0-development\"), \".\"), mdx(\"h2\", null, \"CI Structure\"), mdx(\"p\", null, \"Both the Portal (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-design-system-portal\"), \") and the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") are deployed and build by a Continuous Integration (CI) Server.\"), mdx(\"p\", null, \"Once you push your branch \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"feat/your-feature\"), \" (or what ever) to remote \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"origin\"), \", all tests will be run against your latest pushes.\"), mdx(\"p\", null, \"Merges from a Pull Request and other pushes to the development branch \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/main\"), \", will trigger a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"test build\"), \" of the Portal. In this way, we make sure that a new Portal version can be built, before we actually publish a new build.\"), mdx(\"h3\", null, \"The Release Branch\"), mdx(\"p\", null, \"Make sure you only make Pull Request from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/main\"), \" into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/release\"), \".\\nThe Release Branch is more kind of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"secondary branch\"), \". It reflects the latest version, but is actually only used to publish new versions and to make builds for the Portal.\"), mdx(\"h3\", null, \"Steps to follow\"), mdx(\"p\", null, \"The steps, from code changes to production builds, are:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Push or make a Pull Request to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"origin/main\"), \" branch\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wait until the CI Server has validated the commits\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/compare/release...main?expand=1\"\n  }, \"Pull Request\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once the Pull Request will be approved by one of the authored \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/graphs/contributors\"\n  }, \"repo contributors\"), \",\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The CI Server will deploy the Portal and NPM builds\")), mdx(\"h3\", null, \"NPM Library\"), mdx(\"p\", null, \"These folders/files will be a part of the NPM \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://unpkg.com/@dnb/eufemia@latest/\"\n  }, \"package\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/elements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/extensions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/fragments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/icons\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/style\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/cjs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/es\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/esm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/umd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/shared\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"web-components.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lib.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"index.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"package.json\")), mdx(\"h4\", null, \"Important aspects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PropTypes are getting wrapped with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"babel-plugin-transform-react-remove-prop-types\"\n  }, \"this babel plugin\"), \") \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"process.env.NODE_ENV !== \\\"production\\\"\"), \". This way applications in production, will not include \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"propTypes\"), \". If a component depends to check \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"propTypes\"), \" during runtime, consider to export them, so they not getting removed \\u2013 or simply use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"defaultProps\"), \" for the operation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As for now, we use React Class Components, because there may happen a case, where two React instances are used, and that does not work with Hooks. Also, performance is a key factor. But we may consider a rewrite at some point.\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"contribute","frontmatter":{"menuTitle":null,"title":"Contribution Guide","description":"Project overview, development guides, conventions etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"58322ed2-f5a8-5b7e-a936-248835cf0930","slug":"contribute/deploy","prev":{"id":"0f28b292-7cbb-5ebe-ad2e-8176f9160baf","slug":"contribute/faq"},"next":{"id":"2f2cadc5-be13-5744-aed9-309c62624def","slug":"contribute/first-contribution"}}},
    "staticQueryHashes": ["2315317908","3001307379","573224243"]}