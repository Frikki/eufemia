{"componentChunkName":"component---src-templates-mdx-js","path":"/contribute/style-guides/coding/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"contribute/style-guides/coding","frontmatter":{"title":"Code guide","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#code-guide","title":"Code guide","items":[{"url":"#recommended-tools","title":"Recommended Tools"},{"url":"#linting","title":"Linting"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code guide\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Code guide\"), mdx(\"p\", null, \"To assure that the source code remains consistent regardless of the amount of contributors, a set of code principles has been established.\"), mdx(\"p\", null, \"The current set of main code principles within JS, CSS, Typography and testing are located in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/best-practices\"\n  }, \"UI Library - Best practices\"), \". Below is more related to further developing the Eufemia repository.\"), mdx(\"h2\", null, \"Recommended Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://testing-library.com\"\n  }, \"React Testing Library\"), \" when possible, even Enzyme is still used in existing components.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://volta.sh/\"\n  }, \"Volta\"), \" for \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nodejs.org/\"\n  }, \"Node.js\"), \" version handling.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use plugins in your favorite code editor for \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eslint.org/docs/user-guide/integrations\"\n  }, \"ESLint\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://prettier.io/docs/en/editors.html\"\n  }, \"Prettier\"), \", which formats the code for you.\")), mdx(\"p\", null, \"Other helpful tools:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.deque.com/axe/devtools/\"\n  }, \"Axe Devtools extension\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.google.com/web/tools/lighthouse#devtools\"\n  }, \"Lighthouse extension\"))), mdx(\"h2\", null, \"Linting\"), mdx(\"p\", null, \"JavaScript and Style linting is mandatory for merging commits in Eufemia. During a commit (locally), your commit content (code) will be tested with both static and integration tests. You may run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn test\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn test:update\"), \" before you try to commit. You may also write new tests for your code before committing.\"), mdx(\"p\", null, \"The Code Base is based on several Static Tests to help the code to be uniform:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prettier\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ESLint\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StyleLint\")), mdx(\"p\", null, \"You may consider to install plugins for your editor of choice - to visualize and run the code formatters and linters based on the given config files. This way you can immediately see how the code will and have to consist.\"), mdx(\"p\", null, \"Either include the plugins in your code editor, or run the following command after you made changes:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# In workspace dnb-design-system-portal or dnb-eufemia\\nyarn lint:js && yarn lint:styles\\n\")), mdx(\"p\", null, \"Fix the resulted warnings and error before you commit and merge.\"));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"contribute/style-guides","frontmatter":{"menuTitle":null,"title":"Style guides","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"contribute","frontmatter":{"menuTitle":null,"title":"Contribution Guide","description":"Project overview, development guides, conventions etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"8e50b411-58a6-5da6-a294-685014b67adc","slug":"contribute/style-guides/coding","prev":{"id":"1d7d34e5-9b85-526f-9714-852ff50af848","slug":"contribute/first-contribution/before-started"},"next":{"id":"56f47ad3-aa32-5d9e-a5b8-33e1bf251513","slug":"contribute/style-guides/documentation"}}},"staticQueryHashes":["2315317908","3001307379","3001504130","573224243"]}