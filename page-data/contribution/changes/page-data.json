{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/contribution/changes",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"contribution/changes","frontmatter":{"title":"Make Changes","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#making-changes","title":"Making changes","items":[{"url":"#change-logs","title":"Change logs"},{"url":"#get-started-on-making-new-components-elements-and-extensions","title":"Get started on making new Components, Elements and Extensions","items":[{"url":"#create-a-local-build","title":"Create a local build","items":[{"url":"#what-happens-in-the-build-steps","title":"What happens in the build steps"}]},{"url":"#development","title":"Development"},{"url":"#documentation","title":"Documentation"},{"url":"#about-react-components","title":"About React Components"},{"url":"#how-components-are-structured","title":"How Components are structured","items":[{"url":"#locale-support","title":"Locale support"},{"url":"#provider-support","title":"Provider support"},{"url":"#spacing-support","title":"Spacing support"},{"url":"#skeleton-support","title":"Skeleton support"}]},{"url":"#styling-css-and-scss-of-components","title":"Styling, css and scss of components"}]}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Make Changes\",\n  \"draft\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Making changes\"), mdx(\"p\", null, \"Here are typical steps when making changes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you don't have commit access: create a Fork of the repo: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia\"\n  }, \"Eufemia on GitHub\"), \" \\u2013 check out your fork.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Git clone the repo.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install the dependencies: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn install\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make your changes.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run the integration tests: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn test\"), \" \\u2013 you may need to update changed snapshots: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn test:update\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start the portal: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn workspace dnb-design-system-portal start\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Runt the visual test against it: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn test:screenshots\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check the result / reports, located in: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"open ./packages/dnb-eufemia/jest-screenshot-report/index.html\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update eventually new or valid PNG snapshots by running: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn test:screenshots:update\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/contribution/commit\"\n  }, \"Commit your change\"), \" and create a Pull Request to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"origin/main\"), \" branch.\")), mdx(\"h2\", null, \"Change logs\"), mdx(\"p\", null, \"Changes to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \" have to be mentioned by using a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/contribution/commit#commit-messages\"\n  }, \"git commit messages decoration\"), \". During next release, a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CHANGELOG.md\"), \" file will be generated and changes will get listed on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/releases\"\n  }, \"GitHub Releases\"), \" page.\"), mdx(\"p\", null, \"General Eufemia \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Design System\"), \" changes have to be written down in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EUFEMIA_CHANGELOG.md\"), \" file, located in the repository root.\"), mdx(\"h2\", null, \"Get started on making new Components, Elements and Extensions\"), mdx(\"p\", null, \"Make a new working branch and name it e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fix/my-branch-name\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"feat/my-feature-name\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Make a Feature branch\\n$ git checkout -b feat/my-feature\\n\")), mdx(\"p\", null, \"Inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./packages/dnb-eufemia\"), \" you will find the directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/src/components\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/src/elements\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/src/extensions\"), \". There you can place a new directory with all the necessary sub folders. As a reference, take a look how the other \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"components\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"elements\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"extensions\"), \" are set up.\"), mdx(\"h3\", null, \"Create a local build\"), mdx(\"p\", null, \"Next, we need to create a local build (prebuild) by using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \" again.\"), mdx(\"p\", null, \"Running the build command will walk thought all parts and tie together all needed parts in order to generate valid build bundles.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ yarn build\\n\")), mdx(\"p\", null, \"You find the output in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./packages/dnb-eufemia/build\"), \" folder.\"), mdx(\"h4\", null, \"What happens in the build steps\"), mdx(\"p\", null, \"During the build, a lot of various things will happen, like:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prebuild\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ yarn build\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assets are getting generated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All index and lib files are getting generated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All the lib code gets compiled (ECMAScript 6 and ECMAScript 5.1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All SASS styles are validated and compiled (to support IE)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All bundles gets minified\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Icons are getting converted\")), mdx(\"p\", null, \"To use the local build, you can either run the portal, or use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn link\"), \" to link the package with a totally different project.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Postbuild\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ yarn workspace @dnb/eufemia postbuild:ci\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assets are getting generated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All the lib code gets compiled (ECMAScript 6 and ECMAScript 5.1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UMD/ESM/ES/CJS bundles are getting generated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TypdeScript definitions are getting generated\")), mdx(\"h3\", null, \"Development\"), mdx(\"p\", null, \"You can also use Storybook and create a new story dedicated to your new feature. Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn dev\"), \" to start Storybook.\"), mdx(\"h3\", null, \"Documentation\"), mdx(\"p\", null, \"All components hare their own directory inside:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./packages/dnb-design-system-portal/src/docs/uilib/...\"))), mdx(\"p\", null, \"You may have a look at existing docs in order to get the right structure.\"), mdx(\"h3\", null, \"About React Components\"), mdx(\"p\", null, \"Many components are based on React Class Components (because hooks did no exists at some point). But;\"), mdx(\"p\", null, \"Use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/hooks-overview.html\"\n  }, \"React Hooks\"), \" over React class components when possible.\"), mdx(\"p\", null, \"Also, use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.typescriptlang.org\"\n  }, \"Typescript\"), \", even most of the components do use PropTypes to generated type definition files only.\"), mdx(\"h3\", null, \"How Components are structured\"), mdx(\"p\", null, \"Eufemia has a couple of common parts, so every component do behave consistent:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/usage/customisation/localization\"\n  }, \"Locale\"), \" support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/usage/customisation/provider\"\n  }, \"Provider\"), \" support for centralized property forwarding\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/space\"\n  }, \"Spacing\"), \" support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/skeleton\"\n  }, \"Skeleton\"), \" support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/form-row\"\n  }, \"FormRow\"), \" / \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/form-set\"\n  }, \"FormSet\"), \" / \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/form-label\"\n  }, \"FormLabel\"), \" support if its a form component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automatic id generation and linking of HTML elements to enhance accessibility\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Handling of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-describedby\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"combineDescribedBy\"), \" etc.\")), mdx(\"h4\", null, \"Locale support\"), mdx(\"p\", null, \"Put your translation inside: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./packages/dnb-eufemia/src/shared/locales/nb-NO.js\"), \" as well as to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"en-GB.js\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"export default {\\n  'nb-NO': {\\n    MyComponent: {\\n      myString: '...',\\n    },\\n  },\\n}\\n\")), mdx(\"p\", null, \"And use it as so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Context } from '../../shared'\\nimport { extendPropsWithContext } from '../../shared/component-helper'\\n\\nconst defaultProps = {\\n  myString: null, // can be null, as we get our default from the translation file\\n}\\n\\nfunction MyComponent(props: Types) {\\n  const context = React.useContext(Context)\\n\\n  const { myString } = extendPropsWithContext(\\n    {\\n      ...props,\\n      ...defaultProps,\\n    },\\n    defaultProps,\\n    context.getTranslation(props).MyComponent // details below \\uD83D\\uDC47\\n    // ...\\n  )\\n\\n  // Use myString ...\\n}\\n\")), mdx(\"p\", null, \"The function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getTranslation\"), \" will along with the properties will support both \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locale\"), \" and the HTML \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lang\"), \" attribute. This way, these properties can be set by a component basis and a context basis.\"), mdx(\"h4\", null, \"Provider support\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Context } from '../../shared'\\nimport { extendPropsWithContext } from '../../shared/component-helper'\\n\\nconst defaultProps = {\\n  myParam: null,\\n}\\n\\nfunction MyComponent(props: Types) {\\n  const context = React.useContext(Context)\\n\\n  const { myParam, ...rest } = extendPropsWithContext(\\n    {\\n      ...props,\\n      ...defaultProps,\\n    },\\n    defaultProps,\\n    context.MyComponent\\n    // ...\\n  )\\n\\n  // Use myParam and spead the ...rest\\n}\\n\")), mdx(\"h4\", null, \"Spacing support\"), mdx(\"p\", null, \"It depends from case to case on how you would make \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/space\"\n  }, \"spacing\"), \" support available. But you may always give the developer to send in the spacing properties to the very root element of your component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Context } from '../../shared'\\nimport classnames from 'classnames'\\nimport {\\n  validateDOMAttributes,\\n  extendPropsWithContext,\\n} from '../../shared/component-helper'\\nimport {\\n  spacingPropTypes, // In case you need them as PropTypes\\n  createSpacingClasses,\\n} from '../space/SpacingHelper'\\nimport {\\n  SpaceProps, // TypeScript type\\n  createSpacingClasses,\\n} from '../space/Space'\\n\\ninterface MyComponentProps extends SpaceProps {\\n  myParam: string\\n}\\n\\nconst defaultProps = {\\n  myParam: null,\\n}\\n\\nfunction MyComponent(props: MyComponentProps) {\\n  const context = React.useContext(Context)\\n\\n  const { myParam, className, ...rest } = extendPropsWithContext(\\n    {\\n      ...props,\\n      ...defaultProps,\\n    },\\n    defaultProps\\n    // ...\\n  )\\n\\n  // This helper will remove e.g. all spacing properties so you get only valid HTML attributes\\n  validateDOMAttributes(props, rest)\\n\\n  // This helper will add needed spacing css classes based on the given properties\\n  rest.className = classnames(\\n    'dnb-my-component',\\n    createSpacingClasses(props),\\n    className\\n  )\\n\\n  // Spead the ...rest on your root element\\n}\\n\")), mdx(\"h4\", null, \"Skeleton support\"), mdx(\"p\", null, \"It depends from case to case on how you would make skeleton support available. There are also more info on how to create a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eufemia.dnb.no/uilib/components/skeleton#create-custom-skeleton\"\n  }, \"custom skeleton\"), \". But in case your component supports the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"skeleton\"), \" boolean property, then you may ensure it both can be set locally on the component, and it reacts on the global Context.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Context } from '../../shared'\\nimport { extendPropsWithContext } from '../../shared/component-helper'\\nimport {\\n  skeletonDOMAttributes,\\n  createSkeletonClass,\\n} from '../skeleton/SkeletonHelper'\\n\\nconst defaultProps = {\\n  skeleton: null,\\n}\\n\\nfunction MyComponent(props: Types) {\\n  const context = React.useContext(Context)\\n\\n  const { skeleton, className, ...rest } = extendPropsWithContext(\\n    {\\n      ...props,\\n      ...defaultProps,\\n    },\\n    defaultProps,\\n    { skeleton: context?.skeleton }\\n    // ...\\n  )\\n\\n  // This helper will add some needed HTML attributes like \\\"disabled\\\", \\\"aria-disabled\\\" and \\\"aria-label\\\"\\n  skeletonDOMAttributes(rest, skeleton, context)\\n\\n  // This helper will add needed skeleton css classes in order to create a custom skeleton\\n  rest.className = createSkeletonClass(\\n    'shape',\\n    skeleton,\\n    context,\\n    className\\n  )\\n\\n  // Use skeleton and spead the ...rest\\n}\\n\")), mdx(\"h3\", null, \"Styling, css and scss of components\"), mdx(\"p\", null, \"Use the same sass setup as all the other components. You may re-use all the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eufemia.dnb.no/uilib/helpers/classes\"\n  }, \"helper classes\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./packages/dnb-eufemia/src/style/core/utilities.scss\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./packages/dnb-eufemia/src/style/core/properties.scss\"))));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"contribution","frontmatter":{"menuTitle":null,"title":"Contribution Guide","description":"Project overview, development guides, conventions etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"6307c133-1948-52a3-93b5-014cb04249d6","slug":"contribution/changes","prev":{"id":"b094d44a-d48e-54d8-a946-14eef7c0d14f","slug":"uilib"},"next":{"id":"80c85174-f4b1-5166-ac27-970efd260c5b","slug":"license"}}},
    "staticQueryHashes": ["2315317908","4227086163","573224243"]}