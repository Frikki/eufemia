{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/contribution/deploy",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"contribution/deploy","frontmatter":{"title":"Deployment","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#deployment","title":"Deployment","items":[{"url":"#ci-structure","title":"CI Structure","items":[{"url":"#the-release-branch","title":"The Release Branch"},{"url":"#steps-to-follow","title":"Steps to follow"}]}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deployment\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Deployment\"), mdx(\"p\", null, \"Publishing new versions to the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") is handled by a Deploy Server.\"), mdx(\"h2\", null, \"CI Structure\"), mdx(\"p\", null, \"Actually, both the Portal (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-design-system-portal\"), \") and the NPM Package (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \") are deployed and build by a Continuous Integration (CI) Server.\"), mdx(\"p\", null, \"Once you push your branch \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"feat/your-feature\"), \" (or what ever) to remote \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"origin\"), \", all tests will be run against your latest pushes.\"), mdx(\"p\", null, \"Merges from a Pull Request and other pushes to the development branch \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/main\"), \", will trigger a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"test build\"), \" of the Portal. This way me make sure that a new Portal version can be build, before we actually publish a new build.\"), mdx(\"h3\", null, \"The Release Branch\"), mdx(\"p\", null, \"Make sure you only make Pull Request from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/main\"), \" into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"origin/release\"), \".\\nThe Release Branch is more kind of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"secondary branch\"), \". It reflects the latest version, but is actually only used to publish new versions and to make builds for the Portal.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TODO:\"), \" GitFlow and CI structure graphics\"), mdx(\"h3\", null, \"Steps to follow\"), mdx(\"p\", null, \"The steps, from code changes to production builds are:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make your changes and write tests and test the codebase\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update eventually snapshots (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn test:update\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit your changes with the correct \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/contribution/commit\"\n  }, \"message decoration\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Push or make a Pull Request to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"origin/main\"), \" branch\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wait until the CI Server has validated the commits\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/compare/release...main?expand=1\"\n  }, \"Pull Request\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once the Pull Request will be approved by one of the authored \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dnbexperience/eufemia/graphs/contributors\"\n  }, \"repo contributors\"), \",\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The CI Server will deploy the Portal and NPM builds\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"contribution","frontmatter":{"menuTitle":null,"title":"Contribution Guide","description":"Project overview, development guides, conventions etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"de3b75a7-cb4b-570e-9081-8fa4e51c0499","slug":"contribution/deploy","prev":{"id":"b094d44a-d48e-54d8-a946-14eef7c0d14f","slug":"uilib"},"next":{"id":"a76d4e37-7dc2-57fd-9b6f-d613fcb8a242","slug":"contribution/icons"}}},
    "staticQueryHashes": ["2315317908","4227086163","573224243"]}