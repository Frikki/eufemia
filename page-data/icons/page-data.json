{"componentChunkName":"component---src-templates-mdx-js","path":"/icons","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Icons Library","description":"An overview of our most used icons.","fullscreen":null,"showTabs":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Icons Library\",\n  \"description\": \"An overview of our most used icons.\",\n  \"order\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Icons\"), mdx(\"p\", null, \"At DNB we are currently using Streamline icons as our source for off-the-shelf vector icons.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.streamlineicons.com/\"\n  }), \"Link to streamlineicons.com\")), mdx(\"h2\", null, \"Using Icons\"), mdx(\"p\", null, \"The icons are in SVG format and are optimized for performance and to have the smallest footprint possible in the package build process.\"), mdx(\"p\", null, \"The sources are located in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://unpkg.com/dnb-ui-lib@latest/assets/icons/\"\n  }), \"assets folder\"), \".\"), mdx(\"p\", null, \"They also exists as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/icon\"\n  }), \"React Components\"), \" to be easily integrated, without need of an additional SVG file loader.\"), mdx(\"h2\", null, \"Color\"), mdx(\"p\", null, \"The icons SVG format have to satisfy the requirement to colorize the CSS fill- and stoke colors by simply using the inherited color.\"), mdx(\"p\", null, \"This is taken care of by using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/icon\"\n  }), \"DNB Icon Component\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example usage of CSS\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"svg {\\n  color: inherit;\\n  fill: currentColor;\\n  stroke: currentColor;\\n}\\n\")), mdx(\"h2\", null, \"Sizing\"), mdx(\"p\", null, \"Eufemia icons come in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"two\"), \" sizes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Default Size\"), \" 16px with 1.5px stroke weight\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Medium Size\"), \" 24px with 1.5px stroke weight\")), mdx(\"p\", null, \"The reason why there are two sizes, is mainly do to the SVG artifact, that the Icons, alongside with the strokes, will scale up, once we use them with a larger width and height.\"), mdx(\"h3\", null, \"Scalability in web\"), mdx(\"p\", null, \"To ensure that the relative size of the SVG icons are scalable by the inherited CSS font size, do not explicitly specify the SVG, unless for older browsers like Internet Explorer.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example usage of CSS\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"svg {\\n  font-size: inherit;\\n  width: 1em;\\n  height: 1em;\\n}\\n\")), mdx(\"h2\", null, \"Spacing\"), mdx(\"p\", null, \"Icons should have a minimum area of 8px between them and their nearest neighbor.\"), mdx(\"div\", {\n    className: \"image-box\"\n  }, mdx(Img, {\n    src: IconNearestNeighbour,\n    caption: \"Icons with nearest neighbour 8px (0.5rem) distance\",\n    alt: \"Icon's nearest neighbour\",\n    height: \"136\",\n    mdxType: \"Img\"\n  })), mdx(\"h2\", null, \"Custom Icons\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.streamlineicons.com/\"\n  }), \"Streamline\"), \" caters for pretty much all of Eufemia's icon needs. However, sometimes there is a need for a custom icon. In these cases please contact one of Eufemia's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/design-system/contact\"\n  }), \"design leads\"), \".\"), mdx(FormStatusIcons, {\n    mdxType: \"FormStatusIcons\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"icons"},"frontmatter":{"title":"Icons Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"abe45713-4c2e-5d9e-91b1-05027e820408","prev":null,"next":{"id":"25be16f2-1019-52cd-ad19-507a5f94ea6e","fields":{"slug":"principles"}}}}}