{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/accordion/demos/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/accordion/demos","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#demos","title":"Demos","items":[{"url":"#single-accordion","title":"Single Accordion"},{"url":"#accordion-with-large-title-and-content","title":"Accordion with large title and content"},{"url":"#grouped-accordion","title":"Grouped Accordion"},{"url":"#customized-accordion","title":"Customized Accordion"},{"url":"#nested-accordions","title":"Nested Accordions"},{"url":"#accordion-with-a-single-container","title":"Accordion with a single container"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Demos\"), mdx(\"h3\", null, \"Single Accordion\"), mdx(AccordionDefaultExample, {\n    mdxType: \"AccordionDefaultExample\"\n  }), mdx(\"h3\", null, \"Accordion with large title and content\"), mdx(AccordionLargeContentExample, {\n    mdxType: \"AccordionLargeContentExample\"\n  }), mdx(\"h3\", null, \"Grouped Accordion\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB:\"), \" Please have a read on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/components/accordion/info#unexpected-behavior\"\n  }, \"unexpected behavior\"), \" thoughts.\"), mdx(AccordionGroupExample, {\n    mdxType: \"AccordionGroupExample\"\n  }), mdx(\"h3\", null, \"Customized Accordion\"), mdx(AccordionCustomisationExample, {\n    mdxType: \"AccordionCustomisationExample\"\n  }), mdx(\"h3\", null, \"Nested Accordions\"), mdx(AccordionNestedExample, {\n    mdxType: \"AccordionNestedExample\"\n  }), mdx(\"h3\", null, \"Accordion with a single container\"), mdx(\"p\", null, \"A single container is only used for wider screens (desktop). When the users' screen is narrower (mobile), it will change to a normal accordion. The change happens with CSS only, so it will not interrupt any React render.\"), mdx(AccordionContainerExample, {\n    mdxType: \"AccordionContainerExample\"\n  }), mdx(AccordionPlainVariant, {\n    mdxType: \"AccordionPlainVariant\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/accordion","frontmatter":{"menuTitle":null,"title":"Accordion","description":"The Accordion component, also known as a ComboBox, completes / suggests values during typing.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"fbc52d5b-87c2-5208-b568-5cc4826f3fdd","slug":"uilib/components/accordion/demos","prev":{"id":"92683b5f-47a5-5ead-990c-7ea37d55e899","slug":"uilib/components/breadcrumb","frontmatter":{"title":"Breadcrumb","description":"The Breadcrumb component is a bar for navigation showing current web path."}},"next":{"id":"b6bab0e5-a1b1-5df3-ba55-46ae5fe1a240","slug":"uilib/components/accordion/events","frontmatter":{"title":"","description":null}}}},"staticQueryHashes":["2315317908","3001504130","573224243"]}