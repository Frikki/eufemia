{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/date-picker/events","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"tableOfContents":{"items":[{"url":"#events","title":"Events"},{"url":"#returned-object","title":"Returned Object","items":[{"url":"#validation-during-input-changes","title":"Validation during input changes"},{"url":"#min--max-date","title":"Min & Max date"},{"url":"#manipulate-the-days-in-the-calendar-view","title":"Manipulate the days in the calendar view"}]}]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Events\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Events\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_change\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called on a date change event. Returns an \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"object\"), \". See above.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_type\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called on every input and date picker interaction. Returns an \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"object\"), \". See above.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_submit\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once a user presses the submit button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_cancel\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once a user presses the cancel button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_reset\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once a user presses the reset button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_show\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once date-picker is visible.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_hide\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once date-picker is hidden.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_days_render\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called right before every new calendar view gets rendered. Se example above.\")))), mdx(\"h2\", null, \"Returned Object\"), mdx(\"p\", null, \"The type of native event will depend on the interaction.\\nAll additional HTML attributes will be returned as well.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  date: null|'like return_format', /* Gets returned if range is false */\\n  start_date: null|'like return_format',\\n  end_date: null|'like return_format',\\n  days_between: number,\\n  attributes: { attributes },\\n  event: null|{ native event }\\n}\\n\")), mdx(\"h3\", null, \"Validation during input changes\"), mdx(\"p\", null, \"In order to validate dates during typing, you can make use of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_valid\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_valid_start_date\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_valid_end_date\"), \". Because the user can change a date in the input field, and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_type\"), \" event will then return a falsy \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_valid\"), \".\"), mdx(\"p\", null, \"Additional event return object properties:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  is_valid: boolean, /* Gets returned if range is false */\\n  is_valid_start_date: boolean,\\n  is_valid_end_date: boolean,\\n  ...\\n}\\n\")), mdx(\"h3\", null, \"Min & Max date\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"min_date\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"max_date\"), \" is given, the return object also contains info about if the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"start_date\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"end_date\"), \" is in between the given limitation. The reason is because the user can still enter an invalid date in the input.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  is_valid_start_date: boolean,\\n  is_valid_end_date: boolean,\\n  ...\\n}\\n\")), mdx(\"h3\", null, \"Manipulate the days in the calendar view\"), mdx(\"p\", null, \"The callback event \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_days_render\"), \" gives you the possibility to manipulate the \\\"day\\\" object, before it gets rendered. This callback will be called many times. Both on the first render, and on every user interaction, like hover and selection etc. This means, you have to ensure a performant date calculation.\"), mdx(\"p\", null, \"Please use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://date-fns.org\"\n  }), \"date-fns\"), \" to make the calculations.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import isWeekend from 'date-fns/isWeekend'\\n\\nrender(\\n  <DatePicker\\n    on_days_render={(days, calendarNumber = 0) => {\\n      return days.map((dayObject) => {\\n        if (isWeekend(dayObject.date)) {\\n          dayObject.isInactive = true\\n          date.className = 'dnb-date-picker__day--weekend' // custom css\\n        }\\n        return dayObject\\n      })\\n    }}\\n  />\\n)\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dayObject\"), \" object contains:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"[\\n    {\\n      date: Date,// Vanilla JavaScript Date object\\n      className: // define your custom css classes\\n      isInactive: boolean,// shows it as disabled only\\n      isDisabled: boolean,// shows it as disabled and with a strikethrough\\n      isPreview: boolean,// date is between startDate (exclusive) and hoverDate (inclusive)\\n      isSelectable: boolean,// if not last and next month and not disabled \\u2013 handles z-index\\n      isStartDate: boolean,// date selected is start date\\n      isEndDate: boolean,// date selected is end date\\n      isToday: boolean,\\n      isWithinSelection: boolean,// date is between selection range\\n      isNextMonth: boolean,// used for selection and inactive calculation\\n      isLastMonth: boolean,// used for selection and inactive calculation\\n    },\\n    ...\\n]\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/components/date-picker"},"frontmatter":{"title":"DatePicker","menuTitle":null,"showTabs":true,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"a724e6b5-4e89-594e-b2fc-f4ef7127ecb7","prev":{"id":"1a274390-bea2-5d67-ae9e-ef939915d662","fields":{"slug":"uilib/components/date-picker/demos"}},"next":{"id":"2045a3b0-877a-5869-8aed-7f960d5c6f46","fields":{"slug":"uilib/components/date-picker/info"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}