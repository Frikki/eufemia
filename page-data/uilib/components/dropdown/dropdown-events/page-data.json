{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/dropdown/dropdown-events","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"draft\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"The difference\"), mdx(\"p\", null, \"The difference between \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_change\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_select\"), \" is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on_change\"), \" will be called when the state changes, either with a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"click\"), \" or \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"space/enter\"), \" keypress confirmation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on_select\"), \" differs most when the users is navigating by keyboard. Once the uses is pressing e.g. the arrow keys, the selection is changing, but not the state.\")), mdx(\"h2\", null, \"Dropdown Events\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Events\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_change\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called on state changes made by the user. Returns an object with the new selected \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"data\"), \" item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, event, attributes, value }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_select\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the users selects an item by a click or keyboard navigation. Returns an object with the new selected \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"data\"), \" item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, event, attributes, value, active_item }\"), \". The \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"active_item\"), \" property is the currently selected item by keyboard navigation\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_show\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the user presses the dropdown. Returns the data item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, attributes }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_hide\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the user presses the dropdown again, or clicks somewhere else. Returns the data item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, attributes }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_state_update\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the parameter \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"value\"), \" changes its state.\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"02e5ebc7-1bdc-5b94-bad6-e0eb0890b2e6","prev":{"id":"0f2c55d3-e5f7-5cd9-b83c-154be23dfc69","fields":{"slug":"uilib/components/dropdown/dropdown-info"}},"next":{"id":"d7db5ae2-d85f-540b-afd3-54d66185c3a9","fields":{"slug":"uilib/components/form-label/form-label-info"}}}}}