{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/dropdown/info","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The Dropdown component is a fully custom-made component. This allows us to change it's form based on context (small screens, touch devices etc.)\"), mdx(\"h3\", null, \"When to use it:\"), mdx(\"p\", null, \"When you need to provide a considerable amount of options to the user and do not have the space to do so. Other reasons may be because the hidden options may clutter the interface and need only be displayed after the user specifically requests it.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"when space is an issue (not enough)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"when you wish to reduce visual clutter\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"when it is intuitive for the user to request the hidden content\")), mdx(\"h3\", null, \"When not to use it:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"do not use this if you have only a few \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"menu\"), \" options which could otherwise be shown such as \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/components/radio\"\n  }), \"Radio buttons\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/components/toggle-button\"\n  }), \"ToggleButtons\"), \".\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB:\"), \" This pattern can be constructed in a number of ways to achieve a similar effect - from using the HTML 'select' element to custom building with divs, spans and javascript.\"), mdx(\"h2\", null, \"Menu Button\"), mdx(\"p\", null, \"The Dropdown component can easily be used as a so called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"menu button\"), \" by setting the prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"more_menu=\\\"true\\\"\"), \" which shows then the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/icons/primary#icon-more\"\n  }), \"more\"), \" icon, appears as dots. You also could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prevent_selection=\\\"true\\\"\"), \" together with an empty title \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title=\\\"\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label=\\\"Choose an item\\\"\"), \".\"), mdx(\"h2\", null, \"Custom size\"), mdx(\"p\", null, \"Changing the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"width\"), \" of the Dropdown component by CSS is easy done by doing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".dnb-dropdown {\\n  --dropdown-width: 20rem; /* custom width */\\n}\\n\")), mdx(\"p\", null, \"You can also set the width directly, but then it has to be defined like so (including \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"min-width\"), \"):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"/** Because of the included label/status etc. we target the \\\"__shell\\\" */\\n.dnb-dropdown__shell {\\n  width: 10rem;\\n}\\n\\n/** In order to change only the drawer-list width */\\n.dnb-dropdown .dnb-drawer-list__root {\\n  width: 10rem;\\n}\\n\\n/** If more_menu=\\\"true\\\" is used */\\n.dnb-dropdown--is-popup .dnb-drawer-list__root {\\n  width: 10rem;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/components/dropdown"},"frontmatter":{"title":"Dropdown","menuTitle":null,"showTabs":true,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"f39dec20-76cb-5338-8969-6878d7dbdbfd","prev":{"id":"5c02b03d-6e17-52be-88e3-25f2438c9b0f","fields":{"slug":"uilib/components/dropdown/demos"}},"next":{"id":"2045a3b0-877a-5869-8aed-7f960d5c6f46","fields":{"slug":"uilib/components/date-picker/info"}}}}}