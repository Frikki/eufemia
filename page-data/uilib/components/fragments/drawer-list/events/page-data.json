{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/fragments/drawer-list/events","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Events\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Events\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_pre_change\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called before \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_change\"), \", this way you can return false to prevent selection and to prevent \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_change\"), \" execution. Returns the data item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, attributes }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_change\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called on state changes made by the user. Returns an object with the new selected \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"data\"), \" item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, event, attributes, value, selected_item }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_select\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the users selects an item by a click or keyboard navigation. Returns an object with the new selected \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"data\"), \" item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, event, attributes, value, active_item, selected_item }\"), \". The \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"active_item\"), \" property is the currently selected item by keyboard navigation\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_show\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the user presses the drawer-list. Returns the data item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, attributes }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"on_hide\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" will be called once the user presses the drawer-list again, or clicks somewhere else. Returns the data item \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ data, attributes }\"), \".\")))), mdx(\"h3\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"on_change\"), \" vs \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"on_select\"), \" difference\"), mdx(\"p\", null, \"The difference between \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_change\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_select\"), \" is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on_change\"), \" will be called when the state changes, either with a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"click\"), \" or \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"space/enter\"), \" keypress confirmation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on_select\"), \" differs most when the users is navigating by keyboard. Once the uses is pressing e.g. the arrow keys, the selection is changing, but not the state.\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/components/fragments/drawer-list"},"frontmatter":{"title":"DrawerList","menuTitle":null,"showTabs":true,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"e3df0fb3-bc88-598f-98c0-5282a510aaf9","prev":{"id":"d20660f2-b716-5860-aee4-c9b32e01a24d","fields":{"slug":"uilib/components/fragments/drawer-list/properties-table"}},"next":{"id":"b6cadfee-cd8f-52d4-b448-de1739384720","fields":{"slug":"uilib/components/fragments/drawer-list/properties"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}