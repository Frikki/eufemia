{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/fragments/drawer-list/info","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The DrawerList component is a fragment inside other components.\"), mdx(\"p\", null, \"It is used e.g. in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/dropdown\"\n  }), \"Dropdown\"), \".\"), mdx(\"h2\", null, \"Data structure\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// as array\\nconst data = [\\n  // Every data item can, beside \\\"content\\\" - contain what ever\\n  {\\n    // (optional) can be what ever\\n    selected_key: 'key_0',\\n\\n    // (optional) is show insted of \\\"content\\\", once selected\\n    selected_value: 'Item 1 Value',\\n\\n    // Item content as a string or array\\n    content: 'Item 1 Content'\\n  },\\n\\n  // more items ...\\n  {\\n    selected_key: 'key_1',\\n    content: ['Item 2 Value', 'Item 2 Content']\\n  },\\n  {\\n    selected_key: 'key_2',\\n    selected_value: 'Item 3 Value',\\n    content: ['Item 3 Content A', 'Item 3 Content B']\\n  },\\n  {\\n    selected_key: 'key_3',\\n    selected_value: 'Item 4 Value',\\n    content: ['Item 4 Content A', <>Custom Component</>]\\n  }\\n]\\n\\n// as object\\nconst data = {\\n  a: 'A',\\n  b: 'B'\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/components/fragments/drawer-list"},"frontmatter":{"title":"DrawerList","menuTitle":null,"showTabs":true,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"798d3629-e61f-5c2b-a931-73a35b1d48ba","prev":{"id":"45a5698c-10d4-5f64-9e5d-80ea335423d6","fields":{"slug":"uilib/usage/layout/spacing"}},"next":{"id":"5a2d4759-f3a4-55b2-a0bd-4fc0afd203b6","fields":{"slug":"uilib/components/fragments/drawer-list/demos"}}}}}