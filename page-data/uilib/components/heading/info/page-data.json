{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/heading/info","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"tableOfContents":{"items":[{"url":"#description","title":"Description","items":[{"url":"#heading-level-core-concept","title":"Heading level core-concept"},{"url":"#defining-heading-styles--sizes","title":"Defining heading styles / sizes"},{"url":"#heading-level-rules-and-corrections","title":"Heading level rules and corrections"},{"url":"#heading-level-context-provider--asynchron","title":"Heading level context provider / asynchron"},{"url":"#skip-auto-correction-and-warnings","title":"Skip auto correction and warnings"},{"url":"#heading-levels-interceptor-modification","title":"Heading levels interceptor modification","items":[{"url":"#heading-and-routers","title":"Heading and routers"}]},{"url":"#basic-heading-elements","title":"Basic heading elements"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The Heading component is a helper to create automated semantic headings within a boundary of the web heading rules.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Basically, only assistive technologies do have need for semantic headings. But they need them correct.\")), mdx(\"p\", null, \"How does it work? The heading leveling is handled synchronously. But you can easily isolate one level, or a part by using a context provider: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Heading.Level ...\"), \". This allows you to later, asynchronous, add new headings inside. You can nest several contexts inside each.\"), mdx(\"p\", null, \"The first code example is without using context provider. To handle levels in batches or asynchron, use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Heading.Level\"), \" context provider.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Heading } from '@dnb/eufemia/components'\\n\\nrender(\\n  <article>\\n    <Heading>h1</Heading>\\n    <Heading>h2</Heading>\\n    <Heading increase>h3</Heading>\\n    <Heading>still h3</Heading>\\n    <Heading increase>h4</Heading>\\n    <Heading increase>h5</Heading>\\n    <Heading decrease>h4</Heading>\\n    <Heading level={2}>back to h2</Heading>\\n    <Heading increase>h3</Heading>\\n    ...\\n  </article>\\n)\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB:\"), \" Instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"increase\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"decrease\"), \" you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"up\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"down\"), \" as well.\"), mdx(\"h3\", null, \"Heading level core-concept\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"heading\"), \" will inherit its level from its previous sibling.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"level provider\"), \" will create an isolated level context (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Heading.Level\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A heading, nested inside a context (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Heading.Level\"), \") will likewise inherit the previous context level.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A heading can have a set of different \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/typography/heading#headings\"\n  }, \"size\"), \" properties. More details below.\")), mdx(\"h3\", null, \"Defining heading styles / sizes\"), mdx(\"p\", null, \"For the visual part, we simply use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/typography/heading\"\n  }, \"typography styles\"), \" with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"x-large\\\"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Heading } from '@dnb/eufemia/components'\\n\\nrender(\\n  <Heading increase size=\\\"xx-large\\\">\\n    h2, but looks like h1\\n  </Heading>\\n)\\n\")), mdx(\"h3\", null, \"Heading level rules and corrections\"), mdx(\"p\", null, \"The correction will ensure that:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"a heading will start with a level \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"the second level will get corrected be level \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"if a level will increase with a factor of more than one (level={>1}), it will get corrected to only increase by one (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"if a level will be set to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1\"), \" a second time, it will get corrected to level \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2\"), \".\")), mdx(\"p\", null, \"You get a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.warn\"), \" warning (only in development) about corrections. You can attach a custom warning / handler if you need that: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Heading.Level debug={(...logs) => console.info(...logs)}>\")), mdx(\"p\", null, \"You can also disable corrections by using the property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"skip_correction={true}\"), \".\"), mdx(\"h3\", null, \"Heading level context provider / asynchron\"), mdx(\"p\", null, \"In order to control leveling of headings systematically, you can make use of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Heading.Level\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Heading.Increase\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Heading.Decrease\"), \" providers.\"), mdx(\"p\", null, \"They are completely optional. But can help out to solve some kinds of challenges or logic.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Heading } from '@dnb/eufemia/components'\\n\\nrender(\\n  <article>\\n    <Heading>h1</Heading>\\n    <Heading.Level level=\\\"2\\\">\\n      <Heading>h2</Heading>\\n      <Heading increase>h3</Heading>\\n      <Heading>still h3</Heading>\\n      <Heading.Increase>\\n        <Heading>h4</Heading>\\n        <Heading>still h4</Heading>\\n      </Heading.Increase>\\n    </Heading.Level>\\n  </article>\\n)\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"TODO:\"), \" Integration with the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/customisation/provider\"\n  }, \"global Provider\"), \".\"), mdx(\"h3\", null, \"Skip auto correction and warnings\"), mdx(\"p\", null, \"First, warnings will not show up in production builds. And to skip the auto correction of heading levels, simply use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"skip_correction\"), \" property.\"), mdx(\"h3\", null, \"Heading levels interceptor modification\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { resetLevels, setNextLevel } from '@dnb/eufemia/components/Heading'\\n\\n// e.g. during Gatsby route change\\nexport const onRouteUpdate = () => {\\n  resetLevels(1)\\n\\n  // You can also call this method like this:\\n  Heading.resetLevels(1)\\n}\\n\\n// e.g. if you for some reason have to force setting a new level (Heading.setNextLevel)\\nsetNextLevel(3)\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Limitations:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resetLevels\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setNextLevel\"), \" does not change contexts with an entry level higher than one (1).\\nIn order to change also contexts, you can set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overwriteContext\"), \" to true:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"Heading.resetLevels(1, { overwriteContext: true })\\nHeading.setNextLevel(4, { overwriteContext: true })\\n\")), mdx(\"h4\", null, \"Heading and routers\"), mdx(\"p\", null, \"In order to reset the leveling during a page transition on using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router-dom\"), \" v5, you can make use of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withRouter\"), \".\\nIn v6 or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reach/router\"), \", you just cal it in the correct \\\"page\\\" component.\\nYou could additionally define \\\"what is a page change\\\" and what not, by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"location: { pathname }\"), \" property you get inside these routing components.\"), mdx(\"h3\", null, \"Basic heading elements\"), mdx(\"p\", null, \"You may still consider of using the basic elements. But keep in mind, you have to define headings responsibly.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { H1, H2 } from '@dnb/eufemia/elements'\\n\\nrender(\\n  <article>\\n    <H1 size=\\\"large\\\">h1</H1>\\n    <H2 size=\\\"xx-large\\\">h2</H2>\\n  </article>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"fields":{"slug":"uilib/components/heading"},"frontmatter":{"title":"Heading","menuTitle":null,"showTabs":true,"tabs":null,"hideTabs":[{"title":"Events"}]}}]}},"pageContext":{"id":"0ce42a84-5c5d-5575-b662-ce9617468ecf","prev":{"id":"dcbb668c-9276-50d6-8888-3a0cb36e2e4a","fields":{"slug":"uilib/components/global-status/demos"}},"next":{"id":"e7c0b0e9-02e3-55f3-a208-d7736daf94fd","fields":{"slug":"uilib/components/help-button/events"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}