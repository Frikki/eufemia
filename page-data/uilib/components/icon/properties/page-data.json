{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/components/icon/properties",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/icon/properties","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#properties","title":"Properties"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"icon\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(required)\"), \" a React SVG Component or the icon name (in case we use \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"IconPrimary\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-icon-primary\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"title\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Use a title to provide extra information about the icon used.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"border\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" use \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" to display a rounded border with an inherited color. Keep in mind that the icon will have a larger total width and height of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"+0.5em\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"alt\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the alternative label (text version) of the icon. Defaults to the imported icon name.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the dimension of the icon. This will be the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"viewBox\"), \" and represent \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"width\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"height\"), \". Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"16\"), \". You can use \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"small\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"medium\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"auto\"), \". Auto will enable that the icon size gets inherited by the parent HTML element if it provides a \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"font-size\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the color can be any valid color property, such as Hex, RGB or preferable \\u2013 any CSS variable from the \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/usage/customisation/colors\"\n  }, \"colors table\"), \", e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"var(--color-ocean-green)\"), \". Default is no color, which means \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"--color-black-80\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"inherit_color\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Default to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \". Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \" if you do not want to inherit the color by \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"currentColor\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"modifier\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" modifier class to define. Will result in: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-icon--${modifier}\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"skeleton\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", an overlaying skeleton with animation will be shown.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/components/space/properties\"\n  }, \"Space\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" spacing properties like \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"top\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottom\"), \" are supported.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/icon","frontmatter":{"menuTitle":null,"title":"Icon","description":"The main Icon component is basically a wrapper for whatever icon you place within it.","fullscreen":null,"showTabs":true,"hideTabs":[{"title":"Events"}],"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"a2632afa-1315-50a9-bfad-387d21038ae1","slug":"uilib/components/icon/properties","prev":{"id":"3293d824-86eb-5fec-8fe1-6544d4ac0afa","slug":"uilib/components/icon/info"},"next":{"id":"65fc37e8-b2dc-5185-ba1c-f1ae8498e88a","slug":"uilib/components/icon-primary/demos"}}},
    "staticQueryHashes": ["2315317908","3001307379","3001504130","573224243"]}