{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/components/input-masked/properties",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/input-masked/properties","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#properties","title":"Properties"},{"url":"#number-mask-properties","title":"Number mask properties","items":[{"url":"#custom-number-mask-usage","title":"Custom number mask usage"}]},{"url":"#email-mask","title":"Email mask"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"as_number\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" to automatically set a number mask based on the given or inherited locale.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"as_percent\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" to automatically set a number mask with a percentage sign based on the given or inherited locale.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"as_currency\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" to use \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"NOK\"), \" or give it a currency code e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"USD\"), \" to automatically set a currency mask based on the given or inherited locale.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"mask_options\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Use it to manipulate internal masks. You can use it instead of e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number_mask\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"curreny_mask\"), \". All options are listed below.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number_mask\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" to enable the default numbers formatting \\u2013 or give an \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"object\"), \" containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"currency_mask\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" or set the \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"valuta\"), \" (currency_mask=\\\"kr\\\") to enable a custom currency mask \\u2013 or give an \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"object\"), \" containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"kr\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number_format\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Use an object with \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/components/number-format/properties\"\n  }, \"NumberFormat\"), \" e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{ omit_rounding: false }\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"locale\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Define the locale to be used in the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"as_number\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"as_currency\"), \" masked. It will be inherited from the \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/usage/customisation/provider\"\n  }, \"Eufemia Provider\"), \" if not given. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"nb-NO\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"mask\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" A mask can be defined both as a \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme\"\n  }, \"RegExp style of characters\"), \" or a callback function. Example below.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"show_mask\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Show mask when input is empty and has no focus. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"show_guide\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" When \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \" is given, it doesn't print out placeholder characters and only adds mask characters when the user reaches them as they're typing. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"placeholder_char\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" The placeholder character represents the fillable spot in the mask (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"_\"), \"). Defaults to invisible space.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"keep_char_positions\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" When \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", adding or deleting characters will not affect the positions of existing characters. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/components/input/properties\"\n  }, \"Input\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" all \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Input\"), \" properties are supported.\")))), mdx(\"h2\", null, \"Number mask properties\"), mdx(\"p\", null, \"The number mask is used for all kinds of number based masks, like:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Locale based masks:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"as_number\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"as_currency\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"as_percent\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Static masks:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"number_mask\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"currency_mask\"))), mdx(\"p\", null, \"You can \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mask_options\"), \" to manipulate the options.\"), mdx(\"p\", null, \"Defaults to Norwegian number format.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"prefix\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(string): What to display before the amount. Defaults to an empty string.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"suffix\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(string): What to display after the amount. Defaults to an empty string.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"includeThousandsSeparator\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(boolean): Whether or not to separate thousands. Defaults to to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"thousandsSeparatorSymbol\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(string): Character with which to separate thousands. Default to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"' '\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"allowDecimal\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(boolean): Whether or not to allow the user to enter a fraction with the amount. Default to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"decimalSymbol\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(string): Character that will act as a decimal point. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"','\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"decimalLimit\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(number): How many digits to allow after the decimal. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"2\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"integerLimit\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(number): Limit the length of the integer number. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\"), \" for unlimited.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"requireDecimal\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(boolean): Whether or not to always include a decimal point and placeholder for decimal digits after the integer. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"allowNegative\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(boolean): Whether or not to allow negative numbers. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"allowLeadingZeroes\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(boolean): Whether or not to allow leading zeroes. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")))), mdx(\"h3\", null, \"Custom number mask usage\"), mdx(\"p\", null, \"The number mask is included and can be set with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"number_mask\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"\\n// 1. Use the desired configurations\\nconst numberMask = {\\n  prefix: '',\\n  suffix: ',- kr'\\n}\\n\\n// 2. Then pass 'numberMask' to the InputMasked component as the number_mask\\n<InputMasked number_mask={numberMask} ... />\\n\")), mdx(\"p\", null, \"But in case you have to create the mask by yourself, you can do so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import createNumberMask from '@dnb/eufemia/components/input-masked/addons/createNumberMask'\\n\\n// 1. Create the 'numberMask' with your desired configurations\\nconst numberMask = createNumberMask({\\n  prefix: '',\\n  suffix: ',- kr'\\n})\\n\\n// 2. Then pass 'numberMask' to the InputMasked component as the mask\\n<InputMasked mask={numberMask} ... />\\n\")), mdx(\"h2\", null, \"Email mask\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import emailMask from '@dnb/eufemia/components/input-masked/addons/emailMask'\\n\\nrender(\\n  <InputMasked\\n    label=\\\"Email:\\\"\\n    mask={emailMask}\\n    placeholder=\\\"@.\\\"\\n    keep_placeholder=\\\"true\\\"\\n  />\\n)\\n\")), mdx(\"p\", null, \"Read more about other addons \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/text-mask/text-mask\"\n  }, \"on the open-source project\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/input-masked","frontmatter":{"menuTitle":null,"title":"InputMasked","description":"The InputMasked component uses the basic input component, but with some additional masking functionality.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"2aa5cb40-9c2d-5cf9-aae3-7c13fd77c77b","slug":"uilib/components/input-masked/properties","prev":{"id":"4e4ca9a9-bced-5745-9887-96c308b9e9ff","slug":"uilib/components/input-masked/info"},"next":{"id":"1965a747-0514-5486-aec1-871740f07fed","slug":"uilib/components/logo/demos"}}},
    "staticQueryHashes": ["2315317908","3001307379","573224243"]}