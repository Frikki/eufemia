{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/modal/modal-v1/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/modal/modal-v1","frontmatter":{"title":"Modal V1","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#description-modal-v1","title":"Description Modal V1"},{"url":"#mode-drawer","title":"Mode Drawer","items":[{"url":"#drawer-content-wrapper","title":"Drawer content wrapper"},{"url":"#drawer-bar-and-header","title":"Drawer bar and header"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Modal V1\",\n  \"draft\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description Modal V1\"), mdx(\"p\", null, \"Using modal v1 is deprecated. The documentation is only provided for backward compatibility. We recommend everyone to update the implemented Modal components to either Drawer or Dialog.\"), mdx(\"h2\", null, \"Mode Drawer\"), mdx(\"h3\", null, \"Drawer content wrapper\"), mdx(\"p\", null, \"To make it easier to have another colored area below the title, you can make use of the extra wrapper \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Modal.Content>\"), \". Underneath, the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/components/section\"\n  }, \"Section\"), \" is used, but with the color \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"black-3\"), \" as default. This extra \\\"section\\\" is also customized to work together with the Modal and Drawer component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal mode=\\\"drawer\\\">\\n  <Modal.Content>Drawer Content</Modal.Content>\\n</Modal>\\n\")), mdx(\"h3\", null, \"Drawer bar and header\"), mdx(\"p\", null, \"You can provide custom content to both the drawer bar and header. You can provide it either as a React property (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bar_content\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"header_content\"), \"), or by markup.\"), mdx(\"p\", null, \"You may want to provide the title heading as a property. But if you need to, you can also provide a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<H1 />\"), \" Eufemia Component inside the header.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal mode=\\\"drawer\\\" title=\\\"Heading title\\\">\\n  <Modal.Bar>Drawer Bar Content</Modal.Bar>\\n  <Modal.Header>Drawer Header Content</Modal.Header>\\n  <Modal.Content>Drawer Content</Modal.Content>\\n</Modal>\\n\")), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/components/modal#drawer-mode-with-custom-header\"\n  }, \"demo\"), \" for more details.\"));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/modal","frontmatter":{"menuTitle":null,"title":"Modal","description":"Modal dialogs appear on top of the main content changing the mode of the system into a special mode requiring user interaction.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"9e7207e2-ba7f-56f1-bf2d-eb17d7878626","slug":"uilib/components/modal/modal-v1","prev":{"id":"b0b7f996-aee0-5b5e-a26c-b70325c9bb71","slug":"uilib/components/modal/info","frontmatter":{"title":"","description":null}},"next":{"id":"b7ea1806-86e7-573a-a809-704b8fcd5570","slug":"uilib/components/modal/prop-table","frontmatter":{"title":"","description":null}}}},"staticQueryHashes":["2315317908","2480288490","3001504130","573224243"]}