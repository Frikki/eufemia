{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/components/modal/properties",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/modal/properties","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"tabs":null},"tableOfContents":{"items":[{"url":"#modal-properties","title":"Modal Properties","items":[{"url":"#drawer-sizes","title":"Drawer sizes"}]},{"url":"#trigger-properties","title":"Trigger Properties"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Modal Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the id used internal in the modal/drawer root element. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"root\"), \", so the element id will be \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-modal-root\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"content_id\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal/drawer content wrapper.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"title\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the modal/drawer title. Displays on the very top of the content.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"mode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the modal/drawer mode. Can be set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"drawer\"), \". Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"modal\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"labelled_by\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the ID of the trigger component, describing the modal/drawer content. Defaults to the internal \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger\"), \", so make sure You define the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_title\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"children\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"modal_content\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the content which will appear when triggering the modal/drawer.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"header_content\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the content which will appear in the header of the modal/drawer the modal/drawer.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bar_content\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the content which will appear in the bar, above the header, and side-by-side the close button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"min_width\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the minimum Modal content width, defined by a CSS width value like \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"50vw\"), \" (50% of the viewport). Be careful on using fixed \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"min_width\"), \" so you don't break responsiveness. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"30rem\"), \" (average width is set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"60vw\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"max_width\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the maximum Modal content width, defined by a CSS width value like \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"20rem\"), \". Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"60rem\"), \" (average width is set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"60vw\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fullscreen\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" then the modal/drawer content will be shown as fullscreen, without showing the original content behind. Can be set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \" to omit the auto fullscreen. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"auto\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"spacing\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \" then the modal/drawer content will be shown without any spacing. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"align_content\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" Define the inner horizontal alignment of the content. Can be set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"center\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"right\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"centered\"), \". If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"centered\"), \", then the content will also be centered vertically. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"container_placement\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" For \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"drawer\"), \" mode only. Defines the placement on what side the Drawer should be opened. Can be set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"right\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"top\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottom\"), \". Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"right\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"open_state\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" use this prop to control the open/close state by setting either: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"opened\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"closed\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"open_delay\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" forces the modal/drawer to delay the opening. The delay is given in \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ms\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"close_title\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the title of the close button. Defaults to \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Close Modal Window\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"hide_close_button\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if truthy, the close button will not be shown.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"close_button_attributes\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" define any valid Eufemia Button property or HTML attribute inside an object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"no_animation\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", no open/close animation will be shown. Defaults to false.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"no_animation_on_mobile\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" same as \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"no_animation\"), \", but gets triggered only if the viewport width is less than \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"40em\"), \". Defaults to false.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"prevent_close\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" (boolean or string), then the user can't close the modal/drawer.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"prevent_core_style\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" by default the modal/drawer content gets added the core style class \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-core-style\"), \". Use \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"), \" to disable this behavior.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"open_modal\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" set a function to call the callback function, once the modal/drawer should open: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"open_modal={(open) => open()}\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"close_modal\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" set a function to call the callback function, once the modal/drawer should close: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"close_modal={(close) => close()}\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"focus_selector\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" The Modal handles the first focus \\u2013 automatically. How ever, you can defined a custom focus selector the will be used instead \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"focus_selector=\\\".css-selector\\\"\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"overlay_class\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" give the page overlay a custom class name (maps to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-modal__overlay\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"content_class\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" give the content wrapper a custom class name (maps to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-modal__content\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"class\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" give the inner content wrapper a class name (maps to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dnb-modal__content__inner\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_attributes\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" send along custom HTML attributes or properties to the trigger button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_hidden\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if truthy, no trigger button will be show. This can be used in combination with \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"open_state=\\\"opened\\\"\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_variant\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the modal/drawer triggering button variant. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"secondary\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_text\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if type is set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\"), \", this will be the text which triggers the modal/drawer. If set to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"button\"), \" it will be the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"title\"), \" attribute of the button.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_title\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the modal/drawer triggering button title.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_icon\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" the modal/drawer triggering button icon. Can be used instead of a \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_text\"), \". Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"question\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_icon_position\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" defines the modal/drawer triggering icon position. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"), \" because of the tertiary button variant.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_class\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" adds a custom modal trigger class name.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"trigger_disabled\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" if truthy, then the trigger button can't be opened.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/uilib/components/space/properties\"\n  }, \"Space\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"(optional)\"), \" spacing properties like \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"top\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottom\"), \" are supported.\")))), mdx(\"h3\", null, \"Drawer sizes\"), mdx(\"p\", null, \"The Drawer is responsive with the following properties:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"--modal-drawer-width: 40vw;\\n--modal-drawer-min-width: 25rem;\\n--modal-drawer-max-width: 40rem;\\n\")), mdx(\"h2\", null, \"Trigger Properties\"), mdx(\"p\", null, \"Properties targeting the trigger component (Button), but they will be set the same way as the all the other properties:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal trigger_icon=\\\"primary_icon\\\" right=\\\"small\\\">\\n  ... content ...\\n</Modal>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/modal","frontmatter":{"title":"Modal / Drawer","menuTitle":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"title":"Components","menuTitle":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"a04c1f8a-5981-5aca-92ab-5ba700ead264","prev":{"id":"f97dad65-408b-57ce-aa49-07ce3a9c4c98","slug":"uilib/components/modal/info"},"next":{"id":"0302a914-2f7a-50fb-9858-a3620d25c915","slug":"uilib/components/logo/demos"}}},
    "staticQueryHashes": ["1824082843","2315317908","573224243"]}