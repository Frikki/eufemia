{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/number/number-provider","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"draft\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Changing locale or currency\"), mdx(\"p\", null, \"You can either set the locale as a properly e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Provider locale=\\\"en-US\\\" ...\"), \" and handle the change from the app root, or change it inside the app, respective Context:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import Provider from 'dnb-ui-lib/shared/Provider'\\nimport Context from 'dnb-ui-lib/shared/Context'\\n\\nconst ChangeLocale = () => {\\n  const { update, locale } = React.useContext(Context)\\n\\n  // Change the locale\\n  update({ locale: 'en-US' })\\n\\n  // Change the default currency\\n  update({ currency: 'USD' })\\n\\n  return <>{/* e.g. a Dropdown */}</>\\n}\\n\\nrender(\\n  <Provider>\\n    <MyApp>\\n      <ChangeLocale />\\n      text <Number>123</Number> table etc.\\n    </MyApp>\\n  </Provider>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4a32784f-b937-5b0a-a4ea-65abc6ea0e5a","prev":{"id":"950724ab-4912-5591-a4ea-aa927b469a0a","fields":{"slug":"uilib/components/number/number-info"}},"next":{"id":"7d122b8c-898c-5dcf-a7ce-f72608b91026","fields":{"slug":"uilib/components/number/number-properties"}}}}}