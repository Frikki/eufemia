{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/pagination/info/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/pagination/info","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#description","title":"Description","items":[{"url":"#screen-reader-support","title":"Screen reader support"},{"url":"#default-pagination-and-content-handling","title":"Default pagination and content handling","items":[{"url":"#pagination-method-1","title":"Pagination method #1"},{"url":"#pagination-method-2","title":"Pagination method #2"},{"url":"#pagination-method-3","title":"Pagination method #3"},{"url":"#pagination-method-4","title":"Pagination method #4"}]}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The Pagination component is used to split up larger data sets into pages / sections so the users can interact sequentially through the content. It supports both classical \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"page pagination\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"infinity scrolling\"), \".\"), mdx(\"h3\", null, \"Screen reader support\"), mdx(\"p\", null, \"To make it easier for screen-readers to navigate, the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"navigation bar\"), \" markup is placed above the content, even if it is visually the opposite.\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Default pagination and content handling\"), mdx(\"p\", null, \"You can put your content inside the pagination wrapper. This has the advantage that it gives screen-reader users an easier way to interact and understand the content. It will also \\\"keep\\\" the old page height until the next page is inserted while showing an indicator.\"), mdx(\"p\", null, \"The pagination component can be used outside of the content. Then you have to export the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bar\"), \" component directly from Pagination and link it together with your own states.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Bar } from '@dnb/eufemia/components/Pagination'\\n\")), mdx(\"p\", null, \"We recommend contacting one of the developers at Eufemia (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dnb-it.slack.com/archives/CMXABCHEY\"\n  }, \"Slack channel #eufemia-web\"), \") to help you set up \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bar\"), \", so that the pagination becomes screen-reader compliant.\"), mdx(\"h4\", null, \"Pagination method #1\"), mdx(\"p\", null, \"Returning a component directly inside a function as a child.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Pagination } from '@dnb/eufemia/components'\\n\\nrender(\\n  <Pagination page_count={2}>\\n    {() => {\\n      return ReactComponent\\n    }}\\n  </Pagination>\\n)\\n\")), mdx(\"h4\", null, \"Pagination method #2\"), mdx(\"p\", null, \"Returning a function as a child and using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setContent\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Pagination } from '@dnb/eufemia/components'\\n\\nrender(\\n  <Pagination page_count={2}>\\n    {({ page, setContent }) => {\\n      setContent(page, ReactComponent)\\n    }}\\n  </Pagination>\\n)\\n\")), mdx(\"h4\", null, \"Pagination method #3\"), mdx(\"p\", null, \"Using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_change\"), \" event together with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setContent\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Pagination } from '@dnb/eufemia/components'\\n\\nrender(\\n  <Pagination\\n    page_count={2}\\n    on_change={({ page, setContent }) => {\\n      setContent(page, ReactComponent)\\n    }}\\n  />\\n)\\n\")), mdx(\"h4\", null, \"Pagination method #4\"), mdx(\"p\", null, \"Create the instance before using it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { createPagination } from '@dnb/eufemia/components/Pagination'\\n\\n// create our Component instance\\nconst { Pagination, setContent, resetContent } = createPagination()\\n\\n// Later we can do call this\\nsetContent(page, ReactComponent)\\n\\nrender(<Pagination page_count={2} />)\\n\")), mdx(\"hr\", null));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/pagination","frontmatter":{"menuTitle":null,"title":"Pagination","description":"The Pagination component supports both classical pagination and infinity scrolling.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"3006458d-e41e-532b-8432-2647e717210d","slug":"uilib/components/pagination/info","prev":{"id":"914cda23-7b3b-5c59-a804-f321deb672f4","slug":"uilib/components/pagination/infinity-scroller","frontmatter":{"title":"InfinityScroller","description":"The InfinityScroller component is a mode of the Pagination component which loads content continuously as the user scrolls down the page."}},"next":{"id":"f9b2cfba-0e93-556d-a0e3-45e3b20d3535","slug":"uilib/components/pagination/properties","frontmatter":{"title":"","description":null}}}},"staticQueryHashes":["2315317908","2480288490","3001504130","573224243"]}