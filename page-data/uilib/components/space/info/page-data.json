{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/space/info/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/space/info","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#description","title":"Description","items":[{"url":"#spacing-table","title":"Spacing Table"},{"url":"#value-format","title":"Value Format"},{"url":"#components-and-spacing","title":"Components and Spacing"},{"url":"#spacing-shorthands","title":"Spacing shorthands"},{"url":"#does-it-not-work-as-expected","title":"Does it not work as expected?"},{"url":"#margin-collapsing","title":"Margin collapsing"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The Space component provides \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margins\"), \" within the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/layout/spacing#spacing-helpers\"\n  }, \"provided spacing patterns\"), \".\"), mdx(\"p\", null, \"The reason why this exists is to make your syntax as clean as possible.\\nThis way You see directly in words what the spacing is for every affected component\"), mdx(\"h3\", null, \"Spacing Table\"), mdx(SpacingTable, {\n    mdxType: \"SpacingTable\"\n  }), mdx(\"h3\", null, \"Value Format\"), mdx(\"p\", null, \"There are a couple of different ways you can define the spacing types and values:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Types:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"small small x-small\"), \" (combine types up to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"10rem\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"number:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"2.5\"), \" (equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rem\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"rem:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"2.5rem\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"px:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"40px\"), \" (gets converted to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rem\"), \")\")), mdx(\"p\", null, \"To get a spacing of e.g. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2.5rem\"), \" (40px)- you may combine types \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"large\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-small\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"/** All of these methods will result in the same spacing */\\n<Space top=\\\"large x-small\\\" right=\\\"2.5\\\" bottom=\\\"2.5rem\\\" left=\\\"40px\\\" />\\n\")), mdx(\"p\", null, \"With React, you can also use an object with the different directions:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"/** All of these methods will result in the same spacing */\\n<Space\\n  space={{\\n    top: 'large x-small',\\n    right: '2.5',\\n    bottom: '2.5rem',\\n    left: '40px',\\n  }}\\n/>\\n\")), mdx(\"h3\", null, \"Components and Spacing\"), mdx(\"p\", null, \"Every component supports the spacing patterns, so it's possible to send in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"top\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"right\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bottom\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"left\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"space\"), \" properties directly, like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Button top=\\\"large x-small medium\\\" />\\n<Button space={{ top: \\\"large x-small medium\\\" }} />\\n\")), mdx(\"h3\", null, \"Spacing shorthands\"), mdx(\"p\", null, \"A shorthand for getting 1rem (most used) is to simply send in a boolean, set as true. No given value in JSX means true, so you only need the property key:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"/** Equivalent to top=\\\"small\\\" */\\n<Button top />\\n\\n/** Equivalent to top=\\\"small\\\" right=\\\"small\\\" bottom=\\\"small\\\" left=\\\"small\\\" */\\n<Button space />\\n\")), mdx(\"p\", null, \"In order to set all four directions at once, you can provide a string as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"space\"), \" value:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Button space=\\\"large x-small medium\\\" />\\n\")), mdx(\"h3\", null, \"Does it not work as expected?\"), mdx(\"p\", null, \"Is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin\"), \" not giving the expected spacing? That may be the reason due to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Margin Collapsing\"), \". Margins collapse in the following situations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adjacent siblings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Completely empty boxes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parent and first or last child element\")), mdx(\"p\", null, \"The best solution is to only use one direction of margins e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bottom\"), \". Or you can set the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/components/space/properties\"\n  }, \"collapse property\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \".\"), mdx(\"h3\", null, \"Margin collapsing\"), mdx(\"p\", null, \"In order to help out to handle unwanted margin collapsing in typography elements, se \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/elements/heading#example-of-margin-collapsing\"\n  }, \"this example\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/space","frontmatter":{"menuTitle":null,"title":"Space","description":"The Space component provides margins within the provided spacing patterns.","fullscreen":null,"showTabs":true,"hideTabs":[{"title":"Events"}],"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"995396c4-d729-53e8-9f46-fee2d8e34b82","slug":"uilib/components/space/info","prev":{"id":"946ed90c-0b5e-551c-994c-eeb9cf491654","slug":"uilib/components/space/demos","frontmatter":{"title":"","description":null}},"next":{"id":"983fc78d-4364-5ba1-8c4e-c30fb981d5ec","slug":"uilib/components/space/properties","frontmatter":{"title":"","description":null}}}},"staticQueryHashes":["2315317908","3001504130","573224243"]}