{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/components/step-indicator/demos-v1",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/step-indicator/demos-v1","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#demos-v1","title":"Demos v1","items":[{"url":"#stepindicator-with-navigation","title":"StepIndicator with navigation"},{"url":"#stepindicator-customized","title":"StepIndicator customized"},{"url":"#stepindicator-with-urls","title":"StepIndicator with urls"},{"url":"#default-stepindicator-with-no-navigation","title":"Default StepIndicator with no navigation"},{"url":"#default-stepindicator-with-strings-only","title":"Default StepIndicator with strings only"},{"url":"#stepindicator-with-custom-renderer","title":"StepIndicator with custom renderer."}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true,\n  \"draft\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Demos v1\"), mdx(\"h3\", null, \"StepIndicator with navigation\"), mdx(\"p\", null, \"Every visited step can be clicked.\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"step-indicator-buttons\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<StepIndicator\\n  use_navigation=\\\"true\\\"\\n  active_item={1}\\n  on_change={({ currentItem }) => {\\n    console.log('on_change', currentItem)\\n  }}\\n  data={[\\n    {\\n      title: 'Om din nye bolig',\\n    },\\n    {\\n      title: 'Ditt l\\xE5n og egenkapital',\\n      on_click: ({ currentItem }) =>\\n        console.log(currentItem)\\n    },\\n    {\\n      title: 'Oppsummering',\\n    }\\n  ]}\\n/>\\n\\t\"), mdx(\"h3\", null, \"StepIndicator customized\"), mdx(\"p\", null, \"Completely customized step indicator.\"), mdx(ComponentBox, {\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nfunction CustomStepIndicator({ children, ...props }) {\\n  const [step, setStep] = React.useState(0)\\n  return (\\n    <>\\n      <StepIndicator\\n        use_navigation\\n        active_item={step}\\n        on_change={({ currentItem }) => setStep(currentItem)}\\n        {...props}\\n      />\\n      <Section style_type=\\\"lavender\\\" spacing>\\n        {children(step)}\\n      </Section>\\n    </>\\n  )\\n}\\nrender(<CustomStepIndicator\\n\\tdata={\\n\\t[\\n\\t\\t{\\n\\t\\t\\ttitle: 'First',\\n\\t\\t\\tis_active: true\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: 'Second',\\n\\t\\t\\tis_active: true\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: 'Last',\\n\\t\\t\\tis_active: true\\n\\t\\t}\\n\\t]\\n\\t}\\n>\\n\\t{(step) => {\\n\\t\\tswitch (step) {\\n\\t\\t\\tcase 0:\\n\\t\\t\\t\\treturn <>Step One</>\\n\\t\\t\\tcase 1:\\n\\t\\t\\t\\treturn <>Step Two</>\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\treturn <>Fallback</>\\n\\t\\t}\\n\\t}}\\n</CustomStepIndicator>)\\n\\t\"), mdx(\"h3\", null, \"StepIndicator with urls\"), mdx(\"p\", null, \"Using urls for visited steps only. \"), mdx(ComponentBox, {\n    \"data-visual-test\": \"step-indicator-urls\",\n    scope: {\n      createBrowserHistory: createBrowserHistory\n    },\n    hideCode: true,\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst history = createBrowserHistory()\\nconst StepIndicatorWithUrl = () => {\\n\\tconst [activeUrl, setActiveUrl] = React.useState(history.location.search)\\n\\tReact.useState(() => {\\n\\t\\tconst unlisten = history.listen(({ search }) => {\\n\\t\\t\\tsetActiveUrl(search)\\n\\t\\t})\\n\\t\\treturn () => unlisten()\\n\\t}, [])\\n\\treturn (<StepIndicator\\n\\t\\tactive_item=\\\"0\\\"\\n\\t\\tactive_url={activeUrl}\\n\\t\\ton_change={() => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\te.event.preventDefault()\\n\\t\\t\\t\\thistory.push(e.item.url)\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t//\\n\\t\\t\\t}\\n\\t\\t}}\\n\\t\\tdata={[\\n\\t\\t{\\n\\t\\t\\ttitle: 'Om din nye bolig',\\n\\t\\t\\turl: '?a'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: 'Ditt l\\xE5n og egenkapital',\\n\\t\\t\\turl: '?b'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: 'Oppsummering',\\n\\t\\t\\turl: '?c',\\n\\t\\t\\turl_future: ''\\n\\t\\t}\\n\\t\\t]}\\n\\t/>)\\n}\\nrender(<>\\n\\t<StepIndicatorWithUrl />\\n\\t<Section spacing style_type=\\\"lavender\\\"><Anchor href=\\\"?b\\\">Navigate to B</Anchor></Section>\\n</>)\\n\\t\"), mdx(\"h3\", null, \"Default StepIndicator with no navigation\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"step-indicator-default\",\n    mdxType: \"ComponentBox\"\n  },\n  /* @jsx */\n  \"\\n<StepIndicator\\n  data={[\\n    {\\n      title: 'Om din nye bolig'\\n    },\\n    {\\n      title: 'Ditt l\\xE5n og egenkapital'\\n    },\\n    {\\n      title: 'Oppsummering',\\n      is_current: true\\n    }\\n  ]}\\n/>\\n\\t\"), mdx(\"h3\", null, \"Default StepIndicator with strings only\"), mdx(ComponentBox, {\n    mdxType: \"ComponentBox\"\n  },\n  /* @jsx */\n  \"\\n<StepIndicator\\n  active_item=\\\"1\\\"\\n  data={[\\n    'Om din nye bolig',\\n    'Ditt l\\xE5n og egenkapital',\\n    'Oppsummering'\\n  ]}\\n/>\\n\\t\"), mdx(\"h3\", null, \"StepIndicator with custom renderer.\"), mdx(ComponentBox, {\n    mdxType: \"ComponentBox\"\n  }, \"\\n<StepIndicator\\n  use_navigation\\n  active_item={1}\\n  on_change={({ currentItem }) => {\\n    console.log('on_change', currentItem)\\n  }}\\n  on_item_render={({ StepItem }) => {\\n    return (\\n      <StepItem\\n        onClick={e => console.log(e)}\\n      />\\n    )\\n  }}\\n  data={[\\n    {\\n      title: 'Om din nye bolig',\\n    },\\n    {\\n      title: 'Ditt l\\xE5n og egenkapital',\\n      on_click: ({ currentItem }) =>\\n        console.log(currentItem),\\n      on_render: ({ StepItem, props, params }) => (\\n        <StepItem\\n          onClick={e => console.log(e)}\\n        />\\n      )\\n    },\\n    {\\n      title: 'Oppsummering',\\n      /*\\n        We can also overwrite the states\\n        is_active: true\\n        is_current: true\\n      */\\n    }\\n  ]}\\n/>\\n\\t\"));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/step-indicator","frontmatter":{"menuTitle":null,"title":"StepIndicator","description":"The step indicator (progress indicator) is a visual representation of a users progress through a set of steps or series of actions.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"eab1211d-9c2f-5c0a-ad56-e6ea295137a7","slug":"uilib/components/step-indicator/demos-v1","prev":{"id":"983fc78d-4364-5ba1-8c4e-c30fb981d5ec","slug":"uilib/components/space/properties"},"next":{"id":"912c1b1c-3525-53ff-8775-9ed97d510b52","slug":"uilib/components/step-indicator/events"}}},
    "staticQueryHashes": ["2315317908","4227086163","573224243"]}