{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/tabs/demos/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/components/tabs/demos","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#demos","title":"Demos","items":[{"url":"#tabs-where-content-is-provided-from-outside","title":"Tabs where content is provided from outside"},{"url":"#tabs-using-data-property-and-content-object","title":"Tabs using 'data' property and content object"},{"url":"#tabs-using-data-property-only","title":"Tabs using 'data' property only"},{"url":"#tabs-using-react-components-only","title":"Tabs using React Components only"},{"url":"#tabs-without-bottom-border","title":"Tabs without bottom border"},{"url":"#tabs-and-prerender","title":"Tabs and prerender"},{"url":"#tabs-optimized-for-narrow-screens","title":"Tabs optimized for narrow screens"},{"url":"#horizontal-aligned-tabs","title":"Horizontal aligned tabs"},{"url":"#max-width-usage","title":"max-width usage"},{"url":"#router-integration","title":"Router integration"}]},{"url":"#example-content","title":"Example Content"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Demos\"), mdx(\"h3\", null, \"Tabs where content is provided from outside\"), mdx(\"p\", null, \"As this may be a more common use case, we still have to ensure our tabs content is linked together with the tabs \\u2013 because of accessibility.\"), mdx(\"p\", null, \"You have to provide an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" to both of the components.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB:\"), \" You don't need to use a function inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tabs.Content\"), \" \\u2013 it can contain any element you need, as long as it is a React Node.\"), mdx(TabsExampleContentOutside, {\n    mdxType: \"TabsExampleContentOutside\"\n  }), mdx(\"h3\", null, \"Tabs using 'data' property and content object\"), mdx(TabsExampleContentObject, {\n    mdxType: \"TabsExampleContentObject\"\n  }), mdx(\"h3\", null, \"Tabs using 'data' property only\"), mdx(TabsExampleUsingData, {\n    mdxType: \"TabsExampleUsingData\"\n  }), mdx(\"h3\", null, \"Tabs using React Components only\"), mdx(\"p\", null, \"Also, this is an example of how to define a different content background color, by providing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content_style\"), \".\"), mdx(TabsExampleLeftAligned, {\n    mdxType: \"TabsExampleLeftAligned\"\n  }), mdx(\"h3\", null, \"Tabs without bottom border\"), mdx(TabsNoBorder, {\n    mdxType: \"TabsNoBorder\"\n  }), mdx(\"h3\", null, \"Tabs and \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"prerender\")), mdx(\"p\", null, \"By using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prerender={true}\"), \" the content is kept inside the DOM.\"), mdx(TabsExamplePrerender, {\n    mdxType: \"TabsExamplePrerender\"\n  }), mdx(\"h3\", null, \"Tabs optimized for narrow screens\"), mdx(\"p\", null, \"Navigation buttons will be shown and the tabs-list will be scrollable.\"), mdx(TabsExampleScrollable, {\n    mdxType: \"TabsExampleScrollable\"\n  }), mdx(\"h3\", null, \"Horizontal aligned tabs\"), mdx(TabsExampleHorizontalAligned, {\n    mdxType: \"TabsExampleHorizontalAligned\"\n  }), mdx(\"h3\", null, \"max-width usage\"), mdx(TabsExampleMaxWidth, {\n    mdxType: \"TabsExampleMaxWidth\"\n  }), mdx(\"h3\", null, \"Router integration\"), mdx(\"p\", null, \"This demo uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reach/router\"), \". More \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codesandbox.io/embed/8z8xov7xyj\"\n  }, \"examples on CodeSandbox\"), \".\"), mdx(TabsExampleReachRouterNavigation, {\n    mdxType: \"TabsExampleReachRouterNavigation\"\n  }), mdx(\"h2\", null, \"Example Content\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const exampleContent = {\\n  first: () => <H2>First</H2>,\\n  second: () => <Input label=\\\"Label:\\\">Focus me with next Tab key</Input>,\\n  third: () => (\\n    <>\\n      <p>Paragraph 1</p>\\n      <p>Paragraph 2</p>\\n    </>\\n  ),\\n  fourth: 'Fourth as a string only',\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/components/tabs","frontmatter":{"menuTitle":null,"title":"Tabs","description":"Tabs are a set of buttons which allow navigation between content that is related and on the same level of hierarchy.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null}},{"slug":"uilib/components","frontmatter":{"menuTitle":null,"title":"Components","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"4dd039a6-3e04-5de8-8e8e-8041ccdef349","slug":"uilib/components/tabs/demos","prev":{"id":"c3d210bd-862f-5bfc-bc4c-3a77fdcc23f8","slug":"uilib/components/table/properties","frontmatter":{"title":"","description":null}},"next":{"id":"b07e79ab-cdcd-5a08-a62a-8171b2bdc422","slug":"uilib/components/tabs/events","frontmatter":{"title":"","description":null}}}},"staticQueryHashes":["2315317908","3001504130","573224243"]}