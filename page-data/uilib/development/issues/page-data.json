{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/development/issues","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Issues","description":null,"fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#issues","title":"Issues","items":[{"url":"#dependencies","title":"Dependencies"},{"url":"#sass","title":"sass"},{"url":"#puppeteer","title":"puppeteer"},{"url":"#eslint","title":"eslint"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Issues\",\n  \"draft\": true,\n  \"order\": 8\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Issues\"), mdx(\"h2\", null, \"Dependencies\"), mdx(\"h2\", null, \"sass\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Eufemia uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-sass\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sass\"), \" (dart based) because we render sass during jest tests with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sass.renderSync\"), \" \\u2013 even that should work with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sass\"), \" as well, it can't find the file it says.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We use several places a module called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-sass-once-importer\"), \", that is compatible only with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-sass\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sass-loader\"), \" v10 because \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeError: this.getOptions is not a function\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-sass\"), \" v5, else we get this error message during portal run:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ERROR in polyfill\\nModule not found: TypeError: Cannot read property 'indexOf' of\\nundefined\\n\")))), mdx(\"h2\", null, \"puppeteer\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Screen shot tests fails when simulating \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"active\"), \" state and v9 of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"puppeteer\"), \" is sued. Probably because the delay property has changed? Because the active simulation is not kicking in.\")), mdx(\"h2\", null, \"eslint\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Where where some issues with newer versions than v7.19.0. This way be fixed in later verions.\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"f812cc0d-70de-5f9f-8549-3cc6e8c63aed","prev":{"id":"24af35a6-458c-5710-99c3-304b0cdf798f","fields":{"slug":"uilib/development/commit"}},"next":{"id":"383ceed3-097b-5dc0-b5dc-330bd2947858","fields":{"slug":"uilib/development/portal"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}