{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/development/ui-lib",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"NPM Library","description":null,"fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#npm-library","title":"NPM Library","items":[{"url":"#important-aspects","title":"Important aspects"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"NPM Library\",\n  \"draft\": true,\n  \"order\": 4\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"NPM Library\"), mdx(\"p\", null, \"These folders/files will be a part of the NPM \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://unpkg.com/@dnb/eufemia@latest/\"\n  }, \"package\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/elements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/extensions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/fragments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/icons\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/style\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/cjs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/es\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/esm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/umd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/shared\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"web-components.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lib.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"index.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"package.json\")), mdx(\"h2\", null, \"Important aspects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PropTypes are getting wrapped with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"babel-plugin-transform-react-remove-prop-types\"\n  }, \"this babel plugin\"), \") \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"process.env.NODE_ENV !== \\\"production\\\"\"), \". This way applications in production, will not include \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"propTypes\"), \". If a component depends to check \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"propTypes\"), \" during runtime, consider to export them, so they not getting removed \\u2013 or simply use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"defaultProps\"), \" for the operation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As for now, we use React Class Components, because there may happen the case, where two React instances are used, and that does not work with Hooks. Also performance is a key factor. But we may consider a rewrite at some point of time.\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"203c4f5d-9ae8-5fb7-a73e-7b373a212d55","prev":{"id":"357707fe-72d4-520a-b240-ad288761ca70","fields":{"slug":"uilib/development/types"}},"next":{"id":"2de5ae08-f1cf-559d-b23b-74c4db7a6f77","fields":{"slug":"uilib/components/autocomplete"}}}},
    "staticQueryHashes": ["182237034","2315317908","786658678"]}