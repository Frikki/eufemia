{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/elements/horizontal-rule",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Hr-line","description":null,"fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#horizontal-rule","title":"Horizontal Rule"},{"url":"#customize-hr-color","title":"Customize hr color"},{"url":"#horizontal-rule-in-fullscreen","title":"Horizontal Rule in fullscreen"},{"url":"#horizontal-rule-thickness--hairline","title":"Horizontal Rule thickness / hairline"},{"url":"#horizontal-rule-thickness-tests","title":"Horizontal Rule thickness tests"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hr-line\",\n  \"redirect_from\": [\"/uilib/elements/hr\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Horizontal Rule\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<hr />\"), \" tag in HTML stands for horizontal rule and is used to insert a horizontal rule or a thematic break in an HTML page to divide or separate document sections. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<hr />\"), \" tag is an empty tag and it does not require an end tag.\"), mdx(\"h2\", null, \"Customize hr color\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"/* Example of how to change the line color */\\n.dnb-hr:after {\\n  color: var(--color-ocean-green);\\n}\\n\")), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"hr-default\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Hr } from '@dnb/eufemia/elements'\\nrender(<>\\n  Something\\n  <Hr />\\n  Something\\n</>)\\n\"), mdx(\"h2\", null, \"Horizontal Rule in fullscreen\"), mdx(\"p\", null, \"Use the modifier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-hr--fullscreen\"), \" to get a full screen rule. You can also set just \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fullscreen={true}\"), \".\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"hr-fullscreen\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Hr } from '@dnb/eufemia/elements'\\nrender(<>\\n  Something\\n  <Hr fullscreen />\\n  Something\\n</>)\\n\"), mdx(\"h2\", null, \"Horizontal Rule thickness / hairline\"), mdx(\"p\", null, \"Use the modifier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-hr--light\"), \" to get a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.5px\"), \" rule. You can also set just \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"light={true}\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium={true}\"), \".\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"hr-thickness\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Hr } from '@dnb/eufemia/elements'\\nrender(<>\\n  <Dl>\\n    <Dt>Light 0.5px</Dt>\\n    <Dd><Hr light /></Dd>\\n  </Dl>\\n  <Dl>\\n    <Dt>Default 1px</Dt>\\n    <Dd><Hr /></Dd>\\n  </Dl>\\n  <Dl>\\n    <Dt>Medium 1.5px</Dt>\\n    <Dd><Hr medium /></Dd>\\n  </Dl>\\n</>)\\n\"), mdx(\"h2\", null, \"Horizontal Rule thickness tests\"), mdx(\"p\", null, \"Browsers do render borders differently. They also handle sizing differently. E.g. will \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.5px\"), \" be rounded up to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2px\"), \" in Chromium based browsers (on size related CSS properties).\"), mdx(\"p\", null, \"In order to address different solutions, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://r8ljo.csb.app/\"\n  }, \"here is a test case\"), \", finding the right balance of creating \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.5px\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.5px\"), \" lines, browser compatibility and correct look. As per year 2020, Firefox does the best job on showing the line thickness correct.\"));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"fields":{"slug":"uilib/elements/horizontal-rule"},"frontmatter":{"title":"Hr-line","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"3a75adf1-3cec-5dbb-938f-31679c06a844","prev":{"id":"2917bf8a-7c49-509c-a32a-bcbd17419aa5","fields":{"slug":"uilib/elements/image"}},"next":{"id":"1a709cac-736e-5c40-8ee8-5198c77c1488","fields":{"slug":"uilib/elements/lists"}}}},
    "staticQueryHashes": ["2315317908","3433733815","786658678"]}