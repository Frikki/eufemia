{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/elements/image","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Image","description":null,"fullscreen":null,"showTabs":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Image\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Image\"), mdx(\"p\", null, \"The image element associated with the class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-img\"), \" does not have much opinionated styling. It exists more to have a future possibility to optimize and add features.\"), mdx(\"p\", null, \"As of now, the React image \\\"element\\\" (Img) does provide a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"figure\"), \" element with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"role=\\\"img\\\"\"), \" and an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"img\"), \" tag inside. This is mainly to support the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/skeleton\"\n  }), \"Skeleton\"), \" provider.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Img } from 'dnb-ui-lib/elements'\\n\\nrender(<Img alt=\\\"...\\\" src=\\\"...\\\" width=\\\"100\\\" height=\\\"100\\\" />)\\n\")), mdx(\"h3\", null, \"Basic image element\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"image-plain\",\n    useRender: true,\n    hideCode: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst StyledImg = styled(Img)`\\n  border-radius: 1rem;\\n`\\nconst CustomImage = () => {\\n\\treturn (\\n    <StyledImg\\n      width=\\\"100\\\"\\n      height=\\\"100\\\"\\n      alt=\\\"DNB logo\\\"\\n      src=\\\"/android-chrome-192x192.png\\\"\\n    />\\n\\t)\\n}\\nrender(<CustomImage />)\\n\"), mdx(\"h3\", null, \"Image with invalid source\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"image-no-source\",\n    useRender: true,\n    hideCode: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst StyledImg = styled(Img)`\\n  border-radius: 1rem;\\n`\\nconst CustomImage = () => {\\n\\treturn (\\n    <StyledImg\\n      width=\\\"100\\\"\\n      height=\\\"100\\\"\\n      alt=\\\"Alt text\\\"\\n      src=\\\"https://invalid\\\"\\n    />\\n\\t)\\n}\\nrender(<CustomImage />)\\n\"), mdx(\"h3\", null, \"Image with caption\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"image-caption\",\n    useRender: true,\n    hideCode: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst StyledImg = styled(Img)`\\n  border-radius: 1rem;\\n`\\nconst CustomImage = () => {\\n\\treturn (\\n    <StyledImg\\n      width=\\\"100\\\"\\n      height=\\\"100\\\"\\n      alt=\\\"Alt text\\\"\\n      caption=\\\"Caption text\\\"\\n      src=\\\"/android-chrome-192x192.png\\\"\\n    />\\n\\t)\\n}\\nrender(<CustomImage />)\\n\"), mdx(\"h3\", null, \"Image element with skeleton\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"image-skeleton\",\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst StyledImg = styled(Img)`\\n  border-radius: 1rem;\\n`\\nconst CustomImage = () => {\\n\\tconst [state, setState] = React.useState(true)\\n\\treturn (\\n    <Skeleton show={state}>\\n      <StyledImg\\n        width=\\\"100\\\"\\n        height=\\\"100\\\"\\n        alt=\\\"DNB logo\\\"\\n        src=\\\"/android-chrome-192x192.png\\\"\\n      />\\n      <br />\\n      <Skeleton.Exclude>\\n        <ToggleButton checked={state} on_change={({ checked }) => setState(checked)} top=\\\"large\\\">Toggle</ToggleButton>\\n      </Skeleton.Exclude>\\n    </Skeleton>\\n\\t)\\n}\\nrender(<CustomImage />)\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/elements/image"},"frontmatter":{"title":"Image","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"cf26be79-f97a-5dfb-97fa-f5e4ec77a87d","prev":{"id":"d34f7f48-94be-57e5-b2ec-eabc054325eb","fields":{"slug":"uilib/elements/code"}},"next":{"id":"a6058e0b-be42-5c9b-8667-dbb0da7bd1a0","fields":{"slug":"uilib/elements/horizontal-rule"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}