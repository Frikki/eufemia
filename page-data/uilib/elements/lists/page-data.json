{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/elements/lists","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Lists","description":null,"fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#lists","title":"Lists","items":[{"url":"#list-modifiers","title":"List modifiers"},{"url":"#unordered-lists","title":"Unordered Lists"},{"url":"#ordered-lists-nested","title":"Ordered Lists (nested)","items":[{"url":"#ordered-list-style-position-outside-vs-inside","title":"Ordered list style position (outside vs inside)"},{"url":"#ordered-list-with-other-types","title":"Ordered list with other types"}]},{"url":"#definition-lists","title":"Definition Lists"},{"url":"#remove-list-styles","title":"Remove list styles"}]}]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lists\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Lists\"), mdx(\"h3\", null, \"List modifiers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-ul--nested\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-ol--nested\"), \" will ensure a nested structure of several lists\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-ol--outside\"), \" (default) defines the position of the marker\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-ol--inside\"), \" defines the position of the marker\")), mdx(\"p\", null, \"With React you can also send in the modifiers as booleans:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Ol } from 'dnb-ui-lib/elements'\\n\\nrender(\\n  <Ol nested inside>\\n    <li>Item</li>\\n  </Ol>\\n)\\n\")), mdx(\"h3\", null, \"Unordered Lists\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"lists-ul\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Ul, Li } from 'dnb-ui-lib/elements'\\n// Instead of using className=\\\"dnb-ul\\\", we use Ul\\nrender(<Ul>\\n  <Li>Item 1</Li>\\n  <Li>Item 2</Li>\\n  <Li>\\n    Item 3\\n    <Ul>\\n      <Li>\\n        Item 1 <br />\\n        Break with a <a className=\\\"dnb-anchor\\\" href=\\\"/\\\">Anchor (Text Link</a>\\n      </Li>\\n      <Li>Item 2</Li>\\n    </Ul>\\n  </Li>\\n  <Li>Item 4</Li>\\n</Ul>)\\n\"), mdx(\"h3\", null, \"Ordered Lists (nested)\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"lists-ol\",\n    caption: \"Nested ol list by using `.dnb-ol--nested`\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Ol, Li } from 'dnb-ui-lib/elements'\\n// Instead of using className=\\\"dnb-ol\\\", we use Ol (and Li)\\nrender(<Ol nested>\\n  <Li>Item</Li>\\n  <Li>\\n    Item\\n    <Ol>\\n      <Li>\\n        Item\\n        <Ol>\\n          <Li>Item</Li>\\n          <Li>Item</Li>\\n        </Ol>\\n      </Li>\\n      <Li>Item\\n        <Ol>\\n          <Li>Item</Li>\\n          <Li>Item</Li>\\n        </Ol>\\n      </Li>\\n    </Ol>\\n  </Li>\\n  <Li>Item</Li>\\n</Ol>)\\n\"), mdx(\"h4\", null, \"Ordered list style position (outside vs inside)\"), mdx(\"p\", null, \"The list marker will be inside of wrapped text / text with newlines.\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"lists-ol-style-position\",\n    caption: \"Nested ol with inside modifier `.dnb-ol--inside`\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Ol, Li } from 'dnb-ui-lib/elements'\\nconst WidthLimit = styled.div`\\n  max-width: 22rem;\\n  .dnb-ol li::before {\\n    font-weight: var(--font-weight-bold);\\n  }\\n`\\nrender(<WidthLimit>\\n<Ol nested className=\\\"dnb-ol--outside\\\">\\n  <Li>\\n    Using <code className=\\\"dnb-code\\\">dnb-ol--outside</code> (default): Using Porta commodo tempus interdum habitant urna magna aliquet quam nisl\\n    <Ol>\\n      <Li>\\n        Porta commodo tempus interdum habitant urna magna aliquet quam nisl\\n      </Li>\\n    </Ol>\\n  </Li>\\n</Ol>\\n<Ol nested className=\\\"dnb-ol--inside\\\">\\n  <Li>\\n    New ol, using <code className=\\\"dnb-code\\\">dnb-ol--inside</code>: Porta commodo tempus interdum habitant urna magna aliquet quam nisl\\n    <Ol>\\n      <Li>\\n        Porta commodo tempus interdum habitant urna magna aliquet quam nisl\\n      </Li>\\n    </Ol>\\n  </Li>\\n</Ol>\\n</WidthLimit>)\\n\"), mdx(\"h4\", null, \"Ordered list with other types\"), mdx(\"p\", null, \"Ordered lists do support natively other types, like \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"letters\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"roman numerals\"), \". You can define that by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" HTML attribute.\"), mdx(ComponentBox, {\n    hideCode: true,\n    \"data-visual-test\": \"lists-ol-types\",\n    caption: \"ol with custom type\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n <Ol type=\\\"A\\\">\\n  <Li>Item</Li>\\n  <Li>\\n    Item\\n    <Ol type=\\\"I\\\" start=\\\"3\\\">\\n      <Li>\\n        Item\\n        <Ol type=\\\"i\\\">\\n          <Li>Item</Li>\\n          <Li>Item</Li>\\n        </Ol>\\n      </Li>\\n    </Ol>\\n  </Li>\\n  <Li>Item</Li>\\n</Ol>\\n\"), mdx(\"h3\", null, \"Definition Lists\"), mdx(\"p\", null, \"Use Definition Lists when ever you have to tie together any items that have a direct relationship with each other (name/value sets).\"), mdx(\"p\", null, \"You can use multiples of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<dt>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<dd>\"), \" within a definition list.\"), mdx(\"p\", null, \"You can also use block level elements in the definition description, such as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<p>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ul>\"), \" elements. But you cannot use block level elements inside a definition term.\"), mdx(\"p\", null, \"Any styling can be applied.\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    \"data-visual-test\": \"lists-dl\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n// import { Dl, Dt, Dd } from 'dnb-ui-lib/elements'\\nrender(<Dl>\\n  <Dt>Term</Dt>\\n  <Dd>Description</Dd>\\n  <Dt>Term</Dt>\\n  <Dd>Description 1</Dd>\\n  <Dd>Description 2</Dd>\\n  <Dd>Description 3</Dd>\\n  <dl className=\\\"dnb-dl\\\">\\n    <Dt>Sub Term</Dt>\\n    <Dd>Sub Description</Dd>\\n  </dl>\\n</Dl>)\\n\"), mdx(\"h3\", null, \"Remove list styles\"), mdx(ComponentBox, {\n    hideCode: true,\n    \"data-visual-test\": \"lists-reset\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<ul className=\\\"dnb-ul dnb-unstyled-list\\\">\\n  <li>ul Item</li>\\n</ul>\\n<ol className=\\\"dnb-ol dnb-unstyled-list\\\">\\n  <li>ol Item</li>\\n</ol>\\n<dl className=\\\"dnb-dl dnb-unstyled-list\\\">\\n  <dt>dl Title</dt>\\n  <dd>dl Description</dd>\\n</dl>\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/elements/lists"},"frontmatter":{"title":"Lists","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"9cecfce5-03aa-5313-b841-531607817a7c","prev":{"id":"6df621f9-a8f3-599a-8951-16b7e83b1c7a","fields":{"slug":"uilib/elements/anchor"}},"next":{"id":"cf26be79-f97a-5dfb-97fa-f5e4ec77a87d","fields":{"slug":"uilib/elements/image"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}