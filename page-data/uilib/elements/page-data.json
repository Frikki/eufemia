{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/elements","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"HTML Elements","description":null,"fullscreen":null,"showTabs":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"HTML Elements\",\n  \"icon\": \"elements\",\n  \"order\": 6\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"HTML Elements\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-ui-lib\"), \" contains styling for the most commonly used \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\n  }), \"HTML Elements\"), \" defined by the UX team at DNB. You may also have a look at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/typography\"\n  }), \"Typography\"), \" for headings and paragraph usage.\"), mdx(\"h3\", null, \"How to use\"), mdx(\"p\", null, \"By default, no HTML element tag will be styled, except for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/typography\"\n  }), \"Headings and Paragraphs\"), \" which are styled by default without defining a class(es).\"), mdx(\"p\", null, \"In order to apply a style, you have to define a CSS class, like:\"), mdx(CodeBlock, {\n    reactLive: true,\n    hidePreview: true,\n    mdxType: \"CodeBlock\"\n  }, \"\\n<a href=\\\"/\\\" className=\\\"dnb-anchor\\\">Text Link</a>\\n<blockquote className=\\\"dnb-blockquote\\\">\\n  Dis leo ala tractatos ei quo.\\n</blockquote>\\n\"), mdx(\"p\", null, \"Although, You have also the possibility to load a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/customisation/styling#additional-packages\"\n  }), \"sub package\"), \", called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-tags\"), \" which applies all the styles to the HTML tags automatically. Use it with caution, as they can effect existing styles as well.\"), mdx(\"h3\", null, \"React JSX\"), mdx(\"p\", null, \"For those using JSX with React, you can simply use the wrapper Components.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { H1, H2, Lead, P, Link } from 'dnb-ui-lib/elements'\\n\\nrender(\\n  <article>\\n    <H1>Semantic h1</H1>\\n    <P>My Paragraph</P>\\n  </article>\\n)\\n\")), mdx(\"p\", null, \"They work seamlessly with Styled Components as well:\"), mdx(ComponentBox, {\n    useRender: true,\n    scope: {\n      Link: Link\n    },\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst StyledLink = styled(Link)`\\n  font-size: var(--font-size-basis);\\n  font-weight: var(--font-weight-default);\\n`\\nrender(<StyledLink href=\\\"/\\\" target=\\\"_blank\\\">Styled Link</StyledLink>)\\n\"), mdx(\"h2\", null, \"Overview\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#anchor-text-link\"\n  }), \"Anchor (Text Link)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#blockquote\"\n  }), \"Blockquote\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lists\"\n  }), \"Lists\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#tables\"\n  }), \"Tables\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#missing-html-elements\"\n  }), \"Select\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#missing-html-elements\"\n  }), \"Radio\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#missing-html-elements\"\n  }), \"Checkbox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#code\"\n  }), \"Code\"))), mdx(Anchor, {\n    mdxType: \"Anchor\"\n  }), mdx(Blockquote, {\n    mdxType: \"Blockquote\"\n  }), mdx(Lists, {\n    mdxType: \"Lists\"\n  }), mdx(Tables, {\n    mdxType: \"Tables\"\n  }), mdx(\"hr\", null), mdx(OtherElements, {\n    mdxType: \"OtherElements\"\n  }), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/elements"},"frontmatter":{"title":"HTML Elements","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"b9bb8b04-73c9-558f-b36f-334ac328854e","prev":{"id":"0b3f7a88-5412-5760-a888-7af866281338","fields":{"slug":"uilib/intro"}},"next":{"id":"3b51cce5-d138-56fa-8ea4-cb0f317b07ec","fields":{"slug":"uilib/getting-started"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}