{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/elements/unstyled","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#unstyled-html-elements","title":"Unstyled HTML Elements","items":[{"url":"#example-usage-of-span","title":"Example usage of span"}]}]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Unstyled HTML Elements\"), mdx(\"p\", null, \"In order to use the inherited \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/skeleton\"\n  }), \"Skeleton\"), \", there are a number of un-styled HTML elements, that do inherit and react to the Skeleton Provider.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Span, Div } from 'dnb-ui-lib/elements'\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Span\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Div\"))), mdx(\"h3\", null, \"Example usage of span\"), mdx(ComponentBox, {\n    \"data-visual-test\": \"span-skeleton\",\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst Box = styled.div`\\n\\tdisplay: grid;\\n\\tplace-items: center;\\n\\twidth: 12rem;\\n\\theight: 4rem;\\n\\tpadding: 0 1rem;\\n\\tbackground-color: white;\\n`\\nconst StyledButton = styled.button`\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\twidth: 100%;\\n\\t&:hover {\\n\\t\\tcolor: var(--color-fire-red);\\n\\t}\\n\\t&:active {\\n\\t\\topacity: 0.6;\\n\\t}\\n`\\nconst CustomImage = () => {\\n\\tconst [state, setState] = React.useState(false)\\n\\treturn (\\n\\t\\t<Skeleton show={state}>\\n\\t\\t\\t<Box>\\n\\t\\t\\t\\t<StyledButton className=\\\"dnb-button dnb-button--reset\\\">\\n\\t\\t\\t\\t\\t<Span>Text</Span>\\n\\t\\t\\t\\t\\t<IconPrimary icon=\\\"chevron_right\\\" />\\n\\t\\t\\t\\t</StyledButton>\\n\\t\\t\\t</Box>\\n\\t\\t\\t<br />\\n\\t\\t\\t<Skeleton.Exclude>\\n\\t\\t\\t\\t<ToggleButton checked={state} on_change={({ checked }) => setState(checked)} top=\\\"large\\\">Toggle</ToggleButton>\\n\\t\\t\\t</Skeleton.Exclude>\\n\\t\\t</Skeleton>\\n\\t)\\n}\\nrender(<CustomImage />)\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/elements"},"frontmatter":{"title":"HTML Elements","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"4350d4b3-274a-5025-8c63-2ce287aa02b8","prev":{"id":"97817a2f-e9fb-5dbc-9f25-08b7e3595070","fields":{"slug":"uilib/elements/tables"}},"next":{"id":"24277afd-661b-527d-a6f3-c40d823a5207","fields":{"slug":"uilib/elements/not-supported"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}