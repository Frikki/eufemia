{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/helpers/classes",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/helpers/classes","frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#core-style","title":"Core style","items":[{"url":"#example","title":"Example"}]},{"url":"#tab-focus","title":"Tab focus","items":[{"url":"#example-1","title":"Example"}]},{"url":"#skip-link","title":"Skip link","items":[{"url":"#example-2","title":"Example"}]},{"url":"#spacing","title":"Spacing","items":[{"url":"#example-3","title":"Example"}]},{"url":"#scrollbar-appearance","title":"Scrollbar appearance"},{"url":"#screen-reader-sr-only","title":"Screen Reader (sr) only","items":[{"url":"#example-4","title":"Example"},{"url":"#screen-reader-only-inline","title":"Screen Reader only: inline"},{"url":"#not-screen-reader-only","title":"Not Screen Reader only"}]},{"url":"#drop-shadow","title":"Drop shadow","items":[{"url":"#css-properties","title":"CSS properties"}]},{"url":"#responsive-component","title":"Responsive component"},{"url":"#unstyled-list","title":"Unstyled list","items":[{"url":"#example-5","title":"Example"}]},{"url":"#selection","title":"Selection","items":[{"url":"#example-6","title":"Example"}]},{"url":"#html-class-naming","title":"HTML class naming","items":[{"url":"#sass-and-mixins","title":"SASS and mixins"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Reusing classes in the markup instead of using SCSS extends or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"mixins\"), \" will prevent duplication in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \". So also your application will have good benefits from reusing these helper classes.\"), mdx(\"h2\", null, \"Core style\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-core-style\")), mdx(\"p\", null, \"In order to be able to have the core Body Style inside a wrapper and available for all its children. The Body Style contains among others styles, the correct color, line-height, font and a CSS reset.\"), mdx(\"h3\", null, \"Example\"), mdx(CoreStyleExample, {\n    mdxType: \"CoreStyleExample\"\n  }), mdx(\"h2\", null, \"Tab focus\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-tab-focus\")), mdx(\"p\", null, \"Removes default focus outline from a focusable element and adds a custom visual focus state when is focused by a tab key.\\nThere is also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dnb-mouse-focus\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dnb-focus-ring\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dnb-no-focus\"))), mdx(\"h3\", null, \"Example\"), mdx(TabFocusExample, {\n    mdxType: \"TabFocusExample\"\n  }), mdx(\"h2\", null, \"Skip link\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-skip-link\")), mdx(\"p\", null, \"A default Skip Link style, for adding a link at the top of each page that goes directly to the main content area.\"), mdx(\"h3\", null, \"Example\"), mdx(SkipLinkExample, {\n    mdxType: \"SkipLinkExample\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<body>\\n  <a class=\\\"dnb-skip-link\\\" href=\\\"#content-id\\\">Skip to content</a>\\n  <header>\\n    <nav>\\n      <!-- Nav links or content to skip -->\\n    </nav>\\n  </header>\\n  <main id=\\\"content-id\\\">\\n    <!-- Content goes here -->\\n  </main>\\n</body>\\n\")), mdx(\"p\", null, \"More details in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/accessibility/focus#skip-link\"\n  }, \"Focus Section\"), \".\"), mdx(\"h2\", null, \"Spacing\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-spacing\")), mdx(\"p\", null, \"Sets default spacing (using \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"margin\"), \") on all HTML elements inside the container with this style. The default spacing is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-bottom: 1.5rem\"), \", but spesific margins are defined for headings, lists and tables.\"), mdx(\"h3\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<article class=\\\"dnb-spacing\\\">\\n  <!-- DNB spacings -->\\n  <h1 class=\\\"dnb-h--xx-large\\\">\\n    e.g. I have now the Eufemia spacing (margin)\\n  </h1>\\n  <p class=\\\"dnb-p\\\">\\uD83D\\uDC49 Me as well</p>\\n</article>\\n\")), mdx(\"p\", null, \"More details in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/customisation/styling#spacing\"\n  }, \"Styling\"), \".\"), mdx(\"h2\", null, \"Scrollbar appearance\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-scrollbar-appearance\")), mdx(\"p\", null, \"Define the DNB scrollbar appearance, including the color \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--color-emerald-green\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transparent\"), \".\"), mdx(\"p\", null, \"NB: Browser support is not fully covered (2021).\"), mdx(\"h2\", null, \"Screen Reader (sr) only\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only\")), mdx(\"p\", null, \"Visually hides an element, but is still reachable by screen readers. (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"sr\"), \" stands for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Screen Reader\"), \")\"), mdx(\"h3\", null, \"Example\"), mdx(ScreenReaderOnlyExample, {\n    mdxType: \"ScreenReaderOnlyExample\"\n  }), mdx(\"h3\", null, \"Screen Reader only: inline\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only--inline\")), mdx(\"p\", null, \"Like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only\"), \" - but with flow elements in mind. This enables a set of text (in a paragraph \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<p>\"), \") to be enhanced with spans inside without NVDA to split up reading the text.\"), mdx(\"h3\", null, \"Not Screen Reader only\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-not-sr-only\")), mdx(\"p\", null, \"The opposite of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only\"), \", so not visible to screen readers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<p>text <span class=\\\"dnb-sr-only--inline\\\">sr-only</span> text</p>\\n\")), mdx(NoScreenReaderExample, {\n    mdxType: \"NoScreenReaderExample\"\n  }), mdx(\"h2\", null, \"Drop shadow\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-drop-shadow\")), mdx(\"p\", null, \"Adds a default drop shadow, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"box-shadow: 0 8px 16px rgba(51, 51, 51, 0.08)\"), \", to the component. The current shadow spesification is designed to be less sharp and more blurry.\"), mdx(\"h3\", null, \"CSS properties\"), mdx(\"p\", null, \"The DNB Drop shadow is also available as a CSS Custom Property:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import properties from '@dnb/eufemia/style/properties.js'\\n\\nconst cssBoxShadow = properties['--shadow-default']\\n\")), mdx(\"p\", null, \"If you only want to apply parts of the property, these are available as well:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--shadow-default-x: 0;\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--shadow-default-y: 8px;\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--shadow-default-blur-radius: 16px;\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--shadow-default-color: rgba(51, 51, 51, 0.08);\"))), mdx(\"h2\", null, \"Responsive component\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-responsive-component\")), mdx(\"p\", null, \"Makes some component form components, like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/components/input\"\n  }, \"Input\"), \" react to small sized screens. But as this can have some negative effects to have this enabled by default, you can enable this optionally using this helper class.\"), mdx(\"h2\", null, \"Unstyled list\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-unstyled-list\")), mdx(\"p\", null, \"Removes default styling for lists. Applies to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ul\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ol\"), \" elements.\"), mdx(\"h3\", null, \"Example\"), mdx(UnstyledListExample, {\n    mdxType: \"UnstyledListExample\"\n  }), mdx(\"h2\", null, \"Selection\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-selection\")), mdx(\"p\", null, \"Applies the DNB selection colors to the selected content.\"), mdx(\"p\", null, \"Eufemia uses custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"::selection\"), \" colors to enhance the contrast and to play well against the many green colors.\\nEvery HTML class that starts with the prefix \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-\"), \" will be effected. In some circumstances you can simply make use of the class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".dnb-selection\"), \", which applies the styles below on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"::selection\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"background-color: var(--color-mint-green);\\ncolor: var(--color-black);\\ntext-shadow: none;\\n\")), mdx(\"h3\", null, \"Example\"), mdx(SelectionExample, {\n    mdxType: \"SelectionExample\"\n  }), mdx(\"h2\", null, \"HTML class naming\"), mdx(\"p\", null, \"To ensure a consistent class structure and to ensure that the class is owned by the DNB UI Library, all classes in the UI Library are prefixed with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-\"), \". Read more about that in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/contribution/naming\"\n  }, \"Naming conventions\"), \".\"), mdx(\"h3\", null, \"SASS and mixins\"), mdx(\"p\", null, \"All CSS helper classes are to be found in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/style/core/helper-classes/helper-classes.scss\"), \"\\nMost helper classes are SCSS \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"mixins\"), \" which are then applied to the class when invoked.\"), mdx(\"p\", null, \"You can import Eufemia \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"mixins\"), \" directly into your SCSS styles:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scss\"\n  }, \"@import '@dnb/eufemia/style/core/utilities.scss';\\n\\n/** State handling */\\n@include hover {\\n}\\n@include focus {\\n}\\n@include active {\\n}\\n\\n/** Media Queries and Breakpoints */\\n@include allBelow(large) {\\n}\\n@include allAbove(small) {\\n}\\n\\n/** Screen Reader Only */\\n@include srOnly() {\\n} // .dnb-sr-only\\n@include srOnlyInline() {\\n} // .dnb-sr-only--inline\\n\\n/** Browser Checks */\\n@include IS_IE {\\n}\\n@include IS_EDGE {\\n}\\n@include IS_FF {\\n}\\n@include IS_CHROME {\\n}\\n@include IS_SAFARI_MOBILE {\\n}\\n@include IS_SAFARI_DESKTOP {\\n}\\n\\n/** Eufemia DropShadow */\\n@include defaultDropShadow();\\n\\n/** Eufemia Border helpers */\\n@include fakeFocus(\\n  /* $whatinput: 'keyboard', $color: var(--color-emerald-green), $inset: inset */\\n);\\n@include fakeBorder(\\n  /* $color: var(--color-emerald-green), $width: 0.0625rem, $inset: inset */\\n);\\n@include extendFakeFocus(\\n  /* $first-color: null, $second-color: null, width: 0.0625rem */\\n);\\n\\n/** Scroll behavior */\\n@include scrollY(/* $mode: scroll */);\\n@include scrollX(/* $mode: scroll */);\\n@include hideScrollbar();\\n@include scrollbarAppearance();\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/helpers","frontmatter":{"menuTitle":null,"title":"Helpers","description":"A couple of helper functions used inside of components and extensions.","fullscreen":null,"showTabs":true,"hideTabs":null,"tabs":[{"title":"Info","key":"/uilib/helpers/info"},{"title":"CSS Classes","key":"/uilib/helpers/classes"},{"title":"Functions","key":"/uilib/helpers/functions"}]}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"fd0202f1-f73a-51c3-8f93-d717900b635b","slug":"uilib/helpers/classes","prev":{"id":"06991abe-50c1-508a-978e-34dfcc44840d","slug":"uilib/getting-started/requirements"},"next":{"id":"86e65643-b2cd-561d-9f74-5809dfa60ceb","slug":"uilib/helpers/info"}}},
    "staticQueryHashes": ["2315317908","4227086163","573224243"]}