{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/intro/07-typography",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/intro/07-typography","frontmatter":{"title":"","description":null,"fullscreen":true,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#typography","title":"Typography"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"fullscreen\": true,\n  \"search\": \"Intro - Typography\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar IntroFooter = makeShortcode(\"IntroFooter\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, mdx(\"h1\", null, \"Typography\"), mdx(\"p\", null, \"Fonts are handled automatically once the CSS packages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-core\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-basis\"), \" are loaded.\"), mdx(\"p\", null, \"Every typography HTML element, like headings and paragraphs, have a defined \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \", respective \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"line-height\"), \" so everything falls exactly into the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8 pixel grid\"), \".\"), mdx(\"p\", null, \"You don't need to define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-family\"), \" ever, but rather use CSS Custom Properties for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/font-weights\"\n  }, \"font-weight\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/typography/font-size\"\n  }, \"font-size\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/typography/line-height\"\n  }, \"line-height\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".selector {\\n  font-weight: var(--font-weight-medium);\\n}\\n\")), mdx(\"p\", null, \"The default \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"!/uilib/typography/font-weights\"\n  }, \"font-weight\"), \" is currently \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Book\"), \", alongside \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Demi\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Medium\"), \".\"), mdx(\"p\", null, \"The default \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"font lining\"), \" is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proportional Lining\"), \". But in some circumstances you may use, alongside with the UX designer, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"!/uilib/typography/numbers\"\n  }, \"Tabular Lining\"), \".\"), mdx(\"p\", null, \"Read \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"!/uilib/typography\"\n  }, \"more about Typography\")), mdx(\"hr\", null), mdx(IntroFooter, {\n    href: \"/uilib/intro/08-color-usage\",\n    text: \"Next - Color usage\",\n    mdxType: \"IntroFooter\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/intro","frontmatter":{"menuTitle":null,"title":"","description":null,"fullscreen":true,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"231d681e-1aca-575f-a1f2-57af854cf68f","slug":"uilib/intro/07-typography","prev":{"id":"65cf4e1d-dac5-59eb-a85f-1e71634dbdea","slug":"uilib/intro/06-css-packages"},"next":{"id":"1272637f-702c-55c0-ae32-e9d1089d4eef","slug":"uilib/intro/08-color-usage"}}},
    "staticQueryHashes": ["2315317908","3001307379","573224243"]}