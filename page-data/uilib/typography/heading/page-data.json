{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/typography/heading","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null,"showTabs":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"showTabs\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Headings\"), mdx(\"p\", null, \"The DNB UX team has defined three levels of heading styles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h-xx--large\"), \" (Heading xx-large)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h-x--large\"), \" (Heading x-large)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--large\"), \" (Heading large)\")), mdx(\"p\", null, \"Also available are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--medium\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--basis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--small\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--x-small\"))), mdx(\"p\", null, \"Optional, you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".dnb-lead\"), \" (equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".dnb-h--medium\"), \") to style a heading as well. But only if that would make sense in the particular context.\"), mdx(\"p\", null, \"The sizes are aligned to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/typography/font-size\"\n  }), \"font-size definitions\"), \".\"), mdx(\"h3\", null, \"Think semantics first\"), mdx(\"p\", null, \"You should \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/best-practices/for-typography#headings-and-styling\"\n  }), \"think semantics first\"), \" once you choose what level of heading you use. Always try to start with an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<h1>\"), \". Later on you can style them properly.\"), mdx(\"p\", null, \"If you have to use a paragraph or a arbitrary heading, and it has to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"look like\"), \" a specific heading, you can use these classes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--xx-large\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--x-large\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h--large\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"etc.\")), mdx(\"p\", null, \"Read more about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/best-practices/for-typography\"\n  }), \"best practices for typography\"), \".\"), mdx(\"h3\", null, \"Automated heading levels\"), mdx(\"p\", null, \"There is also \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/heading\"\n  }), \"Heading\"), \", a component to create automated semantic headings within a boundary of some rules.\"), mdx(\"h3\", null, \"Heading styles in React\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { H1, H2, ... } from 'dnb-ui-lib/elements'\\n\\n<H1>Heading style xx-large</H1>\\n<H1 size=\\\"small\\\">Heading style small</H1>\\n\\n/** These are equivalent */\\n<H1><small>Heading style x-large</small></H1>\\n<H1 modifier=\\\"small\\\">Heading style x-large</H1>\\n\")), mdx(ComponentBox, {\n    caption: \"Default Heading typography using React JSX\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<H1 bottom=\\\"large\\\">Heading style xx-large</H1>\\n<H1 size=\\\"x-large\\\">Heading style x-large (one down)</H1>\\n<H1 size=\\\"small\\\">Heading style small</H1>\\n<H2>Heading style large</H2>\\n\"), mdx(\"h3\", null, \"Heading styles in vanilla HTML\"), mdx(ComponentBox, {\n    hideCode: true,\n    \"data-dnb-test\": \"heading-default\",\n    caption: \"Heading styles in vanilla HTML\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<h1 className=\\\"dnb-h--xx-large\\\">Heading style xx-large</h1>\\n<h2 className=\\\"dnb-h--x-large\\\">Heading style x-large</h2>\\n<h5 className=\\\"dnb-h--large\\\">Heading style large</h5>\\n<h3 className=\\\"dnb-h--small\\\">Heading style small</h3>\\n<h3 className=\\\"dnb-h--basis\\\">Heading style basis</h3>\\n\"), mdx(ComponentBox, {\n    hideCode: true,\n    \"data-dnb-test\": \"heading-additional\",\n    caption: \"Additional Heading modifiers\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<article>\\n  <h1 className=\\\"dnb-h--xx-large\\\">\\n    <small>dnb-h--x-large</small> Normal dnb-h--xx-large\\n  </h1>\\n  <h2 className=\\\"dnb-h--large\\\">\\n    Normal dnb-h--large <small>dnb-h--medium</small>\\n  </h2>\\n  <h3 className=\\\"dnb-lead\\\">\\n    Normal dnb-h--medium <small>dnb-h--basis</small>\\n  </h3>\\n</article>\\n\"), mdx(\"h3\", null, \"Example of margin collapsing\"), mdx(ComponentBox, {\n    caption: \"Only the largest margin takes effect\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<H1 size=\\\"small\\\" top bottom=\\\"small\\\">Spacing with bottom margin: small</H1>\\n<P top=\\\"large\\\" bottom=\\\"small\\\">Spacing with top margin: large</P>\\n<P no_collapse top=\\\"large\\\" bottom=\\\"small\\\">Spacing + no_collapse with top margin: large</P>\\n<P no_collapse top=\\\"large\\\">Spacing + no_collapse with top margin: large</P>\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/typography"},"frontmatter":{"title":"Typography","menuTitle":null,"showTabs":true,"tabs":[{"title":"General","key":"/uilib/typography$1"},{"title":"Headings","key":"/uilib/typography/heading$1"},{"title":"Paragraphs","key":"/uilib/typography/paragraph$1"}],"hideTabs":null}}]}},"pageContext":{"id":"751d4dd3-86fc-51fc-b9e3-be1d824cf4d2","prev":{"id":"f455729f-c457-50ee-bd84-a4f327824997","fields":{"slug":"uilib/typography/numbers"}},"next":{"id":"e78617cf-6be9-5ca0-8b6c-c7920bcef837","fields":{"slug":"uilib/typography/font-weight"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}