{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/typography","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Typography","description":"DNB Headings and paragraphs, their properties and styling.","fullscreen":null,"showTabs":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Typography\",\n  \"description\": \"DNB Headings and paragraphs, their properties and styling.\",\n  \"icon\": \"typography\",\n  \"order\": 5,\n  \"showTabs\": true,\n  \"tabs\": [{\n    \"title\": \"General\",\n    \"key\": \"/uilib/typography$1\"\n  }, {\n    \"title\": \"Headings\",\n    \"key\": \"/uilib/typography/heading$1\"\n  }, {\n    \"title\": \"Paragraphs\",\n    \"key\": \"/uilib/typography/paragraph$1\"\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Typography in general\"), mdx(\"p\", null, \"Fonts are handled automatically once the CSS packages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-core\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-basis\"), \" are loaded.\"), mdx(\"p\", null, \"Every typography HTML element, like headings and paragraphs, have a defined \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \", respective \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"line-height\"), \" so everything falls exactly into the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8 pixel grid\"), \".\"), mdx(\"p\", null, \"You don't need to define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-family\"), \" ever, but rather use CSS Custom Properties for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-weight\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-size\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"line-height\"), \".\"), mdx(\"h3\", null, \"Typography property tables\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/typography/font-weight\"\n  }), \"font-weight\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/typography/font-size\"\n  }), \"font-size\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/typography/line-height\"\n  }), \"line-height\"))), mdx(\"h2\", null, \"Font Face\"), mdx(\"p\", null, \"The DNB default Font Family is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DNB\"), \". This font, together with it's weights is loaded and imported with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@font-face\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/css/core/fonts.scss\"), \". The font family is included in the library package.\"), mdx(\"h2\", null, \"Spacing and margin collapsing\"), mdx(\"p\", null, \"You can use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/space/properties\"\n  }), \"Spacing properties\"), \" inside every Eufemia React Element, but keep in mind, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\"\n  }), \"margin collapsing\"), \" can some times a little tricky to get right.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { H1, H2, ... } from 'dnb-ui-lib/elements'\\n\\n<H1 bottom=\\\"x-large\\\">Heading with bottom margin: x-large</H1>\\n<H2 top=\\\"x-large\\\">Heading with top margin: x-large</H2>\\n\")), mdx(\"h2\", null, \"Anchor\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor\"\n  }, \"Anchor with default style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--hover\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--hover\"\n  }, \"Hover Style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--active\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--active\"\n  }, \"Active Style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--focus\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--focus\"\n  }, \"Focus Style\"))), mdx(\"p\", null, \"Read more about the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/elements/anchor\"\n  }), \"Anchor / Text Link\")), mdx(\"h2\", null, \"DNB Mono (monospace)\"), mdx(\"p\", null, \"DNB hast it's own monospace typeface (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-family\"), \").\"), mdx(\"p\", null, \"Use it either by a CSS class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".dnb-typo-mono-regular\"), \" or define your own like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".css-selector {\\n  font-family: var(--font-family-monospace);\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"__typename":"Mdx","fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}},{"__typename":"Mdx","fields":{"slug":"uilib/typography"},"frontmatter":{"title":"Typography","menuTitle":null,"showTabs":true,"tabs":[{"title":"General","key":"/uilib/typography$1"},{"title":"Headings","key":"/uilib/typography/heading$1"},{"title":"Paragraphs","key":"/uilib/typography/paragraph$1"}],"hideTabs":null}}]}},"pageContext":{"id":"083c94e5-96a6-598c-8ba3-80f0ade985b2","prev":{"id":"2c5b290b-954b-5528-9256-6c6f40fb4bc4","fields":{"slug":"uilib/performance-test"}},"next":{"id":"95d5e676-eaa4-5b91-92b7-418149ed972b","fields":{"slug":"design-system/about/living-system"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}