{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/usage/accessibility/checklist/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/usage/accessibility/checklist","frontmatter":{"title":"Checklist","description":"Accessibility checklist to help you remember the most important tasks you have to follow during front end development.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#accessibility-checklist","title":"Accessibility Checklist","items":[{"url":"#viewport","title":"Viewport"},{"url":"#landmark--and-semantics-example","title":"Landmark- and semantics example"},{"url":"#practical-support-of-aria-labels","title":"Practical Support of ARIA labels"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Checklist\",\n  \"description\": \"Accessibility checklist to help you remember the most important tasks you have to follow during front end development.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Accessibility Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Follow \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"semantics\"), \" properly, use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"landmarks\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/checklist#landmark--and-semantics-example\"\n  }, \"landmark and semantic example\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Ensure correct \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/best-practices/for-typography#headings-and-styling\"\n  }, \"heading levels\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Use different \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"screen readers\"), \" and test \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/screenreader\"\n  }, \"regularly\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Make sure, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/layout#web-applications\"\n  }, \"everything is responsive\"), \" - use mostly the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rem\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/best-practices/for-styling#units\"\n  }, \"unit\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Make everything accessible for \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility#keyboard-users\"\n  }, \"keyboard navigation only\"), \" and handle \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/focus#managing-the-focus-state\"\n  }, \"focus management\"), \" properly.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Group form elements inside \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<fieldset />\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<legend />\"), \". The \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/components/form-row\"\n  }, \"FormRow\"), \" is doing this by default.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Do never expose a form element as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"disabled\"), \" to the user. Use good UX instead.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Have a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/focus#skip-link\"\n  }, \"Skip Link\"), \" in place if the user has to tab many times to reach the main content.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Make good use of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/screenreader#usage-of-aria-label-aria-labelledby-and-aria-describedby\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"aria-label\")), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-hidden\"), \", e.g. of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/icons#decorative-icons\"\n  }, \"decorative content\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Make \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/usage/accessibility/screenreader#images-and-illustrations\"\n  }, \"images and illustrations\"), \" accessible.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Have \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-live\"), \" in place for dynamic content, like updates coming from the server.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Hide \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"invisible content\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"display: none;\"), \" or with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hidden\"), \" attribute, or remove the markup entirely (with React States).\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Properly use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"for=\\\"#id\\\"\"), \" attribute on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#Attributes\"\n  }, \"labels\"), \". Every \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/uilib/components\"\n  }, \"form component\"), \" is supporting internal label usage, like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Input label=\\\"Input label:\\\" />\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Allow viewport zooming in web pages. Example below.\")), mdx(\"h2\", null, \"Viewport\"), mdx(\"p\", null, \"Allow zooming in web pages, especially important on touch and mobile devices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<meta\\n  name=\\\"viewport\\\"\\n  content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=yes\\\"\\n/>\\n\")), mdx(\"h2\", null, \"Landmark- and semantics example\"), mdx(\"p\", null, \"Example usage of HTML5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"landmarks\"), \" (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<nav>\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<section>\"), \" etc.):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<body>\\n  <header>Header</header>\\n  <nav>Main navigation</nav>\\n\\n  <main role=\\\"main\\\">\\n\\n    <section aria-label=\\\"I'm now a region\\\">\\n      <h1 class=\\\"dnb-h--large\\\">h1 styled as h2</h1>\\n      <p class=\\\"dnb-o\\\">text</p>\\n    </section>\\n\\n    <article>\\n      <h2 class=\\\"dnb-h--xx-large\\\">h2 styled as h1</h2>\\n      <h3 class=\\\"dnb-h--medium\\\">h3</h2>\\n      <h4 class=\\\"dnb-h--basis\\\">h4</h2>\\n      ...\\n    </article>\\n\\n    <article>\\n      <header>I'm not a landmark anymore, because I'm inside article</header>\\n      <h2 class=\\\"dnb-h--large\\\">Another article h2</h2>\\n      ...\\n      <footer>I'm not a landmark anymore, because I'm inside article</footer>\\n    </article>\\n\\n  </main>\\n\\n  <aside>Aside the main landmark</aside>\\n\\n  <footer>Footer</footer>\\n</body>\\n\")), mdx(\"p\", null, \"Read more about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3.org/TR/wai-aria-practices/examples/landmarks/HTML5.html\"\n  }, \"HTML landmarks and sectioning elements\"), \".\"), mdx(\"h2\", null, \"Practical Support of ARIA labels\"), mdx(\"p\", null, \"You may be interested to read more about aria labels in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/accessibility/screenreader#usage-of-aria-label-aria-labelledby-and-aria-describedby\"\n  }, \"Screen readers section\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/usage/accessibility","frontmatter":{"menuTitle":null,"title":"Accessibility","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib/usage","frontmatter":{"menuTitle":null,"title":"Usage","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"4f806281-25b5-5ee0-ba44-d5e8e600c850","slug":"uilib/usage/accessibility/checklist","prev":{"id":"5f1c80e5-71b2-5628-8f15-1ea3b586a069","slug":"uilib/usage/accessibility/about-accessibility","frontmatter":{"title":"","description":null}},"next":{"id":"ddbbd2c8-984b-5da5-a681-7d4a6662a944","slug":"uilib/usage/accessibility/focus","frontmatter":{"title":"Focus","description":"Accessibility helpers to handle focus management and Skip Link usage."}}}},"staticQueryHashes":["2315317908","3001504130","573224243"]}