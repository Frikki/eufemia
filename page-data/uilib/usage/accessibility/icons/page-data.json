{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/usage/accessibility/icons","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Icons","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Icons\",\n  \"draft\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Accessibility of Icons\"), mdx(\"p\", null, \"By using inline SVG, we have the possibility to make graphical assets both \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"responsive\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"interactive\"), \". In order to do so, use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/icon\"\n  }), \"Icon\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/icon-primary\"\n  }), \"IconPrimary\"), \" component. These components provide the needed runtime processing.\"), mdx(\"h2\", null, \"Decorative Icons\"), mdx(\"p\", null, \"If your icons are purely \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"decorative\"), \", you\\u2019ll need to manually add an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"aria-hidden\"), \" (results in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-hidden=\\\"true\\\"\"), \") attribute to each of your icons so your app is \\\"accessible\\\".\"), mdx(ComponentBox, {\n    scope: {\n      Beach: Beach\n    },\n    mdxType: \"ComponentBox\"\n  }, \"\\n<Icon icon={Beach} size=\\\"64\\\" title=\\\"Beach\\\" aria-hidden=\\\"true\\\" />\\n\"), mdx(\"h2\", null, \"Responsive Icons\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"auto\\\"\"), \" to force the icon to inherit the size of its parent element.\"), mdx(ComponentBox, {\n    scope: {\n      Beach: Beach\n    },\n    mdxType: \"ComponentBox\"\n  }, \"\\n<h1>My H1 with an icon <Icon icon={Beach} title=\\\"Beach\\\" size=\\\"auto\\\" /></h1>\\n<h4>My H4 with the same icon <Icon icon={Beach} title=\\\"Beach\\\" size=\\\"auto\\\" /></h4>\\n\"), mdx(\"h2\", null, \"SVG Icons\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Scalable Vector Graphics\"), \" can be set up to be scaleable and actually respond to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-size\"), \".\"), mdx(ComponentBox, {\n    scope: {\n      Beach: Beach\n    },\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst Responsive = styled.span`\\n  svg {\\n    font-size: inherit;\\n    width: 1.5em;\\n    height: 1.5em;\\n  }\\n`\\n\\nconst Svg = (props) => (<svg\\n  width=\\\"16\\\"\\n  height=\\\"16\\\"\\n  viewBox=\\\"0 0 16 16\\\"\\n  fill=\\\"none\\\"\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  {...props}\\n>\\n  <path\\n    fillRule=\\\"evenodd\\\"\\n    clipRule=\\\"evenodd\\\"\\n    d=\\\"M4.03 5.22a.75.75 0 0 0-1.06 1.06l4.5 4.5a.75.75 0 0 0 1.06 0l4.5-4.5a.75.75 0 0 0-1.06-1.06L8 9.19 4.03 5.22z\\\"\\n    fill=\\\"#000\\\"\\n  />\\n</svg>)\\n\\nrender(<>\\n  <p>\\n    <Svg width=\\\"24\\\" height=\\\"24\\\" /> - has a fixed size\\n  </p>\\n  <p>\\n    <Responsive><Svg /></Responsive> - is responsive\\n  </p>\\n  <p>\\n    <span className=\\\"dnb-icon dnb-icon--medium\\\">\\n      <Svg />\\n    </span> - uses <code>.dnb-icon</code>\\n  </p>\\n</>)\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c6a3f92b-9f7c-576c-a75a-c252b7623ba4","prev":{"id":"638492f5-8cc7-5709-ace4-dd32953d9a11","fields":{"slug":"uilib/usage/accessibility/focus"}},"next":{"id":"1f3e1c2a-4c01-55dd-a99a-0b2859dac6db","fields":{"slug":"uilib/usage/accessibility/screenreader"}}}}}