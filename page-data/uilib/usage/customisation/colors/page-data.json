{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/usage/customisation/colors/","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/usage/customisation/colors","frontmatter":{"title":"Colors","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#colors","title":"Colors","items":[{"url":"#polyfill","title":"Polyfill"},{"url":"#example-usage","title":"Example usage"},{"url":"#colors-table","title":"Colors Table"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Colors\",\n  \"order\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Colors\"), mdx(\"p\", null, \"All Colors are provided by CSS Custom Properties.\"), mdx(\"p\", null, \"You may have a look at the Quick Guide for Designers \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/quickguide-designer/colors\"\n  }, \"About Colors\"), \".\"), mdx(\"h2\", null, \"Polyfill\"), mdx(\"p\", null, \"Read more about why and how to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/customisation/styling/polyfill\"\n  }, \"use a polyfill\"), \".\"), mdx(\"h2\", null, \"Example usage\"), mdx(ComponentBox, {\n    hideCode: true,\n    useRender: true,\n    mdxType: \"ComponentBox\"\n  }, \"\\nconst ParagraphStyled = styled(P)`\\n  color: var(--color-sky-blue);\\n`\\nrender(<ParagraphStyled>I'm Sky blue.</ParagraphStyled>)\\n\"), mdx(\"h2\", null, \"Colors Table\"), mdx(ColorsTable, {\n    mdxType: \"ColorsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/usage/customisation","frontmatter":{"menuTitle":null,"title":"Customization","description":"Customization and tools is a section dedicated to how to use and customize Eufemia in various situations.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib/usage","frontmatter":{"menuTitle":null,"title":"Usage","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"0733301c-5921-5eaa-b44a-73f1dc2a0226","slug":"uilib/usage/customisation/colors","prev":{"id":"ca4d9f8c-7fe1-5ecf-8225-52febf108930","slug":"uilib/usage/best-practices/for-styling","frontmatter":{"title":"Best Practices for styling","description":null}},"next":{"id":"bc60fdda-b662-5e3e-b059-e2f5a91c0842","slug":"uilib/usage/best-practices/for-typography","frontmatter":{"title":"Best Practices for typography","description":null}}}},"staticQueryHashes":["2315317908","3001504130","573224243"]}