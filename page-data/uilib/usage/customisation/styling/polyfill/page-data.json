{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/uilib/usage/customisation/styling/polyfill",
    "result": {"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"slug":"uilib/usage/customisation/styling/polyfill","frontmatter":{"title":"Polyfill","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null},"tableOfContents":{"items":[{"url":"#properties-polyfill","title":"Properties Polyfill","items":[{"url":"#post-css","title":"Post CSS","items":[{"url":"#post-css-and-create-react-app","title":"Post CSS and Create React App"}]},{"url":"#sass-scss--less","title":"SASS (SCSS) / LESS"},{"url":"#css-in-js","title":"CSS-in-JS","items":[{"url":"#css-properties-variables","title":"CSS Properties (variables)"},{"url":"#styled-components","title":"Styled Components","items":[{"url":"#add-custom-properties","title":"Add custom properties:"}]},{"url":"#emotion","title":"Emotion"}]}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Polyfill\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Properties Polyfill\"), mdx(\"p\", null, \"By using Eufemia properties, like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/customisation/colors\"\n  }, \"color names\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/typography\"\n  }, \"typography properties\"), \", instead of defining colors and typography directly as hard coded values, you make your code much more readable and future proof in terms of refactoring and new enhancements. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/getting-started/maintainability\"\n  }, \"Maintainability\"), \" is important. But it fits also better in thinking of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/getting-started/living-system\"\n  }, \"Living system\"), \" terms.\"), mdx(\"p\", null, \"But as long as we have to support legacy browsers like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"!/uilib/usage#supported-browsers-and-platforms\"\n  }, \"Internet Explorer\"), \" we have to deal with a fallback or polyfill.\"), mdx(\"h2\", null, \"Post CSS\"), mdx(\"p\", null, \"Use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/csstools/postcss-preset-env\"\n  }, \"postcss-preset-env\"), \". Example \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org\"\n  }, \"webpack\"), \" loader config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"{\\n  loader: 'postcss-loader',\\n  options: {\\n    ident: 'postcss',\\n    plugins: () => [\\n      postcssPresetEnv({\\n        stage: 0,\\n        preserve: true,\\n        browsers: ['last 2 versions', 'explorer >= 11'],\\n        importFrom: [require.resolve('@dnb/eufemia/style/dnb-ui-properties.css')]\\n      })\\n    ]\\n  }\\n},\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Notes\"), \": Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"preserve: true\"), \" so we get the calc from vars \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"calc(var() + var())\"), \", to get processed for IE later with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/postcss/postcss-calc\"\n  }, \"postcss-calc\"), \" if this is needed.\"), mdx(\"h3\", null, \"Post CSS and Create React App\"), mdx(\"p\", null, \"Here's an example \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codesandbox.io/s/eufemia-scss-polyfill-knfpz?file=/config-overrides.js\"\n  }, \"CRA Codesandbox\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postcss\"), \" config and omit of file hashing.\"), mdx(\"h2\", null, \"SASS (SCSS) / LESS\"), mdx(\"p\", null, \"Use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/customisation/styling/polyfill#post-css\"\n  }, \"Post CSS\"), \" method.\"), mdx(\"h2\", null, \"CSS-in-JS\"), mdx(\"p\", null, \"For \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CSS-in-JS\"), \" you can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jhildenbiddle/css-vars-ponyfill\"\n  }, \"css-vars-ponyfill\"), \".\"), mdx(\"p\", null, \"In your application root:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// import the polyfill (Ponyfill)\\nimport cssVars from 'css-vars-ponyfill'\\n\\n// run the polyfill\\ncssVars()\\n\")), mdx(\"p\", null, \"But on large applications, the polyfill lacks in stability, therefore we made and recommend using the approach by using the Stylis Plugin method. Se examples below.\"), mdx(\"h3\", null, \"CSS Properties (variables)\"), mdx(\"p\", null, \"You can also import all the main properties as a JavaScript Object:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import properties from '@dnb/eufemia/style/properties'\\n// properties gives you { '--color-sea-green': '#007272', ... }\\n\")), mdx(\"h3\", null, \"Styled Components\"), mdx(\"p\", null, \"Is supported from v5 of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.styled-components.com\"\n  }, \"styled-components\"), \" and above.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import stylisPlugin from '@dnb/eufemia/style/stylis'\\nimport { StyleSheetManager } from 'styled-components'\\n\\nrender(\\n  <StyleSheetManager stylisPlugins={[stylisPlugin]}>\\n    <MyApp />\\n  </StyleSheetManager>\\n)\\n\")), mdx(\"h4\", null, \"Add custom properties:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { withProperties } from '@dnb/eufemia/style/stylis'\\nimport { StyleSheetManager } from 'styled-components'\\n\\nconst stylisPlugin = withProperties({\\n  '--custom-property': 'CSS value',\\n})\\n\\nrender(\\n  <StyleSheetManager stylisPlugins={[stylisPlugin]}>\\n    <MyApp />\\n  </StyleSheetManager>\\n)\\n\")), mdx(\"h3\", null, \"Emotion\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import stylisPlugin from '@dnb/eufemia/style/stylis'\\nimport { CacheProvider } from '@emotion/react'\\nimport createEmotionCache from '@emotion/cache'\\n\\nconst emotionCache = createEmotionCache({\\n  key: 'my-prefix-key',\\n  stylisPlugins: [stylisPlugin],\\n})\\n\\nrender(\\n  <CacheProvider value={emotionCache}>\\n    <MyApp />\\n  </CacheProvider>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","siblings":[{"slug":"uilib/usage/customisation/styling","frontmatter":{"menuTitle":null,"title":"CSS Styles","description":"To ensure flexibility and the possibility of theming, the DNB CSS Styles area built as flexible packages you can import and combine.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib/usage/customisation","frontmatter":{"menuTitle":null,"title":"Customization","description":"Customization and tools is a section dedicated to how to use and customize Eufemia in various situations.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib/usage","frontmatter":{"menuTitle":null,"title":"Usage","description":null,"fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}},{"slug":"uilib","frontmatter":{"menuTitle":null,"title":"UI Library","description":"Buttons, dropdowns, input fields, components etc.","fullscreen":null,"showTabs":null,"hideTabs":null,"tabs":null}}]}},"pageContext":{"id":"8d41dabd-d185-5fe0-a3d7-198a29a23a8a","slug":"uilib/usage/customisation/styling/polyfill","prev":{"id":"57cabe67-b3da-56a5-bf94-d24c9b20dcae","slug":"uilib/usage/customisation/styling/consume-styles"},"next":null}},
    "staticQueryHashes": ["2315317908","3001307379","3001504130","573224243"]}