{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/usage/first-steps/module-formats","result":{"data":{"site":{"siteMetadata":{"title":"Eufemia - DNB Design System","description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"ESM / SSR","description":"Eufemia uses ESM as their default module format. More info on this topic below.","fullscreen":null,"showTabs":null},"tableOfContents":{"items":[{"url":"#esm-and-transpiling","title":"ESM and transpiling","items":[{"url":"#default-module-format","title":"Default module format"},{"url":"#commonjs-cjs","title":"CommonJS (CJS)","items":[{"url":"#ssr","title":"SSR"},{"url":"#nextjs-and-nodejs-version-12-and-above","title":"Next.js and Node.js version 12 and above"},{"url":"#esm-in-nodejs-version-10","title":"ESM in Node.js version 10","items":[{"url":"#jest-and-esm-node-testing-environments","title":"Jest and ESM (Node testing environments)"}]}]},{"url":"#pure-es6","title":"Pure ES6"},{"url":"#tree-shaking","title":"Tree shaking"}]}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ESM / SSR\",\n  \"description\": \"Eufemia uses ESM as their default module format. More info on this topic below.\",\n  \"order\": 8,\n  \"redirect_from\": [\"/uilib/usage/first-steps/es6\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ESM and transpiling\"), mdx(\"p\", null, \"To support every modern front end environment, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \" supports different transpiled module formats:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ESM\"), \" with ES5 (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"default\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ES\"), \" with ES6\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CJS\"), \" with ES5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"UMD\"), \" with ES5\")), mdx(\"h2\", null, \"Default module format\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \" uses \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ESM\"), \" as the default module format. This allows us to more easily and by default \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/uilib/usage/first-steps/es6#tree-shaking\"\n  }, \"tree shaking\"), \" support:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Imports only the code needed for the button\\nimport { Button } from '@dnb/eufemia'\\nimport { Button } from '@dnb/eufemia/esm'\\n\\n// Imports only the code needed for the icon\\nimport { question } from '@dnb/eufemia/icons'\\nimport { question } from '@dnb/eufemia/esm/icons'\\n\")), mdx(\"h2\", null, \"CommonJS (CJS)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nodejs.org/\"\n  }, \"Node.js\"), \" uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://requirejs.org\"\n  }, \"RequireJS\"), \" and has \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://requirejs.org/docs/commonjs.html\"\n  }, \"CommonJS\"), \" as their default module format.\"), mdx(\"h3\", null, \"SSR\"), mdx(\"p\", null, \"In case you are using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \" in a classic Node.js environment, like typical in SSR, you can import or require everything from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/cjs\"), \" subfolder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Components\\nimport { Button } from '@dnb/eufemia/cjs'\\nconst { Button } = require('@dnb/eufemia/cjs/components')\\nconst Button = require('@dnb/eufemia/cjs/components/Button')\\n\\n// Icons\\nimport { question } from '@dnb/eufemia/cjs/icons'\\nconst { question } = require('@dnb/eufemia/cjs/icons')\\nconst question = require('@dnb/eufemia/cjs/icons/question')\\n\\n// Styles\\nimport '@dnb/eufemia/cjs/style'\\nrequire('@dnb/eufemia/cjs/style')\\n\")), mdx(\"h3\", null, \"Next.js and Node.js version 12 and above\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB:\"), \" If you use Next.js with Node.js version 12 and above, we may have to define explicitly that we want to use CommonJS:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { Button } from '@dnb/eufemia/cjs'\\nconst { Button } = require('@dnb/eufemia/cjs/components')\\n\")), mdx(\"p\", null, \"Alternatively, you can make use of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/next-transpile-modules\"\n  }, \"next-transpile-modules\"), \".\"), mdx(\"h3\", null, \"ESM in Node.js version 10\"), mdx(\"p\", null, \"You can easily use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nodejs.org/api/esm.html\"\n  }, \"ESM\"), \" in Node.js environment. Have a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dnbexperience/eufemia-examples/tree/main/packages/example-next\"\n  }, \"Next.js example\"), \".\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"esm\"), \" package: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm i esm -D\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call Node with an environment variable: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NODE_OPTIONS='-r esm' node ...\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"// package.json\\n\\\"start\\\": \\\"NODE_OPTIONS='-r esm' next start ./src\\\"\\n\")), mdx(\"h4\", null, \"Jest and ESM (Node testing environments)\"), mdx(\"p\", null, \"Older Jest versions uses still CommonJS as the default module format. If you use the default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dnb/eufemia\"), \" imports, then you get a mismatch between ES module and CommonJS formats. To ensure that Jest transforms your code in to CSJ, you can use the following Jest configuration \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--moduleNameMapper\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jest --moduleNameMapper '{\\\"@dnb/eufemia(.*)\\\":\\\"@dnb/eufemia/cjs$1\\\"}'\\n\")), mdx(\"p\", null, \"or in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest.config.js\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest.preset.js\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"  module.exports = {\\n    ...\\n    moduleNameMapper: { '@dnb/eufemia(.*)': '@dnb/eufemia/cjs$1' }\\n  }\\n\")), mdx(\"h2\", null, \"Pure ES6\"), mdx(\"p\", null, \"In some cases you may want to import an ES6 version.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// ES6 version of all Components\\nimport { Button } from '@dnb/eufemia/es'\\nimport { Button } from '@dnb/eufemia/es/components'\\n\\n// ES6 version of a single component\\nimport Button from '@dnb/eufemia/es/components/Button'\\n\")), mdx(\"p\", null, \"Make sure your environment has a production build with:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tree Shaking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Compile to ES5 for IE support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minify and mangle the Output\")), mdx(\"p\", null, \"By default, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org\"\n  }, \"webpack v4\"), \" does this fine.\"), mdx(\"h2\", null, \"Tree shaking\"), mdx(\"p\", null, \"To optimize the bundle size, we have several options. It also depends on what is used to make the bundle. Is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org\"\n  }, \"webpack\"), \" used, then you may read a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org/guides/tree-shaking\"\n  }, \"good guide on Tree Shaking\"), \".\"), mdx(\"p\", null, \"If you only need / import a few components, you may consider to import them directly, without named imports (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES5\"), \"):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import MyMaskedInput from '@dnb/eufemia/components/InputMasked'\\nimport MyMaskedInput from '@dnb/eufemia/cjs/components/InputMasked'\\n\\n// or\\nimport Input from '@dnb/eufemia/components/input-masked/InputMasked'\\nimport Input from '@dnb/eufemia/cjs/components/input-masked/InputMasked'\\n\")), mdx(\"p\", null, \"... or as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES6\"), \" imports:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { InputMasked } from '@dnb/eufemia/es/components'\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","children":[{"fields":{"slug":"uilib"},"frontmatter":{"title":"UI Library","menuTitle":null,"showTabs":null,"tabs":null,"hideTabs":null}}]}},"pageContext":{"id":"016b327a-5fc3-5511-b881-97a2a68fcba5","prev":{"id":"3bf00e00-b3e6-5b16-9771-528c15e50794","fields":{"slug":"uilib/usage/first-steps/frameworks"}},"next":{"id":"78dc7321-bb03-5a46-8025-0d6b0bd9a03b","fields":{"slug":"uilib/usage/first-steps/react"}}}},"staticQueryHashes":["2315317908","3433733815","786658678"]}